<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CosmosStack.Validation</name>
    </assembly>
    <members>
        <member name="T:CosmosStack.Validation.Annotations.CustomAnnotationAttribute">
            <summary>
            Custom annotation attribute <br />
            自定义注解特性
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Annotations.CustomAnnotationAttribute.Name">
            <summary>
            Name of this Attribute/Annotation <br />
            注解名
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Annotations.CustomAnnotationAttribute.ErrorMessage">
            <summary>
            Gets or sets message<br />
            消息
            </summary>
        </member>
        <member name="T:CosmosStack.Validation.Annotations.IObjectContextVerifiableAnnotation">
            <summary>
            A ObjectContext Verify Interface <br />
            带对象上下文的可验证接口
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Annotations.IObjectContextVerifiableAnnotation.StrongVerify(CosmosStack.Validation.Objects.VerifiableObjectContext)">
            <summary>
            ObjectContext Verify <br />
            验证
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Annotations.IStrongVerifiableAnnotation">
            <summary>
            A Strong Verify Interface <br />
            强验证接口
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Annotations.IStrongVerifiableAnnotation.StrongVerify``1(``0)">
            <summary>
            Strong Verify <br />
            强验证
            </summary>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Annotations.IStrongVerifiableAnnotation.StrongVerify(System.Type,System.Object)">
            <summary>
            Strong Verify <br />
            强验证
            </summary>
            <param name="type"></param>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Annotations.IStrongVerifiableAnnotation`1">
            <summary>
            A Strong Verify Interface <br />
            强验证接口
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:CosmosStack.Validation.Annotations.IStrongVerifiableAnnotation`1.StrongVerify(`0)">
            <summary>
            Strong Verify <br />
            强验证
            </summary>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Annotations.VerifiableParamsAttribute">
            <summary>
            Validation Parameter attribute <br />
            验证参数特性
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Annotations.VerifiableParamsAttribute.Name">
            <summary>
            Name of this Attribute/Annotation <br />
            注解名
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Annotations.VerifiableParamsAttribute.ErrorMessage">
            <summary>
            Gets or sets message<br />
            消息
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Annotations.VerifiableParamsAttribute.ParamName">
            <summary>
            Gets or sets name of parameter <br />
            参数名
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Annotations.VerifiableParamsAttribute.IgnoreUnexpectedType">
            <summary>
            Unexpected type returns success. <br />
            如果是非期待的类型，是否返回异常。默认为 True。
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Annotations.VerifiableParamsAttribute.IgnoreNullObject">
            <summary>
            Null object returns false. <br />
            忽略 Null
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Annotations.VerifiableParamsAttribute.Invoke(AspectCore.DynamicProxy.Parameters.ParameterAspectContext,AspectCore.DynamicProxy.Parameters.ParameterAspectDelegate)">
            <summary>
            Invoke <br />
            执行
            </summary>
            <param name="context"></param>
            <param name="next"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentInvalidException"></exception>
        </member>
        <member name="M:CosmosStack.Validation.Annotations.VerifiableParamsAttribute.IsValid(AspectCore.DynamicProxy.Parameters.Parameter)">
            <summary>
            IsValid
            </summary>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Annotations.VerifiableParamsAttribute.IsValid(CosmosStack.Validation.Objects.VerifiableMemberContext)">
            <summary>
            IsValid
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Annotations.VerifiableParamsAttribute.IsValidImpl(System.Type,System.String,System.Func{System.Object})">
            <summary>
            Invoke internal impl
            </summary>
            <param name="memberType"></param>
            <param name="memberName"></param>
            <param name="memberValueGetter"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.CustomVerifyResult">
            <summary>
            Custom verify result <br />
            自定义验证结果
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.CustomVerifyResult.VerifyResult">
            <summary>
            Verify result <br />
            验证结果
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.CustomVerifyResult.ErrorMessage">
            <summary>
            Error message <br />
            错误信息
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.CustomVerifyResult.OperationName">
            <summary>
            Operation name <br />
            操作名称
            </summary>
        </member>
        <member name="T:CosmosStack.Validation.Internals.Conditions.ConditionOps">
            <summary>
            Condition Ops <br />
            条件操作
            </summary>
        </member>
        <member name="F:CosmosStack.Validation.Internals.Conditions.ConditionOps.Break">
            <summary>
            Break <br />
            断开
            </summary>
        </member>
        <member name="F:CosmosStack.Validation.Internals.Conditions.ConditionOps.And">
            <summary>
            And <br />
            与
            </summary>
        </member>
        <member name="F:CosmosStack.Validation.Internals.Conditions.ConditionOps.Or">
            <summary>
            Or <br />
            或
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Conditions.ConditionOpsHelper.IsHigherPriority(CosmosStack.Validation.Internals.Conditions.ConditionOps,CosmosStack.Validation.Internals.Conditions.ConditionOps)">
            <summary>
            如果 Right 的优先级高于 Left，
            则需要将 Left 打包为 GroupedToken，然后再进行联立
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="P:CosmosStack.Validation.Internals.CorrectVerifyValBlock.AndOrFlag">
            <summary>
            与/或 标记位，用于辅助 Blocks 工作，默认为 true。 <br />
            true - AND <br />
            false - OR
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Internals.Rules.LogicCorrectValueRule.InternalLogic">
            <summary>
            The internal logic, <br />
            True = AND (default) <br />
            False = OR
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Rules.CorrectValueRuleBuilder.ScalePrecision(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Limit the scale and precision of the value.
            </summary>
            <param name="scale"></param>
            <param name="precision"></param>
            <param name="ignoreTrailingZeros"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Rules.CorrectValueRuleBuilder.RequiredType(System.Type)">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Rules.CorrectValueRuleBuilder.RequiredTypes(System.Type[])">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <param name="types"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Rules.CorrectValueRuleBuilder.RequiredTypes``1">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Rules.CorrectValueRuleBuilder.RequiredTypes``2">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Rules.CorrectValueRuleBuilder.RequiredTypes``3">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Rules.CorrectValueRuleBuilder.RequiredTypes``4">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Rules.CorrectValueRuleBuilder.RequiredTypes``5">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Rules.CorrectValueRuleBuilder.RequiredTypes``6">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Rules.CorrectValueRuleBuilder.RequiredTypes``7">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Rules.CorrectValueRuleBuilder.RequiredTypes``8">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Rules.CorrectValueRuleBuilder.RequiredTypes``9">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Rules.CorrectValueRuleBuilder.RequiredTypes``10">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Rules.CorrectValueRuleBuilder.RequiredTypes``11">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Rules.CorrectValueRuleBuilder.RequiredTypes``12">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Rules.CorrectValueRuleBuilder.RequiredTypes``13">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Rules.CorrectValueRuleBuilder.RequiredTypes``14">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <typeparam name="T14"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Rules.CorrectValueRuleBuilder.RequiredTypes``15">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <typeparam name="T14"></typeparam>
            <typeparam name="T15"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Rules.CorrectValueRuleBuilder.RequiredTypes``16">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <typeparam name="T14"></typeparam>
            <typeparam name="T15"></typeparam>
            <typeparam name="T16"></typeparam>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Internals.Rules.CorrectWaitForMessageValueRuleBuilder">
            <summary>
            The lower-level interface of ValueRuleBuilder. Used to wait for verification information.
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Rules.CorrectWaitForMessageValueRuleBuilder.WithName(System.String)">
            <summary>
            Fill in the operation name.
            </summary>
            <param name="operationName"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Rules.CorrectWaitForMessageValueRuleBuilder.WithMessage(System.String)">
            <summary>
            Fill in the message.
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Internals.Rules.CorrectWaitForMessageValueRuleBuilder`1">
            <summary>
            The lower-level interface of ValueRuleBuilder. Used to wait for verification information.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Rules.CorrectWaitForMessageValueRuleBuilder`1.WithName(System.String)">
            <summary>
            Fill in the operation name.
            </summary>
            <param name="operationName"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Rules.CorrectWaitForMessageValueRuleBuilder`1.WithMessage(System.String)">
            <summary>
            Fill in the message.
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Internals.Rules.CorrectWaitForMessageValueRuleBuilder`2">
            <summary>
            The lower-level interface of ValueRuleBuilder. Used to wait for verification information.
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Rules.CorrectWaitForMessageValueRuleBuilder`2.WithName(System.String)">
            <summary>
            Fill in the operation name.
            </summary>
            <param name="operationName"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Rules.CorrectWaitForMessageValueRuleBuilder`2.WithMessage(System.String)">
            <summary>
            Fill in the message.
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Rules.CorrectValueRuleBuilder`1.ScalePrecision(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Limit the scale and precision of the value.
            </summary>
            <param name="scale"></param>
            <param name="precision"></param>
            <param name="ignoreTrailingZeros"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Rules.CorrectValueRuleBuilder`1.RequiredType(System.Type)">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Rules.CorrectValueRuleBuilder`1.RequiredTypes(System.Type[])">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <param name="types"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Rules.CorrectValueRuleBuilder`1.RequiredTypes``1">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Rules.CorrectValueRuleBuilder`1.RequiredTypes``2">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Rules.CorrectValueRuleBuilder`1.RequiredTypes``3">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Rules.CorrectValueRuleBuilder`1.RequiredTypes``4">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Rules.CorrectValueRuleBuilder`1.RequiredTypes``5">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Rules.CorrectValueRuleBuilder`1.RequiredTypes``6">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Rules.CorrectValueRuleBuilder`1.RequiredTypes``7">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Rules.CorrectValueRuleBuilder`1.RequiredTypes``8">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Rules.CorrectValueRuleBuilder`1.RequiredTypes``9">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Rules.CorrectValueRuleBuilder`1.RequiredTypes``10">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Rules.CorrectValueRuleBuilder`1.RequiredTypes``11">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Rules.CorrectValueRuleBuilder`1.RequiredTypes``12">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Rules.CorrectValueRuleBuilder`1.RequiredTypes``13">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Rules.CorrectValueRuleBuilder`1.RequiredTypes``14">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <typeparam name="T14"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Rules.CorrectValueRuleBuilder`1.RequiredTypes``15">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <typeparam name="T14"></typeparam>
            <typeparam name="T15"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Rules.CorrectValueRuleBuilder`1.RequiredTypes``16">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <typeparam name="T14"></typeparam>
            <typeparam name="T15"></typeparam>
            <typeparam name="T16"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Rules.CorrectValueRuleBuilder`2.ScalePrecision(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Limit the scale and precision of the value.
            </summary>
            <param name="scale"></param>
            <param name="precision"></param>
            <param name="ignoreTrailingZeros"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Rules.CorrectValueRuleBuilder`2.RequiredType(System.Type)">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Rules.CorrectValueRuleBuilder`2.RequiredTypes(System.Type[])">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <param name="types"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Rules.CorrectValueRuleBuilder`2.RequiredTypes``1">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Rules.CorrectValueRuleBuilder`2.RequiredTypes``2">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Rules.CorrectValueRuleBuilder`2.RequiredTypes``3">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Rules.CorrectValueRuleBuilder`2.RequiredTypes``4">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Rules.CorrectValueRuleBuilder`2.RequiredTypes``5">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Rules.CorrectValueRuleBuilder`2.RequiredTypes``6">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Rules.CorrectValueRuleBuilder`2.RequiredTypes``7">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Rules.CorrectValueRuleBuilder`2.RequiredTypes``8">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Rules.CorrectValueRuleBuilder`2.RequiredTypes``9">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Rules.CorrectValueRuleBuilder`2.RequiredTypes``10">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Rules.CorrectValueRuleBuilder`2.RequiredTypes``11">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Rules.CorrectValueRuleBuilder`2.RequiredTypes``12">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Rules.CorrectValueRuleBuilder`2.RequiredTypes``13">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Rules.CorrectValueRuleBuilder`2.RequiredTypes``14">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <typeparam name="T14"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Rules.CorrectValueRuleBuilder`2.RequiredTypes``15">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <typeparam name="T14"></typeparam>
            <typeparam name="T15"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Rules.CorrectValueRuleBuilder`2.RequiredTypes``16">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <typeparam name="T14"></typeparam>
            <typeparam name="T15"></typeparam>
            <typeparam name="T16"></typeparam>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Internals.Tokens.GroupedValueToken">
            <summary>
            Grouped value token.
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.GroupedValueToken.ActivationConditions2">
            <summary>
            Activation condition <br />
            1st param: Instance <br />
            2nd param: result of activation condition
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.GroupedValueToken.ActivationConditions3">
            <summary>
            Activation condition <br />
            1st param: Instance <br />
            2nd param: Member's Value <br />
            3rd param: result of activation condition
            </summary>
        </member>
        <member name="T:CosmosStack.Validation.Internals.Tokens.IGroupedValueToken">
            <summary>
            Interface of grouped value token
            </summary>
        </member>
        <member name="T:CosmosStack.Validation.Internals.Tokens.IToken">
            <summary>
            Interface for verifiable token
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.IToken.TokenName">
            <summary>
            Name of verifiable token
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.IToken.TokenClass">
            <summary>
            Class of verifiable token
            </summary>
        </member>
        <member name="T:CosmosStack.Validation.Internals.Tokens.IValueToken">
            <summary>
            Interface of value token
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.IValueToken.MutuallyExclusive">
            <summary>
            To mark this Verifiable token as a mutually exclusive token.
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.IValueToken.MutuallyExclusiveFlags">
            <summary>
            If this verifiable token is mutually exclusive, then mark which tokens are mutually exclusive.
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.IValueToken.Verify(CosmosStack.Validation.Internals.VerifiableOpsContext)">
            <summary>
            Verification.
            </summary>
            <param name="context"></param>
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.IValueToken.CustomMessage">
            <summary>
            Custom message.
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.IValueToken.ActivationConditions2">
            <summary>
            Activation condition <br />
            1st param: Instance <br />
            2nd param: result of activation condition
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.IValueToken.ActivationConditions3">
            <summary>
            Activation condition <br />
            1st param: Instance <br />
            2nd param: Member's Value <br />
            3rd param: result of activation condition
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.IValueToken.WithActivationConditions">
            <summary>
            Mark whether to use activation conditions.
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.IValueToken.WithMessageMode">
            <summary>
            Mark whether to use custom message.
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.IValueToken.AppendOrOverwrite">
            <summary>
            If WithMessage is true, this AppendOrOverwrite takes effect. <br />
            true - Append <br />
            false - Overwrite
            </summary>
        </member>
        <member name="T:CosmosStack.Validation.Internals.Tokens.IValueToken`1">
            <summary>
            Interface of value token, a generic version.
            </summary>
            <typeparam name="TVal"></typeparam>
        </member>
        <member name="T:CosmosStack.Validation.Internals.Tokens.TokenClass">
            <summary>
            Class of verifiable token
            </summary>
        </member>
        <member name="F:CosmosStack.Validation.Internals.Tokens.TokenClass.ValueToken">
            <summary>
            Normal value token
            </summary>
        </member>
        <member name="F:CosmosStack.Validation.Internals.Tokens.TokenClass.GroupedToken">
            <summary>
            Grouped value token
            </summary>
        </member>
        <member name="T:CosmosStack.Validation.Internals.Tokens.TokenMutexCalculator">
            <summary>
            Mutex Calculator <br />
            互斥计算工具
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.TokenMutexCalculator.Available(System.Collections.Generic.List{CosmosStack.Validation.Internals.Tokens.IValueToken},CosmosStack.Validation.Internals.Tokens.IValueToken)">
            <summary>
            Calculate whether the given token is mutually exclusive with the currently existing token group.
            </summary>
            <param name="tokens"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Internals.Tokens.ValueToken">
            <summary>
            Value token
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.ValueToken.TokenName">
            <summary>
            Name of verifiable token
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.ValueToken.TokenClass">
            <summary>
            Class of verifiable token
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.ValueToken.AppendOrOverwrite">
            <summary>
            If WithMessage is true, this AppendOrOverwrite takes effect. <br />
            true - Append <br />
            false - Overwrite
            </summary>
        </member>
        <member name="F:CosmosStack.Validation.Internals.Tokens.ValueToken.NoMutuallyExclusiveFlags">
            <summary>
            Empty Mutually Exclusive Flags.
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.ValueToken.MutuallyExclusive">
            <summary>
            To mark this Verifiable token as a mutually exclusive token.
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.ValueToken.MutuallyExclusiveFlags">
            <summary>
            If this verifiable token is mutually exclusive, then mark which tokens are mutually exclusive.
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueToken.Verify(CosmosStack.Validation.Internals.VerifiableOpsContext)">
            <summary>
            Verification.
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueToken.Valid(CosmosStack.Validation.Objects.VerifiableObjectContext)">
            <summary>
            Verification for VerifiableObjectContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueToken.Valid(CosmosStack.Validation.Objects.VerifiableMemberContext)">
            <summary>
            Verification for VerifiableMemberContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.ValueToken.CustomMessage">
            <summary>
            Custom message.
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.ValueToken.WithMessageMode">
            <summary>
            Mark whether to use custom message.
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueToken.MergeMessage(System.String)">
            <summary>
            Merge message
            </summary>
            <param name="messageSinceToken"></param>
            <returns></returns>
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.ValueToken.ActivationConditions2">
            <summary>
            Activation condition <br />
            1st param: Instance <br />
            2nd param: result of activation condition
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.ValueToken.ActivationConditions3">
            <summary>
            Activation condition <br />
            1st param: Instance <br />
            2nd param: Member's Value <br />
            3rd param: result of activation condition
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.ValueToken.WithActivationConditions">
            <summary>
            Mark whether to use activation conditions.
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueToken.IsActivate(CosmosStack.Validation.Objects.VerifiableMemberContext,System.Object)">
            <summary>
            Is activate, This method is only applicable to 'Verify'.
            </summary>
            <param name="context"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueToken.IsActivate(CosmosStack.Validation.Objects.VerifiableObjectContext,System.Object)">
            <summary>
            Is activate, This method is only applicable to 'Verify'.
            </summary>
            <param name="context"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueToken.GetValueFrom(CosmosStack.Validation.Objects.VerifiableObjectContext)">
            <summary>
            Get value from VerifiableObjectContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueToken.GetValueFrom(CosmosStack.Validation.Objects.VerifiableMemberContext)">
            <summary>
            Get value from VerifiableMemberContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.ValueToken.VerifiableMember">
            <summary>
            Verifiable Member
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueToken.ContainsMember(CosmosStack.Validation.Objects.VerifiableObjectContext)">
            <summary>
            Determine whether this verifiable token can be verified against the given VerifiableObjectContext.
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueToken.CreateVerifyVal">
            <summary>
            Create a new instance of VerifyVal
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueToken.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:CosmosStack.Validation.Internals.Tokens.ValueToken`1">
            <summary>
            Value token, a generic version.
            </summary>
            <typeparam name="TVal"></typeparam>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueToken`1.#ctor(CosmosStack.Validation.Objects.VerifiableMemberContract)">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueToken`1.IsActivate(CosmosStack.Validation.Objects.VerifiableMemberContext,`0)">
            <summary>
            Is activate, This method is only applicable to 'Verify'.
            </summary>
            <param name="context"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueToken`1.IsActivate(CosmosStack.Validation.Objects.VerifiableObjectContext,`0)">
            <summary>
            Is activate, This method is only applicable to 'Verify'.
            </summary>
            <param name="context"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueToken`1.GetValueFrom(CosmosStack.Validation.Objects.VerifiableObjectContext)">
            <summary>
            Verification for VerifiableObjectContext, a generic version.
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueToken`1.GetValueFrom(CosmosStack.Validation.Objects.VerifiableMemberContext)">
            <summary>
            Verification for VerifiableMemberContext, a generic version.
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Internals.Tokens.ValueTokens.Basic.ValueCollBasicToken">
            <summary>
            Abstract basic token for collection type.
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.Basic.ValueCollBasicToken.#ctor(CosmosStack.Validation.Objects.VerifiableMemberContract,System.Func{System.Object,System.Boolean},System.String)">
            <inheritdoc />
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.ValueTokens.Basic.ValueCollBasicToken.TokenName">
            <summary>
            Name of verifiable token
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.ValueTokens.Basic.ValueCollBasicToken.MutuallyExclusive">
            <summary>
            To mark this Verifiable token as a mutually exclusive token.
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.ValueTokens.Basic.ValueCollBasicToken.MutuallyExclusiveFlags">
            <summary>
            If this verifiable token is mutually exclusive, then mark which tokens are mutually exclusive.
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.Basic.ValueCollBasicToken.Valid(CosmosStack.Validation.Objects.VerifiableObjectContext)">
            <summary>
            Verification for VerifiableObjectContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.Basic.ValueCollBasicToken.Valid(CosmosStack.Validation.Objects.VerifiableMemberContext)">
            <summary>
            Verification for VerifiableMemberContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.Basic.ValueCollBasicToken.IsValidImpl(System.Collections.ICollection,System.Func{System.Object,System.Boolean})">
            <summary>
            Impl of valid ops.
            </summary>
            <param name="collection"></param>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Internals.Tokens.ValueTokens.Basic.ValueCollBasicToken`2">
            <summary>
            Abstract basic token for collection type, a generic version.
            </summary>
            <typeparam name="TVal"></typeparam>
            <typeparam name="TItem"></typeparam>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.Basic.ValueCollBasicToken`2.#ctor(CosmosStack.Validation.Objects.VerifiableMemberContract,System.Func{`1,System.Boolean},System.String)">
            <inheritdoc />
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.ValueTokens.Basic.ValueCollBasicToken`2.TokenName">
            <summary>
            Name of verifiable token
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.ValueTokens.Basic.ValueCollBasicToken`2.MutuallyExclusive">
            <summary>
            To mark this Verifiable token as a mutually exclusive token.
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.ValueTokens.Basic.ValueCollBasicToken`2.MutuallyExclusiveFlags">
            <summary>
            If this verifiable token is mutually exclusive, then mark which tokens are mutually exclusive.
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.Basic.ValueCollBasicToken`2.Valid(CosmosStack.Validation.Objects.VerifiableObjectContext)">
            <summary>
            Verification for VerifiableObjectContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.Basic.ValueCollBasicToken`2.Valid(CosmosStack.Validation.Objects.VerifiableMemberContext)">
            <summary>
            Verification for VerifiableMemberContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.Basic.ValueCollBasicToken`2.IsValidImpl(System.Collections.ICollection,System.Func{`1,System.Boolean})">
            <summary>
            Impl of valid ops
            </summary>
            <param name="collection"></param>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Internals.Tokens.ValueTokens.Basic.ValueCompareBasicToken">
            <summary>
            Abstract basic token for compare type.
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.Basic.ValueCompareBasicToken.#ctor(CosmosStack.Validation.Objects.VerifiableMemberContract,System.Object,System.String)">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.Basic.ValueCompareBasicToken.#ctor(CosmosStack.Validation.Objects.VerifiableMemberContract,System.Func{System.Object},System.Type,System.String)">
            <inheritdoc />
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.ValueTokens.Basic.ValueCompareBasicToken.TokenName">
            <summary>
            Name of verifiable token
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.ValueTokens.Basic.ValueCompareBasicToken.MutuallyExclusive">
            <summary>
            To mark this Verifiable token as a mutually exclusive token.
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.ValueTokens.Basic.ValueCompareBasicToken.MutuallyExclusiveFlags">
            <summary>
            If this verifiable token is mutually exclusive, then mark which tokens are mutually exclusive.
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.Basic.ValueCompareBasicToken.Valid(CosmosStack.Validation.Objects.VerifiableObjectContext)">
            <summary>
            Verification for VerifiableObjectContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.Basic.ValueCompareBasicToken.Valid(CosmosStack.Validation.Objects.VerifiableMemberContext)">
            <summary>
            Verification for VerifiableMemberContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.Basic.ValueCompareBasicToken.IsValidImpl(System.Object,System.Object,System.Type,System.String@)">
            <summary>
            Impl of valid ops.
            </summary>
            <param name="value"></param>
            <param name="valueToCompare"></param>
            <param name="typeOfValueToCompare"></param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.ValueTokens.Basic.ValueRequiredBasicToken.TokenName">
            <summary>
            Name of verifiable token
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.ValueTokens.Basic.ValueRequiredBasicToken.MutuallyExclusive">
            <summary>
            To mark this Verifiable token as a mutually exclusive token.
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.ValueTokens.Basic.ValueRequiredBasicToken.MutuallyExclusiveFlags">
            <summary>
            If this verifiable token is mutually exclusive, then mark which tokens are mutually exclusive.
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.ValueTokens.Basic.ValueRequiredBasicToken.Not">
            <summary>
            Not
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.Basic.ValueRequiredBasicToken.Valid(CosmosStack.Validation.Objects.VerifiableObjectContext)">
            <summary>
            Verification for VerifiableObjectContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.Basic.ValueRequiredBasicToken.Valid(CosmosStack.Validation.Objects.VerifiableMemberContext)">
            <summary>
            Verification for VerifiableMemberContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.ValueTokens.Basic.ValueRequiredBasicToken`1.TokenName">
            <summary>
            Name of verifiable token
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.ValueTokens.Basic.ValueRequiredBasicToken`1.MutuallyExclusive">
            <summary>
            To mark this Verifiable token as a mutually exclusive token.
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.ValueTokens.Basic.ValueRequiredBasicToken`1.MutuallyExclusiveFlags">
            <summary>
            If this verifiable token is mutually exclusive, then mark which tokens are mutually exclusive.
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.ValueTokens.Basic.ValueRequiredBasicToken`1.Not">
            <summary>
            Not
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.Basic.ValueRequiredBasicToken`1.Valid(CosmosStack.Validation.Objects.VerifiableObjectContext)">
            <summary>
            Verification for VerifiableObjectContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.Basic.ValueRequiredBasicToken`1.Valid(CosmosStack.Validation.Objects.VerifiableMemberContext)">
            <summary>
            Verification for VerifiableMemberContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueAllToken">
            <summary>
            All token
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueAllToken.#ctor(CosmosStack.Validation.Objects.VerifiableMemberContract,System.Func{System.Object,System.Boolean})">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueAllToken.IsValidImpl(System.Collections.ICollection,System.Func{System.Object,System.Boolean})">
            <summary>
            Impl of valid ops.
            </summary>
            <param name="collection"></param>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueAllToken`2">
            <summary>
            All token, a generic version.
            </summary>
            <typeparam name="TVal"></typeparam>
            <typeparam name="TItem"></typeparam>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueAllToken`2.#ctor(CosmosStack.Validation.Objects.VerifiableMemberContract,System.Func{`1,System.Boolean})">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueAllToken`2.IsValidImpl(System.Collections.ICollection,System.Func{`1,System.Boolean})">
            <summary>
            Impl of valid ops
            </summary>
            <param name="collection"></param>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueAnyToken">
            <summary>
            Any token
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueAnyToken.#ctor(CosmosStack.Validation.Objects.VerifiableMemberContract,System.Func{System.Object,System.Boolean})">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueAnyToken.IsValidImpl(System.Collections.ICollection,System.Func{System.Object,System.Boolean})">
            <summary>
            Impl of valid ops.
            </summary>
            <param name="collection"></param>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueAnyToken`2">
            <summary>
            Any token, a generic version.
            </summary>
            <typeparam name="TVal"></typeparam>
            <typeparam name="TItem"></typeparam>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueAnyToken`2.#ctor(CosmosStack.Validation.Objects.VerifiableMemberContract,System.Func{`1,System.Boolean})">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueAnyToken`2.IsValidImpl(System.Collections.ICollection,System.Func{`1,System.Boolean})">
            <summary>
            Impl of valid ops
            </summary>
            <param name="collection"></param>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueEmptyToken">
            <summary>
            Empty token
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueEmptyToken.#ctor(CosmosStack.Validation.Objects.VerifiableMemberContract)">
            <inheritdoc />
        </member>
        <member name="T:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueNotEmptyToken">
            <summary>
            Not empty token
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueNotEmptyToken.#ctor(CosmosStack.Validation.Objects.VerifiableMemberContract)">
            <inheritdoc />
        </member>
        <member name="T:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueEnumToken">
            <summary>
            Enum token
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueEnumToken.#ctor(CosmosStack.Validation.Objects.VerifiableMemberContract,System.Type)">
            <inheritdoc />
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueEnumToken.TokenName">
            <summary>
            Name of verifiable token
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueEnumToken.MutuallyExclusive">
            <summary>
            To mark this Verifiable token as a mutually exclusive token.
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueEnumToken.MutuallyExclusiveFlags">
            <summary>
            If this verifiable token is mutually exclusive, then mark which tokens are mutually exclusive.
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueEnumToken.Valid(CosmosStack.Validation.Objects.VerifiableObjectContext)">
            <summary>
            Verification for VerifiableObjectContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueEnumToken.Valid(CosmosStack.Validation.Objects.VerifiableMemberContext)">
            <summary>
            Verification for VerifiableMemberContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueEnumToken`1">
            <summary>
            Enum token, a generic version.
            </summary>
            <typeparam name="TEnum"></typeparam>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueEnumToken`1.#ctor(CosmosStack.Validation.Objects.VerifiableMemberContract)">
            <inheritdoc />
        </member>
        <member name="T:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueEqualToken">
            <summary>
            Equal token
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueEqualToken.#ctor(CosmosStack.Validation.Objects.VerifiableMemberContract,System.Object,System.Collections.IEqualityComparer)">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueEqualToken.#ctor(CosmosStack.Validation.Objects.VerifiableMemberContract,System.Func{System.Object},System.Type,System.Collections.IEqualityComparer)">
            <inheritdoc />
        </member>
        <member name="T:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueEqualToken`1">
            <summary>
            Equal token, a generic version.
            </summary>
            <typeparam name="TVal"></typeparam>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueEqualToken`1.#ctor(CosmosStack.Validation.Objects.VerifiableMemberContract,`0,System.Collections.Generic.IEqualityComparer{`0})">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueEqualToken`1.#ctor(CosmosStack.Validation.Objects.VerifiableMemberContract,System.Func{`0},System.Collections.Generic.IEqualityComparer{`0})">
            <inheritdoc />
        </member>
        <member name="T:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueNotEqualToken">
            <summary>
            Not equal token
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueNotEqualToken.#ctor(CosmosStack.Validation.Objects.VerifiableMemberContract,System.Object,System.Collections.IEqualityComparer)">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueNotEqualToken.#ctor(CosmosStack.Validation.Objects.VerifiableMemberContract,System.Func{System.Object},System.Type,System.Collections.IEqualityComparer)">
            <inheritdoc />
        </member>
        <member name="T:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueNotEqualToken`1">
            <summary>
            Not equal token, a generic version.
            </summary>
            <typeparam name="TVal"></typeparam>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueNotEqualToken`1.#ctor(CosmosStack.Validation.Objects.VerifiableMemberContract,`0,System.Collections.Generic.IEqualityComparer{`0})">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueNotEqualToken`1.#ctor(CosmosStack.Validation.Objects.VerifiableMemberContract,System.Func{`0},System.Collections.Generic.IEqualityComparer{`0})">
            <inheritdoc />
        </member>
        <member name="T:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueFuncToken">
            <summary>
            Func token
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueFuncToken.#ctor(CosmosStack.Validation.Objects.VerifiableMemberContract,System.Func{System.Object,CosmosStack.Validation.CustomVerifyResult})">
            <inheritdoc />
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueFuncToken.TokenName">
            <summary>
            Name of verifiable token
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueFuncToken.MutuallyExclusive">
            <summary>
            To mark this Verifiable token as a mutually exclusive token.
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueFuncToken.MutuallyExclusiveFlags">
            <summary>
            If this verifiable token is mutually exclusive, then mark which tokens are mutually exclusive.
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueFuncToken.Valid(CosmosStack.Validation.Objects.VerifiableObjectContext)">
            <summary>
            Verification for VerifiableObjectContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueFuncToken.Valid(CosmosStack.Validation.Objects.VerifiableMemberContext)">
            <summary>
            Verification for VerifiableMemberContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueFuncToken`1">
            <summary>
            Func token, a generic version.
            </summary>
            <typeparam name="TVal"></typeparam>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueFuncToken`1.#ctor(CosmosStack.Validation.Objects.VerifiableMemberContract,System.Func{`0,CosmosStack.Validation.CustomVerifyResult})">
            <inheritdoc />
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueFuncToken`1.TokenName">
            <summary>
            Name of verifiable token
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueFuncToken`1.MutuallyExclusive">
            <summary>
            To mark this Verifiable token as a mutually exclusive token.
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueFuncToken`1.MutuallyExclusiveFlags">
            <summary>
            If this verifiable token is mutually exclusive, then mark which tokens are mutually exclusive.
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueFuncToken`1.Valid(CosmosStack.Validation.Objects.VerifiableObjectContext)">
            <summary>
            Verification for VerifiableObjectContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueFuncToken`1.Valid(CosmosStack.Validation.Objects.VerifiableMemberContext)">
            <summary>
            Verification for VerifiableMemberContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueGreaterThanOrEqualToken">
            <summary>
            Greater than or equal token
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueGreaterThanOrEqualToken.#ctor(CosmosStack.Validation.Objects.VerifiableMemberContract,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueGreaterThanOrEqualToken.#ctor(CosmosStack.Validation.Objects.VerifiableMemberContract,System.Func{System.Object},System.Type)">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueGreaterThanOrEqualToken.IsValidImpl(System.Object,System.Object,System.Type,System.String@)">
            <summary>
            Impl of valid ops.
            </summary>
            <param name="value"></param>
            <param name="valueToCompare"></param>
            <param name="typeOfValueToCompare"></param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueGreaterThanOrEqualToken.UpdateVal(CosmosStack.Validation.Internals.CorrectVerifyVal,System.Object,System.Object,System.String)">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueGreaterThanOrEqualToken`1.#ctor(CosmosStack.Validation.Objects.VerifiableMemberContract,`0)">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueGreaterThanOrEqualToken`1.#ctor(CosmosStack.Validation.Objects.VerifiableMemberContract,System.Func{`0})">
            <inheritdoc />
        </member>
        <member name="T:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueGreaterThanToken">
            <summary>
            Greater than token
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueGreaterThanToken.#ctor(CosmosStack.Validation.Objects.VerifiableMemberContract,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueGreaterThanToken.#ctor(CosmosStack.Validation.Objects.VerifiableMemberContract,System.Func{System.Object},System.Type)">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueGreaterThanToken.IsValidImpl(System.Object,System.Object,System.Type,System.String@)">
            <summary>
            Impl of valid ops.
            </summary>
            <param name="value"></param>
            <param name="valueToCompare"></param>
            <param name="typeOfValueToCompare"></param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueGreaterThanToken.UpdateVal(CosmosStack.Validation.Internals.CorrectVerifyVal,System.Object,System.Object,System.String)">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueGreaterThanToken`1.#ctor(CosmosStack.Validation.Objects.VerifiableMemberContract,`0)">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueGreaterThanToken`1.#ctor(CosmosStack.Validation.Objects.VerifiableMemberContract,System.Func{`0})">
            <inheritdoc />
        </member>
        <member name="T:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueInToken">
            <summary>
            In token
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueInToken.#ctor(CosmosStack.Validation.Objects.VerifiableMemberContract,System.Collections.Generic.ICollection{System.Object})">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueInToken.#ctor(CosmosStack.Validation.Objects.VerifiableMemberContract,System.Func{System.Collections.Generic.ICollection{System.Object}})">
            <inheritdoc />
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueInToken.TokenName">
            <summary>
            Name of verifiable token
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueInToken.MutuallyExclusive">
            <summary>
            To mark this Verifiable token as a mutually exclusive token.
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueInToken.MutuallyExclusiveFlags">
            <summary>
            If this verifiable token is mutually exclusive, then mark which tokens are mutually exclusive.
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueInToken.Valid(CosmosStack.Validation.Objects.VerifiableObjectContext)">
            <summary>
            Verification for VerifiableObjectContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueInToken.Valid(CosmosStack.Validation.Objects.VerifiableMemberContext)">
            <summary>
            Verification for VerifiableMemberContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueInToken`1">
            <summary>
            In token, a generic version with one generic type.
            </summary>
            <typeparam name="TVal"></typeparam>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueInToken`1.#ctor(CosmosStack.Validation.Objects.VerifiableMemberContract,System.Collections.Generic.ICollection{`0})">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueInToken`1.#ctor(CosmosStack.Validation.Objects.VerifiableMemberContract,System.Func{System.Collections.Generic.ICollection{`0}})">
            <inheritdoc />
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueInToken`1.TokenName">
            <summary>
            Name of verifiable token
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueInToken`1.MutuallyExclusive">
            <summary>
            To mark this Verifiable token as a mutually exclusive token.
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueInToken`1.MutuallyExclusiveFlags">
            <summary>
            If this verifiable token is mutually exclusive, then mark which tokens are mutually exclusive.
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueInToken`1.Valid(CosmosStack.Validation.Objects.VerifiableObjectContext)">
            <summary>
            Verification for VerifiableObjectContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueInToken`1.Valid(CosmosStack.Validation.Objects.VerifiableMemberContext)">
            <summary>
            Verification for VerifiableMemberContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueInToken`2">
            <summary>
            In token, a generic version with two generic types.
            </summary>
            <typeparam name="TVal"></typeparam>
            <typeparam name="TItem"></typeparam>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueInToken`2.#ctor(CosmosStack.Validation.Objects.VerifiableMemberContract,System.Collections.Generic.ICollection{`1})">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueInToken`2.#ctor(CosmosStack.Validation.Objects.VerifiableMemberContract,System.Func{System.Collections.Generic.ICollection{`1}})">
            <inheritdoc />
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueInToken`2.TokenName">
            <summary>
            Name of verifiable token
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueInToken`2.MutuallyExclusive">
            <summary>
            To mark this Verifiable token as a mutually exclusive token.
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueInToken`2.MutuallyExclusiveFlags">
            <summary>
            If this verifiable token is mutually exclusive, then mark which tokens are mutually exclusive.
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueInToken`2.Valid(CosmosStack.Validation.Objects.VerifiableObjectContext)">
            <summary>
            Verification for VerifiableObjectContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueInToken`2.Valid(CosmosStack.Validation.Objects.VerifiableMemberContext)">
            <summary>
            Verification for VerifiableMemberContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueLengthLimitedToken">
            <summary>
            Length limited token
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueLengthLimitedToken.#ctor(CosmosStack.Validation.Objects.VerifiableMemberContract,System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueLengthLimitedToken.TokenName">
            <summary>
            Name of verifiable token
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueLengthLimitedToken.MutuallyExclusive">
            <summary>
            To mark this Verifiable token as a mutually exclusive token.
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueLengthLimitedToken.MutuallyExclusiveFlags">
            <summary>
            If this verifiable token is mutually exclusive, then mark which tokens are mutually exclusive.
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueLengthLimitedToken.Valid(CosmosStack.Validation.Objects.VerifiableObjectContext)">
            <summary>
            Verification for VerifiableObjectContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueLengthLimitedToken.Valid(CosmosStack.Validation.Objects.VerifiableMemberContext)">
            <summary>
            Verification for VerifiableMemberContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueLessThanOrEqualToken">
            <summary>
            Less than or equal token
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueLessThanOrEqualToken.#ctor(CosmosStack.Validation.Objects.VerifiableMemberContract,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueLessThanOrEqualToken.#ctor(CosmosStack.Validation.Objects.VerifiableMemberContract,System.Func{System.Object},System.Type)">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueLessThanOrEqualToken.IsValidImpl(System.Object,System.Object,System.Type,System.String@)">
            <summary>
            Impl of valid ops.
            </summary>
            <param name="value"></param>
            <param name="valueToCompare"></param>
            <param name="typeOfValueToCompare"></param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueLessThanOrEqualToken.UpdateVal(CosmosStack.Validation.Internals.CorrectVerifyVal,System.Object,System.Object,System.String)">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueLessThanOrEqualToken`1.#ctor(CosmosStack.Validation.Objects.VerifiableMemberContract,`0)">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueLessThanOrEqualToken`1.#ctor(CosmosStack.Validation.Objects.VerifiableMemberContract,System.Func{`0})">
            <inheritdoc />
        </member>
        <member name="T:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueLessThanToken">
            <summary>
            Less than token
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueLessThanToken.#ctor(CosmosStack.Validation.Objects.VerifiableMemberContract,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueLessThanToken.#ctor(CosmosStack.Validation.Objects.VerifiableMemberContract,System.Func{System.Object},System.Type)">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueLessThanToken.IsValidImpl(System.Object,System.Object,System.Type,System.String@)">
            <summary>
            Impl of valid ops.
            </summary>
            <param name="value"></param>
            <param name="valueToCompare"></param>
            <param name="typeOfValueToCompare"></param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueLessThanToken.UpdateVal(CosmosStack.Validation.Internals.CorrectVerifyVal,System.Object,System.Object,System.String)">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueLessThanToken`1.#ctor(CosmosStack.Validation.Objects.VerifiableMemberContract,`0)">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueLessThanToken`1.#ctor(CosmosStack.Validation.Objects.VerifiableMemberContract,System.Func{`0})">
            <inheritdoc />
        </member>
        <member name="T:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueMaxLengthLimitedToken">
            <summary>
            Max length limited token
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueMaxLengthLimitedToken.#ctor(CosmosStack.Validation.Objects.VerifiableMemberContract,System.Int32)">
            <inheritdoc />
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueMaxLengthLimitedToken.TokenName">
            <summary>
            Name of verifiable token
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueMaxLengthLimitedToken.MutuallyExclusive">
            <summary>
            To mark this Verifiable token as a mutually exclusive token.
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueMaxLengthLimitedToken.MutuallyExclusiveFlags">
            <summary>
            If this verifiable token is mutually exclusive, then mark which tokens are mutually exclusive.
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueMaxLengthLimitedToken.Valid(CosmosStack.Validation.Objects.VerifiableObjectContext)">
            <summary>
            Verification for VerifiableObjectContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueMaxLengthLimitedToken.Valid(CosmosStack.Validation.Objects.VerifiableMemberContext)">
            <summary>
            Verification for VerifiableMemberContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueMinLengthLimitedToken">
            <summary>
            Min length limited token
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueMinLengthLimitedToken.#ctor(CosmosStack.Validation.Objects.VerifiableMemberContract,System.Int32)">
            <inheritdoc />
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueMinLengthLimitedToken.TokenName">
            <summary>
            Name of verifiable token
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueMinLengthLimitedToken.MutuallyExclusive">
            <summary>
            To mark this Verifiable token as a mutually exclusive token.
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueMinLengthLimitedToken.MutuallyExclusiveFlags">
            <summary>
            If this verifiable token is mutually exclusive, then mark which tokens are mutually exclusive.
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueMinLengthLimitedToken.Valid(CosmosStack.Validation.Objects.VerifiableObjectContext)">
            <summary>
            Verification for VerifiableObjectContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueMinLengthLimitedToken.Valid(CosmosStack.Validation.Objects.VerifiableMemberContext)">
            <summary>
            Verification for VerifiableMemberContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueNoneToken">
            <summary>
            None token
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueNoneToken.#ctor(CosmosStack.Validation.Objects.VerifiableMemberContract,System.Func{System.Object,System.Boolean})">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueNoneToken.IsValidImpl(System.Collections.ICollection,System.Func{System.Object,System.Boolean})">
            <summary>
            Impl of valid ops.
            </summary>
            <param name="collection"></param>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueNoneToken`2">
            <summary>
            None token, a generic version.
            </summary>
            <typeparam name="TVal"></typeparam>
            <typeparam name="TItem"></typeparam>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueNoneToken`2.#ctor(CosmosStack.Validation.Objects.VerifiableMemberContract,System.Func{`1,System.Boolean})">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueNoneToken`2.IsValidImpl(System.Collections.ICollection,System.Func{`1,System.Boolean})">
            <summary>
            Impl of valid ops
            </summary>
            <param name="collection"></param>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueNotInToken">
            <summary>
            Not-In token
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueNotInToken.#ctor(CosmosStack.Validation.Objects.VerifiableMemberContract,System.Collections.Generic.ICollection{System.Object})">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueNotInToken.#ctor(CosmosStack.Validation.Objects.VerifiableMemberContract,System.Func{System.Collections.Generic.ICollection{System.Object}})">
            <inheritdoc />
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueNotInToken.TokenName">
            <summary>
            Name of verifiable token
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueNotInToken.MutuallyExclusive">
            <summary>
            To mark this Verifiable token as a mutually exclusive token.
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueNotInToken.MutuallyExclusiveFlags">
            <summary>
            If this verifiable token is mutually exclusive, then mark which tokens are mutually exclusive.
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueNotInToken.Valid(CosmosStack.Validation.Objects.VerifiableObjectContext)">
            <summary>
            Verification for VerifiableObjectContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueNotInToken.Valid(CosmosStack.Validation.Objects.VerifiableMemberContext)">
            <summary>
            Verification for VerifiableMemberContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueNotInToken`1">
            <summary>
            Not-In token, a generic version with one generic type.
            </summary>
            <typeparam name="TVal"></typeparam>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueNotInToken`1.#ctor(CosmosStack.Validation.Objects.VerifiableMemberContract,System.Collections.Generic.ICollection{`0})">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueNotInToken`1.#ctor(CosmosStack.Validation.Objects.VerifiableMemberContract,System.Func{System.Collections.Generic.ICollection{`0}})">
            <inheritdoc />
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueNotInToken`1.TokenName">
            <summary>
            Name of verifiable token
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueNotInToken`1.MutuallyExclusive">
            <summary>
            To mark this Verifiable token as a mutually exclusive token.
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueNotInToken`1.MutuallyExclusiveFlags">
            <summary>
            If this verifiable token is mutually exclusive, then mark which tokens are mutually exclusive.
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueNotInToken`1.Valid(CosmosStack.Validation.Objects.VerifiableObjectContext)">
            <summary>
            Verification for VerifiableObjectContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueNotInToken`1.Valid(CosmosStack.Validation.Objects.VerifiableMemberContext)">
            <summary>
            Verification for VerifiableMemberContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueNotInToken`2">
            <summary>
            Not-In token, a generic version with two generic types.
            </summary>
            <typeparam name="TVal"></typeparam>
            <typeparam name="TItem"></typeparam>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueNotInToken`2.#ctor(CosmosStack.Validation.Objects.VerifiableMemberContract,System.Collections.Generic.ICollection{`1})">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueNotInToken`2.#ctor(CosmosStack.Validation.Objects.VerifiableMemberContract,System.Func{System.Collections.Generic.ICollection{`1}})">
            <inheritdoc />
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueNotInToken`2.TokenName">
            <summary>
            Name of verifiable token
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueNotInToken`2.MutuallyExclusive">
            <summary>
            To mark this Verifiable token as a mutually exclusive token.
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueNotInToken`2.MutuallyExclusiveFlags">
            <summary>
            If this verifiable token is mutually exclusive, then mark which tokens are mutually exclusive.
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueNotInToken`2.Valid(CosmosStack.Validation.Objects.VerifiableObjectContext)">
            <summary>
            Verification for VerifiableObjectContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueNotInToken`2.Valid(CosmosStack.Validation.Objects.VerifiableMemberContext)">
            <summary>
            Verification for VerifiableMemberContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueNullToken">
            <summary>
            Null token
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueNullToken.#ctor(CosmosStack.Validation.Objects.VerifiableMemberContract)">
            <inheritdoc />
        </member>
        <member name="T:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueNotNullToken">
            <summary>
            Not-Null token
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueNotNullToken.#ctor(CosmosStack.Validation.Objects.VerifiableMemberContract)">
            <inheritdoc />
        </member>
        <member name="T:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueRangeToken">
            <summary>
            Range token
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueRangeToken.#ctor(CosmosStack.Validation.Objects.VerifiableMemberContract,System.Object,System.Object,CosmosStack.Validation.RangeOptions)">
            <inheritdoc />
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueRangeToken.TokenName">
            <summary>
            Name of verifiable token
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueRangeToken.MutuallyExclusive">
            <summary>
            To mark this Verifiable token as a mutually exclusive token.
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueRangeToken.MutuallyExclusiveFlags">
            <summary>
            If this verifiable token is mutually exclusive, then mark which tokens are mutually exclusive.
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueRangeToken.Valid(CosmosStack.Validation.Objects.VerifiableObjectContext)">
            <summary>
            Verification for VerifiableObjectContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueRangeToken.Valid(CosmosStack.Validation.Objects.VerifiableMemberContext)">
            <summary>
            Verification for VerifiableMemberContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueRangeToken`1">
            <summary>
            Range token, a generic version
            </summary>
            <typeparam name="TVal"></typeparam>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueRangeToken`1.#ctor(CosmosStack.Validation.Objects.VerifiableMemberContract,`0,`0,CosmosStack.Validation.RangeOptions)">
            <inheritdoc />
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueRangeToken`1.TokenName">
            <summary>
            Name of verifiable token
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueRangeToken`1.MutuallyExclusive">
            <summary>
            To mark this Verifiable token as a mutually exclusive token.
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueRangeToken`1.MutuallyExclusiveFlags">
            <summary>
            If this verifiable token is mutually exclusive, then mark which tokens are mutually exclusive.
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueRangeToken`1.Valid(CosmosStack.Validation.Objects.VerifiableObjectContext)">
            <summary>
            Verification for VerifiableObjectContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueRangeToken`1.Valid(CosmosStack.Validation.Objects.VerifiableMemberContext)">
            <summary>
            Verification for VerifiableMemberContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueRegularExpressionToken">
            <summary>
            Regular expression token
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueRegularExpressionToken.#ctor(CosmosStack.Validation.Objects.VerifiableMemberContract,System.String)">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueRegularExpressionToken.#ctor(CosmosStack.Validation.Objects.VerifiableMemberContract,System.Text.RegularExpressions.Regex)">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueRegularExpressionToken.#ctor(CosmosStack.Validation.Objects.VerifiableMemberContract,System.String,System.Text.RegularExpressions.RegexOptions)">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueRegularExpressionToken.#ctor(CosmosStack.Validation.Objects.VerifiableMemberContract,System.Func{System.Object,System.String})">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueRegularExpressionToken.#ctor(CosmosStack.Validation.Objects.VerifiableMemberContract,System.Func{System.Object,System.Text.RegularExpressions.Regex})">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueRegularExpressionToken.#ctor(CosmosStack.Validation.Objects.VerifiableMemberContract,System.Func{System.Object,System.String},System.Text.RegularExpressions.RegexOptions)">
            <inheritdoc />
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueRegularExpressionToken.TokenName">
            <summary>
            Name of verifiable token
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueRegularExpressionToken.MutuallyExclusive">
            <summary>
            To mark this Verifiable token as a mutually exclusive token.
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueRegularExpressionToken.MutuallyExclusiveFlags">
            <summary>
            If this verifiable token is mutually exclusive, then mark which tokens are mutually exclusive.
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueRegularExpressionToken.Valid(CosmosStack.Validation.Objects.VerifiableObjectContext)">
            <summary>
            Verification for VerifiableObjectContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueRegularExpressionToken.Valid(CosmosStack.Validation.Objects.VerifiableMemberContext)">
            <summary>
            Verification for VerifiableMemberContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueRegularExpressionToken`1">
            <summary>
            Regular expression token, a generic version
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueRegularExpressionToken`1.#ctor(CosmosStack.Validation.Objects.VerifiableMemberContract,System.String)">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueRegularExpressionToken`1.#ctor(CosmosStack.Validation.Objects.VerifiableMemberContract,System.Text.RegularExpressions.Regex)">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueRegularExpressionToken`1.#ctor(CosmosStack.Validation.Objects.VerifiableMemberContract,System.String,System.Text.RegularExpressions.RegexOptions)">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueRegularExpressionToken`1.#ctor(CosmosStack.Validation.Objects.VerifiableMemberContract,System.Func{`0,System.String})">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueRegularExpressionToken`1.#ctor(CosmosStack.Validation.Objects.VerifiableMemberContract,System.Func{`0,System.Text.RegularExpressions.Regex})">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueRegularExpressionToken`1.#ctor(CosmosStack.Validation.Objects.VerifiableMemberContract,System.Func{`0,System.String},System.Text.RegularExpressions.RegexOptions)">
            <inheritdoc />
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueRegularExpressionToken`1.TokenName">
            <summary>
            Name of verifiable token
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueRegularExpressionToken`1.MutuallyExclusive">
            <summary>
            To mark this Verifiable token as a mutually exclusive token.
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueRegularExpressionToken`1.MutuallyExclusiveFlags">
            <summary>
            If this verifiable token is mutually exclusive, then mark which tokens are mutually exclusive.
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueRegularExpressionToken`1.Valid(CosmosStack.Validation.Objects.VerifiableObjectContext)">
            <summary>
            Verification for VerifiableObjectContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueRegularExpressionToken`1.Valid(CosmosStack.Validation.Objects.VerifiableMemberContext)">
            <summary>
            Verification for VerifiableMemberContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueRequiredBooleanToken.#ctor(CosmosStack.Validation.Objects.VerifiableMemberContract)">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueRequiredDateInfoToken.#ctor(CosmosStack.Validation.Objects.VerifiableMemberContract,System.Globalization.DateTimeStyles)">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueRequiredDateTimeToken.#ctor(CosmosStack.Validation.Objects.VerifiableMemberContract,System.Globalization.DateTimeStyles)">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueRequiredGuidToken.#ctor(CosmosStack.Validation.Objects.VerifiableMemberContract)">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueRequiredNumericToken.#ctor(CosmosStack.Validation.Objects.VerifiableMemberContract,CosmosStack.Reflection.TypeIsOptions)">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueRequiredStringToken.#ctor(CosmosStack.Validation.Objects.VerifiableMemberContract)">
            <inheritdoc />
        </member>
        <member name="T:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueRequiredTypesToken">
            <summary>
            Required types token
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueRequiredTypesToken.#ctor(CosmosStack.Validation.Objects.VerifiableMemberContract,System.Type[])">
            <inheritdoc />
        </member>
        <member name="T:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueRequiredTypeToken">
            <summary>
            Required type token
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueRequiredTypeToken.#ctor(CosmosStack.Validation.Objects.VerifiableMemberContract,System.Type)">
            <inheritdoc />
        </member>
        <member name="T:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueScalePrecisionToken">
            <summary>
            Scale precision token
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueScalePrecisionToken.#ctor(CosmosStack.Validation.Objects.VerifiableMemberContract,System.Int32,System.Int32,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueScalePrecisionToken.Scale">
            <summary>
            Scale
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueScalePrecisionToken.Precision">
            <summary>
            Precision
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueScalePrecisionToken.IgnoreTrailingZeros">
            <summary>
            Ignore trailing zeros
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueScalePrecisionToken.TokenName">
            <summary>
            Name of verifiable token
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueScalePrecisionToken.MutuallyExclusive">
            <summary>
            To mark this Verifiable token as a mutually exclusive token.
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueScalePrecisionToken.MutuallyExclusiveFlags">
            <summary>
            If this verifiable token is mutually exclusive, then mark which tokens are mutually exclusive.
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueScalePrecisionToken.Valid(CosmosStack.Validation.Objects.VerifiableObjectContext)">
            <summary>
            Verification for VerifiableObjectContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueScalePrecisionToken.Valid(CosmosStack.Validation.Objects.VerifiableMemberContext)">
            <summary>
            Verification for VerifiableMemberContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueStringEnumToken">
            <summary>
            String-enum token
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueStringEnumToken.#ctor(CosmosStack.Validation.Objects.VerifiableMemberContract,System.Type,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueStringEnumToken.TokenName">
            <summary>
            Name of verifiable token
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueStringEnumToken.MutuallyExclusive">
            <summary>
            To mark this Verifiable token as a mutually exclusive token.
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueStringEnumToken.MutuallyExclusiveFlags">
            <summary>
            If this verifiable token is mutually exclusive, then mark which tokens are mutually exclusive.
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueStringEnumToken.Valid(CosmosStack.Validation.Objects.VerifiableObjectContext)">
            <summary>
            Verification for VerifiableObjectContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueStringEnumToken.Valid(CosmosStack.Validation.Objects.VerifiableMemberContext)">
            <summary>
            Verification for VerifiableMemberContext
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueStringEnumToken`1">
            <summary>
            String-enum token, a generic version.
            </summary>
            <typeparam name="TEnum"></typeparam>
        </member>
        <member name="M:CosmosStack.Validation.Internals.Tokens.ValueTokens.ValueStringEnumToken`1.#ctor(CosmosStack.Validation.Objects.VerifiableMemberContract,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="T:CosmosStack.Validation.Internals.ValidationScope">
            <summary>
            A scoped validation provider
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Internals.ValidationScope.CosmosStack#Validation#Internals#ICorrectProvider#Name">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Internals.ValidationScope.GetName">
            <summary>
            Get name of validation provider
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.ValidationScope.CosmosStack#Validation#Internals#ICorrectProvider#ExposeProjectManager">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Internals.ValidationScope.CosmosStack#Validation#Internals#ICorrectProvider#ExposeObjectResolver">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Internals.ValidationScope.CosmosStack#Validation#Internals#ICorrectProvider#ExposeCustomValidatorManager">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Internals.ValidationScope.CosmosStack#Validation#Internals#ICorrectProvider#ExposeValidationOptions">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Internals.ValidationScope.Resolve(System.Type)">
            <summary>
            Resolve a validator based on a given type.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.ValidationScope.Resolve(System.Type,System.String)">
            <summary>
            Resolve a validator based on a given type and name.
            </summary>
            <param name="type"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.ValidationScope.Resolve``1">
            <summary>
            Resolve a validator based on a given type.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.ValidationScope.Resolve``1(System.String)">
            <summary>
            Resolve a validator based on a given type and name.
            </summary>
            <param name="name"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Internals.ValidationScope.CosmosStack#Validation#IValidationProvider#UpdateOptions(CosmosStack.Validation.ValidationOptions)">
            <summary>
            Override the configuration of the validator.
            </summary>
            <param name="options"></param>
        </member>
        <member name="M:CosmosStack.Validation.Internals.ValidationScope.CosmosStack#Validation#IValidationProvider#UpdateOptions(System.Action{CosmosStack.Validation.ValidationOptions})">
            <summary>
            Update the configuration of the validator.
            </summary>
            <param name="optionAct"></param>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.Any``2(CosmosStack.Validation.IValueRuleBuilder{``0,``1[]},System.Func{``1,System.Boolean})">
            <summary>
            Any
            </summary>
            <param name="builder"></param>
            <param name="func"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TItem"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.Any``3(CosmosStack.Validation.IValueRuleBuilder{``0,``1},System.Func{``2,System.Boolean})">
            <summary>
            Any
            </summary>
            <param name="builder"></param>
            <param name="func"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <typeparam name="TItem"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.All``2(CosmosStack.Validation.IValueRuleBuilder{``0,``1[]},System.Func{``1,System.Boolean})">
            <summary>
            All
            </summary>
            <param name="builder"></param>
            <param name="func"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TItem"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.All``3(CosmosStack.Validation.IValueRuleBuilder{``0,``1},System.Func{``2,System.Boolean})">
            <summary>
            All
            </summary>
            <param name="builder"></param>
            <param name="func"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <typeparam name="TItem"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.NotAny``2(CosmosStack.Validation.IValueRuleBuilder{``0,``1[]},System.Func{``1,System.Boolean})">
            <summary>
            Not any
            </summary>
            <param name="builder"></param>
            <param name="func"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TItem"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.NotAny``3(CosmosStack.Validation.IValueRuleBuilder{``0,``1},System.Func{``2,System.Boolean})">
            <summary>
            Not any
            </summary>
            <param name="builder"></param>
            <param name="func"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <typeparam name="TItem"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.NotAll``2(CosmosStack.Validation.IValueRuleBuilder{``0,``1[]},System.Func{``1,System.Boolean})">
            <summary>
            Not all
            </summary>
            <param name="builder"></param>
            <param name="func"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TItem"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.NotAll``3(CosmosStack.Validation.IValueRuleBuilder{``0,``1},System.Func{``2,System.Boolean})">
            <summary>
            Not all
            </summary>
            <param name="builder"></param>
            <param name="func"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <typeparam name="TItem"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.None``2(CosmosStack.Validation.IValueRuleBuilder{``0,``1[]},System.Func{``1,System.Boolean})">
            <summary>
            None
            </summary>
            <param name="builder"></param>
            <param name="func"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TItem"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.None``3(CosmosStack.Validation.IValueRuleBuilder{``0,``1},System.Func{``2,System.Boolean})">
            <summary>
            None
            </summary>
            <param name="builder"></param>
            <param name="func"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <typeparam name="TItem"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.In(CosmosStack.Validation.IValueRuleBuilder,System.Collections.Generic.ICollection{System.Object})">
            <summary>
            Determine whether the value is included in the given set.
            </summary>
            <param name="builder"></param>
            <param name="collection"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.In(CosmosStack.Validation.IValueRuleBuilder,System.Func{System.Collections.Generic.ICollection{System.Object}})">
            <summary>
            Determine whether the value is included in the given set.
            </summary>
            <param name="builder"></param>
            <param name="collectionFunc"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.In(CosmosStack.Validation.IValueRuleBuilder,System.Object[])">
            <summary>
            Determine whether the value is included in the given set.
            </summary>
            <param name="builder"></param>
            <param name="objects"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.In``1(CosmosStack.Validation.IValueRuleBuilder{``0},System.Collections.Generic.ICollection{System.Object})">
            <summary>
            Determine whether the value is included in the given set.
            </summary>
            <param name="builder"></param>
            <param name="collection"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.In``1(CosmosStack.Validation.IValueRuleBuilder{``0},System.Func{System.Collections.Generic.ICollection{System.Object}})">
            <summary>
            Determine whether the value is included in the given set.
            </summary>
            <param name="builder"></param>
            <param name="collectionFunc"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.In``1(CosmosStack.Validation.IValueRuleBuilder{``0},System.Object[])">
            <summary>
            Determine whether the value is included in the given set.
            </summary>
            <param name="builder"></param>
            <param name="objects"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.In``2(CosmosStack.Validation.IValueRuleBuilder{``0,``1},System.Collections.Generic.ICollection{``1})">
            <summary>
            Determine whether the value is included in the given set.
            </summary>
            <param name="builder"></param>
            <param name="collection"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.In``2(CosmosStack.Validation.IValueRuleBuilder{``0,``1},System.Func{System.Collections.Generic.ICollection{``1}})">
            <summary>
            Determine whether the value is included in the given set.
            </summary>
            <param name="builder"></param>
            <param name="collectionFunc"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.In``2(CosmosStack.Validation.IValueRuleBuilder{``0,``1},``1[])">
            <summary>
            Determine whether the value is included in the given set.
            </summary>
            <param name="builder"></param>
            <param name="objects"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.In``3(CosmosStack.Validation.IValueRuleBuilder{``0,``1},System.Collections.Generic.ICollection{``2})">
            <summary>
            Determine whether the value is included in the given set.
            </summary>
            <param name="builder"></param>
            <param name="collection"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <typeparam name="TItem"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.In``3(CosmosStack.Validation.IValueRuleBuilder{``0,``1},System.Func{System.Collections.Generic.ICollection{``2}})">
            <summary>
            Determine whether the value is included in the given set.
            </summary>
            <param name="builder"></param>
            <param name="collectionFunc"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <typeparam name="TItem"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.In``3(CosmosStack.Validation.IValueRuleBuilder{``0,``1},``2[])">
            <summary>
            Determine whether the value is included in the given set.
            </summary>
            <param name="builder"></param>
            <param name="objects"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <typeparam name="TItem"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.NotIn(CosmosStack.Validation.IValueRuleBuilder,System.Collections.Generic.ICollection{System.Object})">
            <summary>
            Determine whether the value is not included in the given set.
            </summary>
            <param name="builder"></param>
            <param name="collection"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.NotIn(CosmosStack.Validation.IValueRuleBuilder,System.Func{System.Collections.Generic.ICollection{System.Object}})">
            <summary>
            Determine whether the value is not included in the given set.
            </summary>
            <param name="builder"></param>
            <param name="collectionFunc"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.NotIn(CosmosStack.Validation.IValueRuleBuilder,System.Object[])">
            <summary>
            Determine whether the value is not included in the given set.
            </summary>
            <param name="builder"></param>
            <param name="objects"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.NotIn``1(CosmosStack.Validation.IValueRuleBuilder{``0},System.Func{System.Collections.Generic.ICollection{System.Object}})">
            <summary>
            Determine whether the value is not included in the given set.
            </summary>
            <param name="builder"></param>
            <param name="collectionFunc"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.NotIn``1(CosmosStack.Validation.IValueRuleBuilder{``0},System.Collections.Generic.ICollection{System.Object})">
            <summary>
            Determine whether the value is not included in the given set.
            </summary>
            <param name="builder"></param>
            <param name="collection"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.NotIn``1(CosmosStack.Validation.IValueRuleBuilder{``0},System.Object[])">
            <summary>
            Determine whether the value is not included in the given set.
            </summary>
            <param name="builder"></param>
            <param name="objects"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.NotIn``2(CosmosStack.Validation.IValueRuleBuilder{``0,``1},System.Collections.Generic.ICollection{``1})">
            <summary>
            Determine whether the value is not included in the given set.
            </summary>
            <param name="builder"></param>
            <param name="collection"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.NotIn``2(CosmosStack.Validation.IValueRuleBuilder{``0,``1},System.Func{System.Collections.Generic.ICollection{``1}})">
            <summary>
            Determine whether the value is not included in the given set.
            </summary>
            <param name="builder"></param>
            <param name="collectionFunc"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.NotIn``2(CosmosStack.Validation.IValueRuleBuilder{``0,``1},``1[])">
            <summary>
            Determine whether the value is not included in the given set.
            </summary>
            <param name="builder"></param>
            <param name="objects"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.NotIn``3(CosmosStack.Validation.IValueRuleBuilder{``0,``1},System.Func{System.Collections.Generic.ICollection{``2}})">
            <summary>
            Determine whether the value is not included in the given set.
            </summary>
            <param name="builder"></param>
            <param name="collectionFunc"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <typeparam name="TItem"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.NotIn``3(CosmosStack.Validation.IValueRuleBuilder{``0,``1},System.Collections.Generic.ICollection{``2})">
            <summary>
            Determine whether the value is not included in the given set.
            </summary>
            <param name="builder"></param>
            <param name="collection"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <typeparam name="TItem"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.NotIn``3(CosmosStack.Validation.IValueRuleBuilder{``0,``1},``2[])">
            <summary>
            Determine whether the value is not included in the given set.
            </summary>
            <param name="builder"></param>
            <param name="objects"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <typeparam name="TItem"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.Equal(CosmosStack.Validation.IValueRuleBuilder,System.Object)">
            <summary>
            Determine whether the two values are equal.
            </summary>
            <param name="builder"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.Equal(CosmosStack.Validation.IValueRuleBuilder,System.Object,System.Collections.IEqualityComparer)">
            <summary>
            Determine whether the two values are equal.
            </summary>
            <param name="builder"></param>
            <param name="value"></param>
            <param name="comparer"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.Equal(CosmosStack.Validation.IValueRuleBuilder,System.Func{System.Object},System.Type)">
            <summary>
            Determine whether the two values are equal.
            </summary>
            <param name="builder"></param>
            <param name="valueFunc"></param>
            <param name="valueType"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.Equal(CosmosStack.Validation.IValueRuleBuilder,System.Func{System.Object},System.Type,System.Collections.IEqualityComparer)">
            <summary>
            Determine whether the two values are equal.
            </summary>
            <param name="builder"></param>
            <param name="valueFunc"></param>
            <param name="valueType"></param>
            <param name="comparer"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.NotEqual(CosmosStack.Validation.IValueRuleBuilder,System.Object)">
            <summary>
            Determine whether the two values are not equal.
            </summary>
            <param name="builder"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.NotEqual(CosmosStack.Validation.IValueRuleBuilder,System.Object,System.Collections.IEqualityComparer)">
            <summary>
            Determine whether the two values are not equal.
            </summary>
            <param name="builder"></param>
            <param name="value"></param>
            <param name="comparer"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.NotEqual(CosmosStack.Validation.IValueRuleBuilder,System.Func{System.Object},System.Type)">
            <summary>
            Determine whether the two values are not equal.
            </summary>
            <param name="builder"></param>
            <param name="valueFunc"></param>
            <param name="valueType"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.NotEqual(CosmosStack.Validation.IValueRuleBuilder,System.Func{System.Object},System.Type,System.Collections.IEqualityComparer)">
            <summary>
            Determine whether the two values are not equal.
            </summary>
            <param name="builder"></param>
            <param name="valueFunc"></param>
            <param name="valueType"></param>
            <param name="comparer"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.Equal``1(CosmosStack.Validation.IValueRuleBuilder{``0},System.Object)">
            <summary>
            Determine whether the two values are equal.
            </summary>
            <param name="builder"></param>
            <param name="value"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.Equal``1(CosmosStack.Validation.IValueRuleBuilder{``0},System.Object,System.Collections.IEqualityComparer)">
            <summary>
            Determine whether the two values are equal.
            </summary>
            <param name="builder"></param>
            <param name="value"></param>
            <param name="comparer"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.Equal``1(CosmosStack.Validation.IValueRuleBuilder{``0},System.Func{System.Object},System.Type)">
            <summary>
            Determine whether the two values are equal.
            </summary>
            <param name="builder"></param>
            <param name="valueFunc"></param>
            <param name="valueType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.Equal``1(CosmosStack.Validation.IValueRuleBuilder{``0},System.Func{System.Object},System.Type,System.Collections.IEqualityComparer)">
            <summary>
            Determine whether the two values are equal.
            </summary>
            <param name="builder"></param>
            <param name="valueFunc"></param>
            <param name="valueType"></param>
            <param name="comparer"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.NotEqual``1(CosmosStack.Validation.IValueRuleBuilder{``0},System.Object)">
            <summary>
            Determine whether the two values are not equal.
            </summary>
            <param name="builder"></param>
            <param name="value"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.NotEqual``1(CosmosStack.Validation.IValueRuleBuilder{``0},System.Object,System.Collections.IEqualityComparer)">
            <summary>
            Determine whether the two values are not equal.
            </summary>
            <param name="builder"></param>
            <param name="value"></param>
            <param name="comparer"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.NotEqual``1(CosmosStack.Validation.IValueRuleBuilder{``0},System.Func{System.Object},System.Type)">
            <summary>
            Determine whether the two values are not equal.
            </summary>
            <param name="builder"></param>
            <param name="valueFunc"></param>
            <param name="valueType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.NotEqual``1(CosmosStack.Validation.IValueRuleBuilder{``0},System.Func{System.Object},System.Type,System.Collections.IEqualityComparer)">
            <summary>
            Determine whether the two values are not equal.
            </summary>
            <param name="builder"></param>
            <param name="valueFunc"></param>
            <param name="valueType"></param>
            <param name="comparer"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.Equal``2(CosmosStack.Validation.IValueRuleBuilder{``0,``1},``1)">
            <summary>
            Determine whether the two values are equal.
            </summary>
            <param name="builder"></param>
            <param name="value"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.Equal``2(CosmosStack.Validation.IValueRuleBuilder{``0,``1},``1,System.Collections.Generic.IEqualityComparer{``1})">
            <summary>
            Determine whether the two values are equal.
            </summary>
            <param name="builder"></param>
            <param name="value"></param>
            <param name="comparer"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.Equal``2(CosmosStack.Validation.IValueRuleBuilder{``0,``1},System.Func{``1})">
            <summary>
            Determine whether the two values are equal.
            </summary>
            <param name="builder"></param>
            <param name="valueFunc"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.Equal``2(CosmosStack.Validation.IValueRuleBuilder{``0,``1},System.Func{``1},System.Collections.Generic.IEqualityComparer{``1})">
            <summary>
            Determine whether the two values are equal.
            </summary>
            <param name="builder"></param>
            <param name="valueFunc"></param>
            <param name="comparer"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.NotEqual``2(CosmosStack.Validation.IValueRuleBuilder{``0,``1},``1)">
            <summary>
            Determine whether the two values are not equal.
            </summary>
            <param name="builder"></param>
            <param name="value"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.NotEqual``2(CosmosStack.Validation.IValueRuleBuilder{``0,``1},``1,System.Collections.Generic.IEqualityComparer{``1})">
            <summary>
            Determine whether the two values are not equal.
            </summary>
            <param name="builder"></param>
            <param name="value"></param>
            <param name="comparer"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.NotEqual``2(CosmosStack.Validation.IValueRuleBuilder{``0,``1},System.Func{``1})">
            <summary>
            Determine whether the two values are not equal.
            </summary>
            <param name="builder"></param>
            <param name="valueFunc"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.NotEqual``2(CosmosStack.Validation.IValueRuleBuilder{``0,``1},System.Func{``1},System.Collections.Generic.IEqualityComparer{``1})">
            <summary>
            Determine whether the two values are not equal.
            </summary>
            <param name="builder"></param>
            <param name="valueFunc"></param>
            <param name="comparer"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.LessThan(CosmosStack.Validation.IValueRuleBuilder,System.Object)">
            <summary>
            Determine whether one value is less than another value.
            </summary>
            <param name="builder"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.LessThan(CosmosStack.Validation.IValueRuleBuilder,System.Func{System.Object},System.Type)">
            <summary>
            Determine whether one value is less than another value.
            </summary>
            <param name="builder"></param>
            <param name="valueFunc"></param>
            <param name="valueType"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.LessThanOrEqual(CosmosStack.Validation.IValueRuleBuilder,System.Object)">
            <summary>
            Determine whether one value is less than or equal to another value.
            </summary>
            <param name="builder"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.LessThanOrEqual(CosmosStack.Validation.IValueRuleBuilder,System.Func{System.Object},System.Type)">
            <summary>
            Determine whether one value is less than or equal to another value.
            </summary>
            <param name="builder"></param>
            <param name="valueFunc"></param>
            <param name="valueType"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.GreaterThan(CosmosStack.Validation.IValueRuleBuilder,System.Object)">
            <summary>
            Determine whether one value is greater than another value.
            </summary>
            <param name="builder"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.GreaterThan(CosmosStack.Validation.IValueRuleBuilder,System.Func{System.Object},System.Type)">
            <summary>
            Determine whether one value is greater than another value.
            </summary>
            <param name="builder"></param>
            <param name="valueFunc"></param>
            <param name="valueType"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.GreaterThanOrEqual(CosmosStack.Validation.IValueRuleBuilder,System.Object)">
            <summary>
            Determine whether one value is greater than or equal to another value.
            </summary>
            <param name="builder"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.GreaterThanOrEqual(CosmosStack.Validation.IValueRuleBuilder,System.Func{System.Object},System.Type)">
            <summary>
            Determine whether one value is greater than or equal to another value.
            </summary>
            <param name="builder"></param>
            <param name="valueFunc"></param>
            <param name="valueType"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.LessThan``1(CosmosStack.Validation.IValueRuleBuilder{``0},System.Object)">
            <summary>
            Determine whether one value is less than another value.
            </summary>
            <param name="builder"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.LessThan``1(CosmosStack.Validation.IValueRuleBuilder{``0},System.Func{System.Object},System.Type)">
            <summary>
            Determine whether one value is less than another value.
            </summary>
            <param name="builder"></param>
            <param name="valueFunc"></param>
            <param name="valueType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.LessThanOrEqual``1(CosmosStack.Validation.IValueRuleBuilder{``0},System.Object)">
            <summary>
            Determine whether one value is less than or equal to another value.
            </summary>
            <param name="builder"></param>
            <param name="value"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.LessThanOrEqual``1(CosmosStack.Validation.IValueRuleBuilder{``0},System.Func{System.Object},System.Type)">
            <summary>
            Determine whether one value is less than or equal to another value.
            </summary>
            <param name="builder"></param>
            <param name="valueFunc"></param>
            <param name="valueType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.GreaterThan``1(CosmosStack.Validation.IValueRuleBuilder{``0},System.Object)">
            <summary>
            Determine whether one value is greater than another value.
            </summary>
            <param name="builder"></param>
            <param name="value"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.GreaterThan``1(CosmosStack.Validation.IValueRuleBuilder{``0},System.Func{System.Object},System.Type)">
            <summary>
            Determine whether one value is greater than another value.
            </summary>
            <param name="builder"></param>
            <param name="valueFunc"></param>
            <param name="valueType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.GreaterThanOrEqual``1(CosmosStack.Validation.IValueRuleBuilder{``0},System.Object)">
            <summary>
            Determine whether one value is greater than or equal to another value.
            </summary>
            <param name="builder"></param>
            <param name="value"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.GreaterThanOrEqual``1(CosmosStack.Validation.IValueRuleBuilder{``0},System.Func{System.Object},System.Type)">
            <summary>
            Determine whether one value is greater than or equal to another value.
            </summary>
            <param name="builder"></param>
            <param name="valueFunc"></param>
            <param name="valueType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.LessThan``2(CosmosStack.Validation.IValueRuleBuilder{``0,``1},``1)">
            <summary>
            Determine whether one value is less than another value.
            </summary>
            <param name="builder"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.LessThan``2(CosmosStack.Validation.IValueRuleBuilder{``0,``1},System.Func{``1})">
            <summary>
            Determine whether one value is less than another value.
            </summary>
            <param name="builder"></param>
            <param name="valueFunc"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.LessThanOrEqual``2(CosmosStack.Validation.IValueRuleBuilder{``0,``1},``1)">
            <summary>
            Determine whether one value is less than or equal to another value.
            </summary>
            <param name="builder"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.LessThanOrEqual``2(CosmosStack.Validation.IValueRuleBuilder{``0,``1},System.Func{``1})">
            <summary>
            Determine whether one value is less than or equal to another value.
            </summary>
            <param name="builder"></param>
            <param name="valueFunc"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.GreaterThan``2(CosmosStack.Validation.IValueRuleBuilder{``0,``1},``1)">
            <summary>
            Determine whether one value is greater than another value.
            </summary>
            <param name="builder"></param>
            <param name="value"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.GreaterThan``2(CosmosStack.Validation.IValueRuleBuilder{``0,``1},System.Func{``1})">
            <summary>
            Determine whether one value is greater than another value.
            </summary>
            <param name="builder"></param>
            <param name="valueFunc"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.GreaterThanOrEqual``2(CosmosStack.Validation.IValueRuleBuilder{``0,``1},``1)">
            <summary>
            Determine whether one value is greater than or equal to another value.
            </summary>
            <param name="builder"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.GreaterThanOrEqual``2(CosmosStack.Validation.IValueRuleBuilder{``0,``1},System.Func{``1})">
            <summary>
            Determine whether one value is greater than or equal to another value.
            </summary>
            <param name="builder"></param>
            <param name="valueFunc"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.RequiredString(CosmosStack.Validation.IValueRuleBuilder)">
            <summary>
            The constraint type must be of string type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.RequiredNumeric(CosmosStack.Validation.IValueRuleBuilder,CosmosStack.Reflection.TypeIsOptions)">
            <summary>
            The constraint type must be of numeric type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.RequiredBoolean(CosmosStack.Validation.IValueRuleBuilder)">
            <summary>
            The constraint type must be of boolean type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.RequiredGuid(CosmosStack.Validation.IValueRuleBuilder)">
            <summary>
            The constraint type must be of Guid type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.RequiredDateTime(CosmosStack.Validation.IValueRuleBuilder,System.Globalization.DateTimeStyles)">
            <summary>
            The constraint type must be of DateTime type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.RequiredDateInfo(CosmosStack.Validation.IValueRuleBuilder,System.Globalization.DateTimeStyles)">
            <summary>
            The constraint type must be of DateInfo type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.RequiredString``1(CosmosStack.Validation.IValueRuleBuilder{``0})">
            <summary>
            The constraint type must be of string type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.RequiredNumeric``1(CosmosStack.Validation.IValueRuleBuilder{``0},CosmosStack.Reflection.TypeIsOptions)">
            <summary>
            The constraint type must be of numeric type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.RequiredBoolean``1(CosmosStack.Validation.IValueRuleBuilder{``0})">
            <summary>
            The constraint type must be of boolean type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.RequiredGuid``1(CosmosStack.Validation.IValueRuleBuilder{``0})">
            <summary>
            The constraint type must be of Guid type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.RequiredDateTime``1(CosmosStack.Validation.IValueRuleBuilder{``0},System.Globalization.DateTimeStyles)">
            <summary>
            The constraint type must be of DateTime type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.RequiredDateInfo``1(CosmosStack.Validation.IValueRuleBuilder{``0},System.Globalization.DateTimeStyles)">
            <summary>
            The constraint type must be of DateInfo type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.RequiredString``2(CosmosStack.Validation.IValueRuleBuilder{``0,``1})">
            <summary>
            The constraint type must be of string type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.RequiredNumeric``2(CosmosStack.Validation.IValueRuleBuilder{``0,``1},CosmosStack.Reflection.TypeIsOptions)">
            <summary>
            The constraint type must be of numeric type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.RequiredBoolean``2(CosmosStack.Validation.IValueRuleBuilder{``0,``1})">
            <summary>
            The constraint type must be of boolean type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.RequiredGuid``2(CosmosStack.Validation.IValueRuleBuilder{``0,``1})">
            <summary>
            The constraint type must be of Guid type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.RequiredDateTime``2(CosmosStack.Validation.IValueRuleBuilder{``0,``1},System.Globalization.DateTimeStyles)">
            <summary>
            The constraint type must be of DateTime type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.RequiredDateInfo``2(CosmosStack.Validation.IValueRuleBuilder{``0,``1},System.Globalization.DateTimeStyles)">
            <summary>
            The constraint type must be of DateInfo type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.WithMessage(CosmosStack.Validation.IValueRuleBuilder,System.String)">
            <summary>
            Fill in the message.
            </summary>
            <param name="builder"></param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.WithMessage(CosmosStack.Validation.IValueRuleBuilder,System.String,System.Boolean)">
            <summary>
            Fill in the message.
            </summary>
            <param name="builder"></param>
            <param name="message"></param>
            <param name="appendOrOverwrite"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.WithMessage``1(CosmosStack.Validation.IValueRuleBuilder{``0},System.String)">
            <summary>
            Fill in the message.
            </summary>
            <param name="builder"></param>
            <param name="message"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.WithMessage``1(CosmosStack.Validation.IValueRuleBuilder{``0},System.String,System.Boolean)">
            <summary>
            Fill in the message.
            </summary>
            <param name="builder"></param>
            <param name="message"></param>
            <param name="appendOrOverwrite"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.WithMessage``2(CosmosStack.Validation.IValueRuleBuilder{``0,``1},System.String)">
            <summary>
            Fill in the message.
            </summary>
            <param name="builder"></param>
            <param name="message"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.CorrectValueRuleExtensions.WithMessage``2(CosmosStack.Validation.IValueRuleBuilder{``0,``1},System.String,System.Boolean)">
            <summary>
            Fill in the message.
            </summary>
            <param name="builder"></param>
            <param name="message"></param>
            <param name="appendOrOverwrite"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.IValidationProvider">
            <summary>
            An interface of validation provider <br />
            验证服务提供者程序接口
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.IValidationProvider.Resolve(System.Type)">
            <summary>
            Resolve a validator based on a given type. <br />
            根据给定的类型解析验证器
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IValidationProvider.Resolve(System.Type,System.String)">
            <summary>
            Resolve a validator based on a given type and name. <br />
            根据给定的类型和名称解析验证器
            </summary>
            <param name="type"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IValidationProvider.Resolve``1">
            <summary>
            Resolve a validator based on a given type. <br />
            根据给定的类型解析验证器
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IValidationProvider.Resolve``1(System.String)">
            <summary>
            Resolve a validator based on a given type and name. <br />
            根据给定的类型和名称解析验证器
            </summary>
            <param name="name"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IValidationProvider.UpdateOptions(CosmosStack.Validation.ValidationOptions)">
            <summary>
            Override the configuration of the validator. <br />
            覆盖验证选项
            </summary>
            <param name="options"></param>
        </member>
        <member name="M:CosmosStack.Validation.IValidationProvider.UpdateOptions(System.Action{CosmosStack.Validation.ValidationOptions})">
            <summary>
            Update the configuration of the validator. <br />
            覆盖验证选项
            </summary>
            <param name="optionAct"></param>
        </member>
        <member name="T:CosmosStack.Validation.IPredicateValueRuleBuilder">
            <summary>
            An interface for ValueRueBuilder to wait for activation conditions. <br />
            值验证规则构造器接口，此接口可用于期待一个可执行条件
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.IPredicateValueRuleBuilder.When(System.Func{System.Object,System.Boolean})">
            <summary>
            When <br />
            当
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IPredicateValueRuleBuilder.When(System.Func{System.Object,System.Object,System.Boolean})">
            <summary>
            When <br />
            当
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IPredicateValueRuleBuilder.Unless(System.Func{System.Object,System.Boolean})">
            <summary>
            Unless <br />
            除非
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IPredicateValueRuleBuilder.Unless(System.Func{System.Object,System.Object,System.Boolean})">
            <summary>
            Unless <br />
            除非
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.IPredicateValueRuleBuilder`1">
            <summary>
            An interface for ValueRueBuilder to wait for activation conditions. <br />
            值验证规则构造器接口，此接口可用于期待一个可执行条件
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:CosmosStack.Validation.IPredicateValueRuleBuilder`1.When(System.Func{System.Object,System.Boolean})">
            <summary>
            When <br />
            当
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IPredicateValueRuleBuilder`1.When(System.Func{`0,System.Object,System.Boolean})">
            <summary>
            When <br />
            当
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IPredicateValueRuleBuilder`1.Unless(System.Func{System.Object,System.Boolean})">
            <summary>
            Unless <br />
            除非
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IPredicateValueRuleBuilder`1.Unless(System.Func{`0,System.Object,System.Boolean})">
            <summary>
            Unless <br />
            除非
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.IPredicateValueRuleBuilder`2">
            <summary>
            An interface for ValueRueBuilder to wait for activation conditions. <br />
            值验证规则构造器接口，此接口可用于期待一个可执行条件
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
        </member>
        <member name="M:CosmosStack.Validation.IPredicateValueRuleBuilder`2.When(System.Func{`1,System.Boolean})">
            <summary>
            When <br />
            当
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IPredicateValueRuleBuilder`2.When(System.Func{`0,`1,System.Boolean})">
            <summary>
            When <br />
            当
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IPredicateValueRuleBuilder`2.Unless(System.Func{`1,System.Boolean})">
            <summary>
            Unless <br />
            除非
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IPredicateValueRuleBuilder`2.Unless(System.Func{`0,`1,System.Boolean})">
            <summary>
            Unless <br />
            除非
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.IValueRuleBuilder">
            <summary>
            Interface of ValueRuleBuilder <br />
            值验证规则构建器接口
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.IValueRuleBuilder.AppendRule">
            <summary>
            Append a rule <br />
            附加一个规则
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IValueRuleBuilder.OverwriteRule">
            <summary>
            Overwrite a rule <br />
            覆写一个规则
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IValueRuleBuilder.And">
            <summary>
            And <br />
            与规则
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IValueRuleBuilder.Or">
            <summary>
            Or <br />
            或规则
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IValueRuleBuilder.Use(CosmosStack.Validation.VerifyMemberRulePackage,CosmosStack.Validation.VerifyRuleMode)">
            <summary>
            Use <br />
            使用给定的成员规则包
            </summary>
            <param name="package"></param>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IValueRuleBuilder.InEnum(System.Type)">
            <summary>
            In Enum... <br />
            值在给定的枚举内
            </summary>
            <param name="enumType"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IValueRuleBuilder.InEnum``1">
            <summary>
            In Enum... <br />
            值在给定的枚举内
            </summary>
            <typeparam name="TEnum"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IValueRuleBuilder.IsEnumName(System.Type,System.Boolean)">
            <summary>
            Is enum name... <br />
            名称是否存在于给定枚举类型内（成员名称同名）
            </summary>
            <param name="enumType"></param>
            <param name="caseSensitive"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IValueRuleBuilder.IsEnumName``1(System.Boolean)">
            <summary>
            Is enum name... <br />
            名称是否存在于给定枚举类型内（成员名称同名）
            </summary>
            <param name="caseSensitive"></param>
            <typeparam name="TEnum"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IValueRuleBuilder.ScalePrecision(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Limit the scale and precision of the value.
            </summary>
            <param name="scale"></param>
            <param name="precision"></param>
            <param name="ignoreTrailingZeros"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IValueRuleBuilder.RequiredType(System.Type)">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IValueRuleBuilder.RequiredTypes(System.Type[])">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <param name="types"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IValueRuleBuilder.RequiredTypes``1">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IValueRuleBuilder.RequiredTypes``2">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IValueRuleBuilder.RequiredTypes``3">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IValueRuleBuilder.RequiredTypes``4">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IValueRuleBuilder.RequiredTypes``5">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IValueRuleBuilder.RequiredTypes``6">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IValueRuleBuilder.RequiredTypes``7">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IValueRuleBuilder.RequiredTypes``8">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IValueRuleBuilder.RequiredTypes``9">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IValueRuleBuilder.RequiredTypes``10">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IValueRuleBuilder.RequiredTypes``11">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IValueRuleBuilder.RequiredTypes``12">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IValueRuleBuilder.RequiredTypes``13">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IValueRuleBuilder.RequiredTypes``14">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <typeparam name="T14"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IValueRuleBuilder.RequiredTypes``15">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <typeparam name="T14"></typeparam>
            <typeparam name="T15"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IValueRuleBuilder.RequiredTypes``16">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <typeparam name="T14"></typeparam>
            <typeparam name="T15"></typeparam>
            <typeparam name="T16"></typeparam>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.IValueRuleBuilder`1">
            <summary>
            Interface of ValueRuleBuilder <br />
            值验证规则构建器接口
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:CosmosStack.Validation.IValueRuleBuilder`1.AppendRule">
            <summary>
            Append a rule <br />
            附加一条规则
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IValueRuleBuilder`1.OverwriteRule">
            <summary>
            Overwrite a rule <br />
            覆写一条规则
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IValueRuleBuilder`1.And">
            <summary>
            And <br />
            与
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IValueRuleBuilder`1.Or">
            <summary>
            Or <br />
            或
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IValueRuleBuilder`1.Use(CosmosStack.Validation.VerifyMemberRulePackage,CosmosStack.Validation.VerifyRuleMode)">
            <summary>
            Use <br />
            使用给定的成员规则包
            </summary>
            <param name="package"></param>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IValueRuleBuilder`1.InEnum(System.Type)">
            <summary>
            In Enum... <br />
            值在给定的枚举内
            </summary>
            <param name="enumType"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IValueRuleBuilder`1.InEnum``1">
            <summary>
            In Enum... <br />
            值在给定的枚举内
            </summary>
            <typeparam name="TEnum"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IValueRuleBuilder`1.IsEnumName(System.Type,System.Boolean)">
            <summary>
            Is enum name... <br />
            名称是否存在于给定枚举类型内（成员名称同名）
            </summary>
            <param name="enumType"></param>
            <param name="caseSensitive"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IValueRuleBuilder`1.IsEnumName``1(System.Boolean)">
            <summary>
            Is enum name... <br />
            名称是否存在于给定枚举类型内（成员名称同名）
            </summary>
            <param name="caseSensitive"></param>
            <typeparam name="TEnum"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IValueRuleBuilder`1.ScalePrecision(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Limit the scale and precision of the value.
            </summary>
            <param name="scale"></param>
            <param name="precision"></param>
            <param name="ignoreTrailingZeros"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IValueRuleBuilder`1.RequiredType(System.Type)">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IValueRuleBuilder`1.RequiredTypes(System.Type[])">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <param name="types"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IValueRuleBuilder`1.RequiredTypes``1">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IValueRuleBuilder`1.RequiredTypes``2">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IValueRuleBuilder`1.RequiredTypes``3">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IValueRuleBuilder`1.RequiredTypes``4">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IValueRuleBuilder`1.RequiredTypes``5">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IValueRuleBuilder`1.RequiredTypes``6">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IValueRuleBuilder`1.RequiredTypes``7">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IValueRuleBuilder`1.RequiredTypes``8">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IValueRuleBuilder`1.RequiredTypes``9">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IValueRuleBuilder`1.RequiredTypes``10">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IValueRuleBuilder`1.RequiredTypes``11">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IValueRuleBuilder`1.RequiredTypes``12">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IValueRuleBuilder`1.RequiredTypes``13">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IValueRuleBuilder`1.RequiredTypes``14">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <typeparam name="T14"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IValueRuleBuilder`1.RequiredTypes``15">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <typeparam name="T14"></typeparam>
            <typeparam name="T15"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IValueRuleBuilder`1.RequiredTypes``16">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <typeparam name="T14"></typeparam>
            <typeparam name="T15"></typeparam>
            <typeparam name="T16"></typeparam>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.IValueRuleBuilder`2">
            <summary>
            Interface of ValueRuleBuilder <br />
            值验证规则构建器接口
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
        </member>
        <member name="M:CosmosStack.Validation.IValueRuleBuilder`2.AppendRule">
            <summary>
            Append a rule <br />
            附加一挑规则
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IValueRuleBuilder`2.OverwriteRule">
            <summary>
            Overwrite a rule <br />
            覆写一条规则
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IValueRuleBuilder`2.And">
            <summary>
            And <br />
            与
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IValueRuleBuilder`2.Or">
            <summary>
            Or <br />
            或
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IValueRuleBuilder`2.Use(CosmosStack.Validation.VerifyMemberRulePackage,CosmosStack.Validation.VerifyRuleMode)">
            <summary>
            Use <br />
            使用给定的成员规则包
            </summary>
            <param name="package"></param>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IValueRuleBuilder`2.InEnum(System.Type)">
            <summary>
            In Enum... <br />
            值在给定的枚举内
            </summary>
            <param name="enumType"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IValueRuleBuilder`2.InEnum``1">
            <summary>
            In Enum... <br />
            值在给定的枚举内
            </summary>
            <typeparam name="TEnum"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IValueRuleBuilder`2.IsEnumName(System.Type,System.Boolean)">
            <summary>
            Is enum name... <br />
            名称是否存在于给定枚举类型内（成员名称同名）
            </summary>
            <param name="enumType"></param>
            <param name="caseSensitive"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IValueRuleBuilder`2.IsEnumName``1(System.Boolean)">
            <summary>
            Is enum name... <br />
            名称是否存在于给定枚举类型内（成员名称同名）
            </summary>
            <param name="caseSensitive"></param>
            <typeparam name="TEnum"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IValueRuleBuilder`2.ScalePrecision(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Limit the scale and precision of the value.
            </summary>
            <param name="scale"></param>
            <param name="precision"></param>
            <param name="ignoreTrailingZeros"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IValueRuleBuilder`2.RequiredType(System.Type)">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IValueRuleBuilder`2.RequiredTypes(System.Type[])">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <param name="types"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IValueRuleBuilder`2.RequiredTypes``1">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IValueRuleBuilder`2.RequiredTypes``2">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IValueRuleBuilder`2.RequiredTypes``3">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IValueRuleBuilder`2.RequiredTypes``4">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IValueRuleBuilder`2.RequiredTypes``5">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IValueRuleBuilder`2.RequiredTypes``6">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IValueRuleBuilder`2.RequiredTypes``7">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IValueRuleBuilder`2.RequiredTypes``8">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IValueRuleBuilder`2.RequiredTypes``9">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IValueRuleBuilder`2.RequiredTypes``10">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IValueRuleBuilder`2.RequiredTypes``11">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IValueRuleBuilder`2.RequiredTypes``12">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IValueRuleBuilder`2.RequiredTypes``13">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IValueRuleBuilder`2.RequiredTypes``14">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <typeparam name="T14"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IValueRuleBuilder`2.RequiredTypes``15">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <typeparam name="T14"></typeparam>
            <typeparam name="T15"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IValueRuleBuilder`2.RequiredTypes``16">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <typeparam name="T14"></typeparam>
            <typeparam name="T15"></typeparam>
            <typeparam name="T16"></typeparam>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.IWaitForMessageValueRuleBuilder">
            <summary>
            The lower-level interface of ValueRuleBuilder. Used to wait for verification information. <br />
            值验证规则构造器接口，此接口可用于期待一个错误消息
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.IWaitForMessageValueRuleBuilder.WithName(System.String)">
            <summary>
            Fill in the operation name.
            </summary>
            <param name="operationName"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IWaitForMessageValueRuleBuilder.WithMessage(System.String)">
            <summary>
            Fill in the message.
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.IWaitForMessageValueRuleBuilder`1">
            <summary>
            The lower-level interface of ValueRuleBuilder. Used to wait for verification information. <br />
            值验证规则构造器接口，此接口可用于期待一个错误消息
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:CosmosStack.Validation.IWaitForMessageValueRuleBuilder`1.WithName(System.String)">
            <summary>
            Fill in the operation name.
            </summary>
            <param name="operationName"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IWaitForMessageValueRuleBuilder`1.WithMessage(System.String)">
            <summary>
            Fill in the message.
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.IWaitForMessageValueRuleBuilder`2">
            <summary>
            The lower-level interface of ValueRuleBuilder. Used to wait for verification information. <br />
            值验证规则构造器接口，此接口可用于期待一个错误消息
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
        </member>
        <member name="M:CosmosStack.Validation.IWaitForMessageValueRuleBuilder`2.WithName(System.String)">
            <summary>
            Fill in the operation name.
            </summary>
            <param name="operationName"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.IWaitForMessageValueRuleBuilder`2.WithMessage(System.String)">
            <summary>
            Fill in the message.
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.IVerifyResult">
            <summary>
            The interface used to constrain the verification results. <br />
            验证结果接口
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.IVerifyResult.IsValid">
            <summary>
            Return the verification result. <br />
            返回一个验证解雇
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.IVerifyResult.Errors">
            <summary>
            Return all error messages. <br />
            异常集
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.IVerifyResult.MemberNames">
            <summary>
            Returns the names of all fields with errors. <br />
            所有经过验证的成员名称
            </summary>
        </member>
        <member name="T:CosmosStack.Validation.Objects.AbstractVerifiableObjectResolver">
            <summary>
            Abstract Verifiable Object Resolver <br />
            抽象的可验证对象解析器
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Objects.AbstractVerifiableObjectResolver.Resolve``1(``0)">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Objects.AbstractVerifiableObjectResolver.Resolve``1(``0,System.String)">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Objects.AbstractVerifiableObjectResolver.Resolve``1(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Objects.AbstractVerifiableObjectResolver.Resolve``1(System.Collections.Generic.IDictionary{System.String,System.Object},System.String)">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Objects.AbstractVerifiableObjectResolver.Resolve(System.Type,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Objects.AbstractVerifiableObjectResolver.Resolve(System.Type,System.Object,System.String)">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Objects.AbstractVerifiableObjectResolver.Resolve(System.Type,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Objects.AbstractVerifiableObjectResolver.Resolve(System.Type,System.Collections.Generic.IDictionary{System.String,System.Object},System.String)">
            <inheritdoc />
        </member>
        <member name="T:CosmosStack.Validation.Objects.ICustomVerifiableMemberContractImpl">
            <summary>
            An interface of implementation for custom verifiable member contract <br />
            实现自定义可验证成员约定的接口
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Objects.ICustomVerifiableMemberContractImpl.HasAttributeDefined``1">
            <summary>
            Has attribute defined <br />
            标记特性是否定义
            </summary>
            <typeparam name="TAttr"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Objects.ICustomVerifiableMemberContractImpl.HasAttributeDefined``2">
            <summary>
            Has attribute defined <br />
            标记特性是否定义
            </summary>
            <typeparam name="TAttr1"></typeparam>
            <typeparam name="TAttr2"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Objects.ICustomVerifiableMemberContractImpl.HasAttributeDefined``3">
            <summary>
            Has attribute defined <br />
            标记特性是否定义
            </summary>
            <typeparam name="TAttr1"></typeparam>
            <typeparam name="TAttr2"></typeparam>
            <typeparam name="TAttr3"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Objects.ICustomVerifiableMemberContractImpl.HasAttributeDefined``4">
            <summary>
            Has attribute defined <br />
            标记特性是否定义
            </summary>
            <typeparam name="TAttr1"></typeparam>
            <typeparam name="TAttr2"></typeparam>
            <typeparam name="TAttr3"></typeparam>
            <typeparam name="TAttr4"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Objects.ICustomVerifiableMemberContractImpl.HasAttributeDefined``5">
            <summary>
            Has attribute defined <br />
            标记特性是否定义
            </summary>
            <typeparam name="TAttr1"></typeparam>
            <typeparam name="TAttr2"></typeparam>
            <typeparam name="TAttr3"></typeparam>
            <typeparam name="TAttr4"></typeparam>
            <typeparam name="TAttr5"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Objects.ICustomVerifiableMemberContractImpl.HasAttributeDefined``6">
            <summary>
            Has attribute defined <br />
            标记特性是否定义
            </summary>
            <typeparam name="TAttr1"></typeparam>
            <typeparam name="TAttr2"></typeparam>
            <typeparam name="TAttr3"></typeparam>
            <typeparam name="TAttr4"></typeparam>
            <typeparam name="TAttr5"></typeparam>
            <typeparam name="TAttr6"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Objects.ICustomVerifiableMemberContractImpl.HasAttributeDefined``7">
            <summary>
            Has attribute defined <br />
            标记特性是否定义
            </summary>
            <typeparam name="TAttr1"></typeparam>
            <typeparam name="TAttr2"></typeparam>
            <typeparam name="TAttr3"></typeparam>
            <typeparam name="TAttr4"></typeparam>
            <typeparam name="TAttr5"></typeparam>
            <typeparam name="TAttr6"></typeparam>
            <typeparam name="TAttr7"></typeparam>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Objects.ICustomVerifiableObjectContractImpl">
            <summary>
            An interface of implementation for custom verifiable object contract <br />
            实现自定义可验证对象约定的接口
            </summary>
        </member>
        <member name="T:CosmosStack.Validation.Objects.IVerifiableMemberContract">
            <summary>
            An interface for Verifiable Member Contract <br />
            可验证成员约定的接口
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Objects.IVerifiableMemberContract.MemberName">
            <summary>
            Member name <br />
            成员名
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Objects.IVerifiableMemberContract.DeclaringType">
            <summary>
            Declaring type <br />
            声明类型
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Objects.IVerifiableMemberContract.MemberType">
            <summary>
            Member type <br />
            成员类型
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Objects.IVerifiableMemberContract.IsBasicType">
            <summary>
            Is basic type <br />
            是否为基本类型
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Objects.IVerifiableMemberContract.MemberKind">
            <summary>
            Member kind <br />
            成员类型
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Objects.IVerifiableMemberContract.GetValue(System.Object)">
            <summary>
            Get value from the given instance <br />
            从给定的实例中获取值
            </summary>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Objects.IVerifiableMemberContract.GetValue(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Get value from dictionary <br />
            从给定的字典中获取值
            </summary>
            <param name="keyValueCollection"></param>
            <returns></returns>
        </member>
        <member name="P:CosmosStack.Validation.Objects.IVerifiableMemberContract.IncludeAnnotations">
            <summary>
            Is include annotation <br />
            标记是否包含注解
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Objects.IVerifiableMemberContract.Attributes">
            <summary>
            Get attributes <br />
            获取特性集合
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Objects.IVerifiableMemberContract.GetAttributes``1">
            <summary>
            Get attributes <br />
            获取特性集合
            </summary>
            <typeparam name="TAttribute"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Objects.IVerifiableMemberContract.GetParameterAnnotations">
            <summary>
            Get parameter annotations <br />
            获取参数注解
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Objects.IVerifiableMemberContract.GetQuietVerifiableAnnotations(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Get quiet verifiable annotations <br />
            获取安静验证注解
            </summary>
            <param name="excludeFlagAnnotation"></param>
            <param name="excludeObjectContextVerifiableAnnotation"></param>
            <param name="excludeStrongVerifiableAnnotation"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Objects.IVerifiableMemberContract.GetStrongVerifiableAnnotations(System.Boolean,System.Boolean)">
            <summary>
            Get strong verifiable annotations <br />
            获取强验证注解
            </summary>
            <param name="excludeFlagAnnotation"></param>
            <param name="excludeObjectContextVerifiableAnnotation"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Objects.IVerifiableMemberContract.GetObjectContextVerifiableAnnotations(System.Boolean)">
            <summary>
            Get ObjectContext verifiable annotations <br />
            获取带上下文的可验证注解
            </summary>
            <param name="excludeFlagAnnotation"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Objects.IVerifiableMemberContract.GetFlagAnnotations(System.Boolean)">
            <summary>
            Get flag annotations <br />
            获取带 Flag 的注解
            </summary>
            <param name="excludeVerifiableAnnotation"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Objects.IVerifiableMemberContract.GetVerifiableAnnotations(System.Boolean)">
            <summary>
            Get verifiable annotations <br />
            获取可验证注解
            </summary>
            <param name="excludeFlagAnnotation"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Objects.IVerifiableObjectContract">
            <summary>
            An interface for Verifiable Object Contract <br />
            可验证对象约定的接口
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Objects.IVerifiableObjectContract.Type">
            <summary>
            Type <br />
            类型
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Objects.IVerifiableObjectContract.IsBasicType">
            <summary>
            Is basic type <br />
            是否为基本类型
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Objects.IVerifiableObjectContract.ObjectKind">
            <summary>
            Object Kind <br />
            对象种类
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Objects.IVerifiableObjectContract.GetValue(System.Object,System.String)">
            <summary>
            Get value from the given instance by member name <br />
            根据给定的成员名称，从给定的实例中获取值
            </summary>
            <param name="instance"></param>
            <param name="memberName"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Objects.IVerifiableObjectContract.GetValue(System.Object,System.Int32)">
            <summary>
            Get value from the given instance by member index <br />
            根据给定的成员索引值，从给定的实例中获取值
            </summary>
            <param name="instance"></param>
            <param name="memberIndex"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Objects.IVerifiableObjectContract.GetValue(System.Collections.Generic.IDictionary{System.String,System.Object},System.String)">
            <summary>
            Get value from dictionary by member name <br />
            根据给定的成员名称，从给定的字典中获取值
            </summary>
            <param name="keyValueCollection"></param>
            <param name="memberName"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Objects.IVerifiableObjectContract.GetValue(System.Collections.Generic.IDictionary{System.String,System.Object},System.Int32)">
            <summary>
            Get value from dictionary by member index <br />
            根据给定的成员索引值，从给定的字典中获取值
            </summary>
            <param name="keyValueCollection"></param>
            <param name="memberIndex"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Objects.IVerifiableObjectContract.GetMemberContract(System.String)">
            <summary>
            Get member contract <br />
            获取成员约定
            </summary>
            <param name="memberName"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Objects.IVerifiableObjectContract.GetMemberContract(System.Reflection.PropertyInfo)">
            <summary>
            Get member contract <br />
            获取成员约定
            </summary>
            <param name="propertyInfo"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Objects.IVerifiableObjectContract.GetMemberContract(System.Reflection.FieldInfo)">
            <summary>
            Get member contract <br />
            获取成员约定
            </summary>
            <param name="fieldInfo"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Objects.IVerifiableObjectContract.GetMemberContract(System.Int32)">
            <summary>
            Get member contract <br />
            获取成员约定
            </summary>
            <param name="memberIndex"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Objects.IVerifiableObjectContract.ContainsMember(System.String)">
            <summary>
            Is contain member <br />
            检查是否包含给定名称的成员
            </summary>
            <param name="memberName"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Objects.IVerifiableObjectContract.GetMemberContracts">
            <summary>
            Get all member contracts <br />
            获取所有成员约定
            </summary>
            <returns></returns>
        </member>
        <member name="P:CosmosStack.Validation.Objects.IVerifiableObjectContract.IncludeAnnotations">
            <summary>
            Is include annotation <br />
            标记是否包含注解
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Objects.IVerifiableObjectContract.Attributes">
            <summary>
            Get attributes <br />
            获取特性集合
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Objects.IVerifiableObjectContract.GetAttributes``1">
            <summary>
            Get attributes <br />
            获取特性集合
            </summary>
            <typeparam name="TAttribute"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Objects.IVerifiableObjectContract.GetParameterAnnotations">
            <summary>
            Get parameter annotations <br />
            获取参数注解
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Objects.IVerifiableObjectContract.GetQuietVerifiableAnnotations">
            <summary>
            Get quiet verifiable annotations <br />
            获取安静验证注解
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Objects.IVerifiableObjectContract.GetStrongVerifiableAnnotations">
            <summary>
            Get strong verifiable annotations <br />
            获取强验证注解
            </summary>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Objects.IVerifiableObjectResolver">
            <summary>
            An interface for verifiable object resolver <br />
            可验证对象解析器
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Objects.IVerifiableObjectResolver.Resolve``1(``0)">
            <summary>
            Resolve <br />
            解析
            </summary>
            <param name="instance"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Objects.IVerifiableObjectResolver.Resolve``1(``0,System.String)">
            <summary>
            Resolve <br />
            解析
            </summary>
            <param name="instance"></param>
            <param name="instanceName"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Objects.IVerifiableObjectResolver.Resolve``1(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Resolve <br />
            解析
            </summary>
            <param name="keyValueCollection"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Objects.IVerifiableObjectResolver.Resolve``1(System.Collections.Generic.IDictionary{System.String,System.Object},System.String)">
            <summary>
            Resolve <br />
            解析
            </summary>
            <param name="keyValueCollection"></param>
            <param name="instanceName"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Objects.IVerifiableObjectResolver.Resolve(System.Type,System.Object)">
            <summary>
            Resolve <br />
            解析
            </summary>
            <param name="declaringType"></param>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Objects.IVerifiableObjectResolver.Resolve(System.Type,System.Object,System.String)">
            <summary>
            Resolve <br />
            解析
            </summary>
            <param name="declaringType"></param>
            <param name="instance"></param>
            <param name="instanceName"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Objects.IVerifiableObjectResolver.Resolve(System.Type,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Resolve <br />
            解析
            </summary>
            <param name="declaringType"></param>
            <param name="keyValueCollection"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Objects.IVerifiableObjectResolver.Resolve(System.Type,System.Collections.Generic.IDictionary{System.String,System.Object},System.String)">
            <summary>
            Resolve <br />
            解析
            </summary>
            <param name="declaringType"></param>
            <param name="keyValueCollection"></param>
            <param name="instanceName"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Objects.VerifiableMemberContext">
            <summary>
            Verifiable member context <br />
            可验证成员上下文
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Objects.VerifiableMemberContext.MemberName">
            <summary>
            Member name <br />
            成员名
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Objects.VerifiableMemberContext.DeclaringType">
            <summary>
            Declaring type <br />
            声明类型
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Objects.VerifiableMemberContext.MemberType">
            <summary>
            Member type <br />
            成员类型
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Objects.VerifiableMemberContext.IsBasicType">
            <summary>
            Is basic type <br />
            是否为基本类型
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Objects.VerifiableMemberContext.MemberKind">
            <summary>
            Member kind <br />
            成员类型
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Objects.VerifiableMemberContext.Value">
            <summary>
            Gets value <br />
            获取值
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Objects.VerifiableMemberContext.GetParentInstance">
            <summary>
            Get parent instance <br />
            获取上一级实例
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Objects.VerifiableMemberContext.GetParentInstance``1">
            <summary>
            Get parent instance <br />
            获取上一级实例
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="P:CosmosStack.Validation.Objects.VerifiableMemberContext.IncludeAnnotations">
            <summary>
            Is include annotation <br />
            标记是否包含注解
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Objects.VerifiableMemberContext.Attributes">
            <summary>
            Get attributes <br />
            获取特性集合
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Objects.VerifiableMemberContext.GetAttributes``1">
            <summary>
            Get attributes <br />
            获取特性集合
            </summary>
            <typeparam name="TAttribute"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Objects.VerifiableMemberContext.GetParameterAnnotations">
            <summary>
            Get parameter annotations <br />
            获取参数注解
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Objects.VerifiableMemberContext.GetQuietVerifiableAnnotations(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Get quiet verifiable annotations <br />
            获取安静验证注解
            </summary>
            <param name="excludeFlagAnnotation"></param>
            <param name="excludeObjectContextVerifiableAnnotation"></param>
            <param name="excludeStrongVerifiableAnnotation"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Objects.VerifiableMemberContext.GetStrongVerifiableAnnotations(System.Boolean,System.Boolean)">
            <summary>
            Get strong verifiable annotations <br />
            获取强验证注解
            </summary>
            <param name="excludeFlagAnnotation"></param>
            <param name="excludeObjectContextVerifiableAnnotation"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Objects.VerifiableMemberContext.GetObjectContextVerifiableAnnotations(System.Boolean)">
            <summary>
            Get ObjectContext verifiable annotations <br />
            获取带上下文的可验证注解
            </summary>
            <param name="excludeFlagAnnotation"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Objects.VerifiableMemberContext.GetFlagAnnotations(System.Boolean)">
            <summary>
            Get flag annotations <br />
            获取带 Flag 的注解
            </summary>
            <param name="excludeVerifiableAnnotation"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Objects.VerifiableMemberContext.GetVerifiableAnnotations(System.Boolean)">
            <summary>
            Get verifiable annotations <br />
            获取可验证注解
            </summary>
            <param name="excludeFlagAnnotation"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Objects.VerifiableMemberContext.ConvertToObjectContext">
            <summary>
            Convert to ObjectContext <br />
            转换为可验证对象上下文 <see cref="T:CosmosStack.Validation.Objects.VerifiableObjectContext"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Objects.VerifiableMemberContext.Create``1(``0,CosmosStack.Validation.Objects.VerifiableMemberContract,CosmosStack.Validation.Objects.VerifiableObjectContext)">
            <summary>
            Create <br />
            创建
            </summary>
            <param name="value"></param>
            <param name="contract"></param>
            <param name="parentContext"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Objects.VerifiableMemberContextExtensions">
            <summary>
            Verifiable member context extensions <br />
            可验证成员上下文扩展
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Objects.VerifiableMemberContextExtensions.GetValue(CosmosStack.Validation.Objects.VerifiableMemberContext)">
            <summary>
            Get value <br />
            获取值
            </summary>
            <param name="context"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Validation.Objects.VerifiableMemberContextExtensions.GetValue``1(CosmosStack.Validation.Objects.VerifiableMemberContext)">
            <summary>
            Get value <br />
            获取值
            </summary>
            <param name="context"></param>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Validation.Objects.VerifiableMemberContextExtensions.RefreshAndGetValue(CosmosStack.Validation.Objects.VerifiableMemberContext)">
            <summary>
            Refresh and get value <br />
            刷新并获取值
            </summary>
            <param name="context"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Validation.Objects.VerifiableMemberContextExtensions.RefreshAndGetValue``1(CosmosStack.Validation.Objects.VerifiableMemberContext)">
            <summary>
            Refresh and get value <br />
            刷新并获取值
            </summary>
            <param name="context"></param>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="T:CosmosStack.Validation.Objects.VerifiableMemberContract">
            <summary>
            Verifiable member contract <br />
            可验证成员约定
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Objects.VerifiableMemberContract.MemberName">
            <inheritdoc />
        </member>
        <member name="P:CosmosStack.Validation.Objects.VerifiableMemberContract.DeclaringType">
            <inheritdoc />
        </member>
        <member name="P:CosmosStack.Validation.Objects.VerifiableMemberContract.MemberType">
            <inheritdoc />
        </member>
        <member name="P:CosmosStack.Validation.Objects.VerifiableMemberContract.IsBasicType">
            <inheritdoc />
        </member>
        <member name="P:CosmosStack.Validation.Objects.VerifiableMemberContract.MemberKind">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Objects.VerifiableMemberContract.GetValue(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Objects.VerifiableMemberContract.GetValue(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <inheritdoc />
        </member>
        <member name="P:CosmosStack.Validation.Objects.VerifiableMemberContract.IncludeAnnotations">
            <inheritdoc />
        </member>
        <member name="P:CosmosStack.Validation.Objects.VerifiableMemberContract.Attributes">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Objects.VerifiableMemberContract.GetAttributes``1">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Objects.VerifiableMemberContract.GetParameterAnnotations">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Objects.VerifiableMemberContract.GetQuietVerifiableAnnotations(System.Boolean,System.Boolean,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Objects.VerifiableMemberContract.GetStrongVerifiableAnnotations(System.Boolean,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Objects.VerifiableMemberContract.GetObjectContextVerifiableAnnotations(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Objects.VerifiableMemberContract.GetFlagAnnotations(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Objects.VerifiableMemberContract.GetVerifiableAnnotations(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="T:CosmosStack.Validation.Objects.VerifiableMemberKind">
            <summary>
            Verifiable member kind <br />
            可验证成员种类
            </summary>
        </member>
        <member name="F:CosmosStack.Validation.Objects.VerifiableMemberKind.Property">
            <summary>
            Property <br />
            属性
            </summary>
        </member>
        <member name="F:CosmosStack.Validation.Objects.VerifiableMemberKind.Field">
            <summary>
            Field <br />
            字段
            </summary>
        </member>
        <member name="F:CosmosStack.Validation.Objects.VerifiableMemberKind.Unknown">
            <summary>
            Unknown <br />
            为止
            </summary>
        </member>
        <member name="F:CosmosStack.Validation.Objects.VerifiableMemberKind.CustomContract">
            <summary>
            Custom contract <br />
            自定义约定
            </summary>
        </member>
        <member name="T:CosmosStack.Validation.Objects.VerifiableMemberKindExtensions">
            <summary>
            Verifiable member kind extensions <br />
            可验证成员种类扩展
            </summary>
        </member>
        <member name="T:CosmosStack.Validation.Objects.VerifiableObjectContext">
            <summary>
            Verifiable object context <br />
            可验证对象上下文
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Objects.VerifiableObjectContext.InstanceName">
            <summary>
            Instance name <br />
            实例名称
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Objects.VerifiableObjectContext.Type">
            <summary>
            Type <br />
            类型
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Objects.VerifiableObjectContext.ObjectKind">
            <summary>
            Verifiable object kind <br />
            可验证对象种类
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Objects.VerifiableObjectContext.IsBasicType">
            <summary>
            Is basic type <br />
            是否为基本类型
            </summary>
            <returns></returns>
        </member>
        <member name="P:CosmosStack.Validation.Objects.VerifiableObjectContext.Instance">
            <summary>
            Gets instance <br />
            获取实例
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Objects.VerifiableObjectContext.KeyValueCollection">
            <summary>
            Gets dictionary <br />
            将实例转换为字典，并获取字典
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Objects.VerifiableObjectContext.IsChildContext">
            <summary>
            Is child context <br />
            标记当前上下文是否存在上一级
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Objects.VerifiableObjectContext.ParentContext">
            <summary>
            Parent context <br />
            如果存在上一级上下文，返回之
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Objects.VerifiableObjectContext.GetValue(System.String)">
            <summary>
            Get value from the given instance by member name <br />
            根据给定的成员名称，从给定的实例中获取值
            </summary>
            <param name="memberName"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Objects.VerifiableObjectContext.GetValue(System.Int32)">
            <summary>
            Get value from the given instance by member index <br />
            根据给定的成员索引值，从给定的实例中获取值
            </summary>
            <param name="indexOfMember"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Objects.VerifiableObjectContext.GetValues">
            <summary>
            Get all values by <see cref="T:CosmosStack.Validation.Objects.VerifiableMemberContext"/> <br />
            以 <see cref="T:CosmosStack.Validation.Objects.VerifiableMemberContext"/> 集合的方式返回所有值
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Objects.VerifiableObjectContext.GetValueMap">
            <summary>
            Get all values by <see cref="T:CosmosStack.Validation.Objects.VerifiableMemberContext"/> with key <br />
            以 <see cref="T:CosmosStack.Validation.Objects.VerifiableMemberContext"/> 集合的方式返回所有值，并将成员名作为键
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Objects.VerifiableObjectContext.GetValuesWithAttribute">
            <summary>
            Get values with attribute <br />
            返回所有包含注解的值，并以 <see cref="T:CosmosStack.Validation.Objects.VerifiableMemberContext"/> 集合的方式返回
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Objects.VerifiableObjectContext.GetValuesWithAttribute``1">
            <summary>
            Get values with attribute <br />
            返回所有包含注解的值，并以 <see cref="T:CosmosStack.Validation.Objects.VerifiableMemberContext"/> 集合的方式返回
            </summary>
            <typeparam name="TAttr"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Objects.VerifiableObjectContext.GetValuesWithAttribute``2">
            <summary>
            Get values with attribute <br />
            返回所有包含注解的值，并以 <see cref="T:CosmosStack.Validation.Objects.VerifiableMemberContext"/> 集合的方式返回
            </summary>
            <typeparam name="TAttr1"></typeparam>
            <typeparam name="TAttr2"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Objects.VerifiableObjectContext.GetValuesWithAttribute``3">
            <summary>
            Get values with attribute <br />
            返回所有包含注解的值，并以 <see cref="T:CosmosStack.Validation.Objects.VerifiableMemberContext"/> 集合的方式返回
            </summary>
            <typeparam name="TAttr1"></typeparam>
            <typeparam name="TAttr2"></typeparam>
            <typeparam name="TAttr3"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Objects.VerifiableObjectContext.GetValuesWithAttribute``4">
            <summary>
            Get values with attribute <br />
            返回所有包含注解的值，并以 <see cref="T:CosmosStack.Validation.Objects.VerifiableMemberContext"/> 集合的方式返回
            </summary>
            <typeparam name="TAttr1"></typeparam>
            <typeparam name="TAttr2"></typeparam>
            <typeparam name="TAttr3"></typeparam>
            <typeparam name="TAttr4"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Objects.VerifiableObjectContext.GetValuesWithAttribute``5">
            <summary>
            Get values with attribute <br />
            返回所有包含注解的值，并以 <see cref="T:CosmosStack.Validation.Objects.VerifiableMemberContext"/> 集合的方式返回
            </summary>
            <typeparam name="TAttr1"></typeparam>
            <typeparam name="TAttr2"></typeparam>
            <typeparam name="TAttr3"></typeparam>
            <typeparam name="TAttr4"></typeparam>
            <typeparam name="TAttr5"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Objects.VerifiableObjectContext.GetValuesWithAttribute``6">
            <summary>
            Get values with attribute <br />
            返回所有包含注解的值，并以 <see cref="T:CosmosStack.Validation.Objects.VerifiableMemberContext"/> 集合的方式返回
            </summary>
            <typeparam name="TAttr1"></typeparam>
            <typeparam name="TAttr2"></typeparam>
            <typeparam name="TAttr3"></typeparam>
            <typeparam name="TAttr4"></typeparam>
            <typeparam name="TAttr5"></typeparam>
            <typeparam name="TAttr6"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Objects.VerifiableObjectContext.GetValuesWithAttribute``7">
            <summary>
            Get values with attribute <br />
            返回所有包含注解的值，并以 <see cref="T:CosmosStack.Validation.Objects.VerifiableMemberContext"/> 集合的方式返回
            </summary>
            <typeparam name="TAttr1"></typeparam>
            <typeparam name="TAttr2"></typeparam>
            <typeparam name="TAttr3"></typeparam>
            <typeparam name="TAttr4"></typeparam>
            <typeparam name="TAttr5"></typeparam>
            <typeparam name="TAttr6"></typeparam>
            <typeparam name="TAttr7"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Objects.VerifiableObjectContext.GetMember(System.String)">
            <summary>
            Get member by member name <br />
            根据给定的成员名，返回可验证成员约定
            </summary>
            <param name="memberName"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Objects.VerifiableObjectContext.GetMember(System.Int32)">
            <summary>
            Get member by member index <br />
            根据给定的成员索引，返回可验证成员约定
            </summary>
            <param name="indexOfMember"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Objects.VerifiableObjectContext.GetMembers">
            <summary>
            Get all members <br />
            返回所有的可验证成员约定
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Objects.VerifiableObjectContext.GetMemberMap">
            <summary>
            Get all members with key <br />
            返回所有的可验证成员约定，并将成员名作为键
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Objects.VerifiableObjectContext.ContainsMember(System.String)">
            <summary>
            Is contain member <br />
            检查是否包含给定名称的成员
            </summary>
            <param name="memberName"></param>
            <returns></returns>
        </member>
        <member name="P:CosmosStack.Validation.Objects.VerifiableObjectContext.IncludeAnnotations">
            <summary>
            Is include annotation <br />
            标记是否包含注解
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Objects.VerifiableObjectContext.Attributes">
            <summary>
            Get attributes <br />
            获取特性集合
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Objects.VerifiableObjectContext.GetAttributes``1">
            <summary>
            Get attributes <br />
            获取特性集合
            </summary>
            <typeparam name="TAttribute"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Objects.VerifiableObjectContext.GetParameterAnnotations">
            <summary>
            Get parameter annotations <br />
            获取参数注解
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Objects.VerifiableObjectContext.GetQuietVerifiableAnnotations">
            <summary>
            Get quiet verifiable annotations <br />
            获取安静验证注解
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Objects.VerifiableObjectContext.GetStrongVerifiableAnnotations">
            <summary>
            Get strong verifiable annotations <br />
            获取强验证注解
            </summary>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Objects.VerifiableObjectContextExtensions">
            <summary>
            Verifiable Object Context extensions <br />
            可验证对象上下文扩展
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Objects.VerifiableObjectContextExtensions.GetInstance(CosmosStack.Validation.Objects.VerifiableObjectContext)">
            <summary>
            Get instance <br />
            获取实例
            </summary>
            <param name="context"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Validation.Objects.VerifiableObjectContextExtensions.GetInstance``1(CosmosStack.Validation.Objects.VerifiableObjectContext)">
            <summary>
            Get instance <br />
            获取实例
            </summary>
            <param name="context"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="T:CosmosStack.Validation.Objects.VerifiableObjectContract">
            <summary>
            Verifiable Object Contract <br />
            可验证对象约定
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Objects.VerifiableObjectContract.Type">
            <inheritdoc />
        </member>
        <member name="P:CosmosStack.Validation.Objects.VerifiableObjectContract.ObjectKind">
            <inheritdoc />
        </member>
        <member name="P:CosmosStack.Validation.Objects.VerifiableObjectContract.IsBasicType">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Objects.VerifiableObjectContract.WithInstance(System.Object)">
            <summary>
            With instance <br />
            使用实例
            </summary>
            <param name="instance"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Validation.Objects.VerifiableObjectContract.WithInstance(System.Object,System.String)">
            <summary>
            With instance <br />
            使用实例
            </summary>
            <param name="instance"></param>
            <param name="instanceName"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Validation.Objects.VerifiableObjectContract.WithDictionary(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            With dictionary <br />
            使用字典
            </summary>
            <param name="keyValueCollection"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Validation.Objects.VerifiableObjectContract.WithDictionary(System.Collections.Generic.IDictionary{System.String,System.Object},System.String)">
            <summary>
            With dictionary <br />
            使用字典
            </summary>
            <param name="keyValueCollection"></param>
            <param name="instanceName"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Validation.Objects.VerifiableObjectContract.GetValue(System.Object,System.String)">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Objects.VerifiableObjectContract.GetValue(System.Object,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Objects.VerifiableObjectContract.GetValue(System.Collections.Generic.IDictionary{System.String,System.Object},System.String)">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Objects.VerifiableObjectContract.GetValue(System.Collections.Generic.IDictionary{System.String,System.Object},System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Objects.VerifiableObjectContract.GetMemberContract(System.String)">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Objects.VerifiableObjectContract.GetMemberContract(System.Reflection.PropertyInfo)">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Objects.VerifiableObjectContract.GetMemberContract(System.Reflection.FieldInfo)">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Objects.VerifiableObjectContract.GetMemberContract(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Objects.VerifiableObjectContract.GetMemberContracts">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Objects.VerifiableObjectContract.ContainsMember(System.String)">
            <inheritdoc />
        </member>
        <member name="P:CosmosStack.Validation.Objects.VerifiableObjectContract.IncludeAnnotations">
            <inheritdoc />
        </member>
        <member name="P:CosmosStack.Validation.Objects.VerifiableObjectContract.Attributes">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Objects.VerifiableObjectContract.GetAttributes``1">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Objects.VerifiableObjectContract.GetParameterAnnotations">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Objects.VerifiableObjectContract.GetQuietVerifiableAnnotations">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Objects.VerifiableObjectContract.GetStrongVerifiableAnnotations">
            <inheritdoc />
        </member>
        <member name="T:CosmosStack.Validation.Objects.VerifiableObjectContractManager">
            <summary>
            Verifiable Object Contract Manager <br />
            可验证对象约定管理器
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Objects.VerifiableObjectContractManager.Resolve(System.Type)">
            <summary>
            Resolve <br />
            解析对象约定
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Objects.VerifiableObjectContractManager.Resolve``1">
            <summary>
            Resolve <br />
            解析对象约定
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Objects.VerifiableObjectKind">
            <summary>
            Verifiable Object Kind <br />
            可验证对象种类
            </summary>
        </member>
        <member name="F:CosmosStack.Validation.Objects.VerifiableObjectKind.BasicType">
            <summary>
            Basic Type <br />
            基本类型
            </summary>
        </member>
        <member name="F:CosmosStack.Validation.Objects.VerifiableObjectKind.StructureType">
            <summary>
            Structure Type <br />
            结构化类型
            </summary>
        </member>
        <member name="T:CosmosStack.Validation.Projects.AbstractProjectManager">
            <summary>
            An abstract project manager <br />
            类型 Project 抽象管理器
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Projects.AbstractProjectManager.Register(CosmosStack.Validation.Projects.IProject)">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Projects.AbstractProjectManager.Resolve(System.Type)">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Projects.AbstractProjectManager.Resolve(System.Type,System.String)">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Projects.AbstractProjectManager.TryResolve(System.Type,CosmosStack.Validation.Projects.IProject@)">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Projects.AbstractProjectManager.TryResolve(System.Type,System.String,CosmosStack.Validation.Projects.IProject@)">
            <inheritdoc />
        </member>
        <member name="T:CosmosStack.Validation.Projects.IProject">
            <summary>
            Project interface <br />
            项目接口
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Projects.IProject.Name">
            <summary>
            Name <br />
            名称
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Projects.IProject.Type">
            <summary>
            Type <br />
            类型
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Projects.IProject.Class">
            <summary>
            Project class <br />
            项目类型
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Projects.IProject.Verify(CosmosStack.Validation.Objects.VerifiableObjectContext)">
            <summary>
            Verify <br />
            验证入口
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Projects.IProject.VerifyOne(CosmosStack.Validation.Objects.VerifiableMemberContext)">
            <summary>
            Verify one <br />
            成员验证入口
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Projects.IProject.VerifyMany(System.Collections.Generic.IDictionary{System.String,CosmosStack.Validation.Objects.VerifiableMemberContext})">
            <summary>
            Verify many <br />
            字典验证入口
            </summary>
            <param name="keyValueCollections"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Projects.IProject.ExposeRules">
            <summary>
            Expose rules <br />
            导出规则
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Projects.IProject.ExposeMemberRules(System.String)">
            <summary>
            Expose member rules <br />
            导出成员规则
            </summary>
            <param name="memberName"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Projects.IValidationProjectManager">
            <summary>
            Validation Project Manager Interface <br />
            验证类型 project 管理器接口
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Projects.IValidationProjectManager.Register(CosmosStack.Validation.Projects.IProject)">
            <summary>
            Register project <br />
            注册项目
            </summary>
            <param name="project"></param>
        </member>
        <member name="M:CosmosStack.Validation.Projects.IValidationProjectManager.Resolve(System.Type)">
            <summary>
            Revolve <br />
            解析项目
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Projects.IValidationProjectManager.Resolve(System.Type,System.String)">
            <summary>
            Revolve <br />
            解析项目
            </summary>
            <param name="type"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Projects.IValidationProjectManager.TryResolve(System.Type,CosmosStack.Validation.Projects.IProject@)">
            <summary>
            Try to revolve <br />
            尝试解析项目
            </summary>
            <param name="type"></param>
            <param name="project"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Projects.IValidationProjectManager.TryResolve(System.Type,System.String,CosmosStack.Validation.Projects.IProject@)">
            <summary>
            Try to revolve <br />
            尝试解析项目
            </summary>
            <param name="type"></param>
            <param name="name"></param>
            <param name="project"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Projects.NamedTypeProject">
            <summary>
            具名 Project
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Projects.NamedTypeProject.Name">
            <inheritdoc />
        </member>
        <member name="P:CosmosStack.Validation.Projects.NamedTypeProject.Type">
            <inheritdoc />
        </member>
        <member name="P:CosmosStack.Validation.Projects.NamedTypeProject.Class">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Projects.NamedTypeProject.ExposeRules">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Projects.NamedTypeProject.ExposeMemberRules(System.String)">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Projects.NamedTypeProject.Verify(CosmosStack.Validation.Objects.VerifiableObjectContext)">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Projects.NamedTypeProject.VerifyOne(CosmosStack.Validation.Objects.VerifiableMemberContext)">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Projects.NamedTypeProject.VerifyMany(System.Collections.Generic.IDictionary{System.String,CosmosStack.Validation.Objects.VerifiableMemberContext})">
            <inheritdoc />
        </member>
        <member name="T:CosmosStack.Validation.Projects.ProjectClass">
            <summary>
            Project class <br />
            项目类型
            </summary>
        </member>
        <member name="F:CosmosStack.Validation.Projects.ProjectClass.Typed">
            <summary>
            Typed
            </summary>
        </member>
        <member name="F:CosmosStack.Validation.Projects.ProjectClass.Named">
            <summary>
            Named
            </summary>
        </member>
        <member name="T:CosmosStack.Validation.Projects.TypedProject">
            <summary>
            类型项目
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Projects.TypedProject.Name">
            <inheritdoc />
        </member>
        <member name="P:CosmosStack.Validation.Projects.TypedProject.Type">
            <inheritdoc />
        </member>
        <member name="P:CosmosStack.Validation.Projects.TypedProject.Class">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Projects.TypedProject.ExposeRules">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Projects.TypedProject.ExposeMemberRules(System.String)">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Projects.TypedProject.Verify(CosmosStack.Validation.Objects.VerifiableObjectContext)">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Projects.TypedProject.VerifyOne(CosmosStack.Validation.Objects.VerifiableMemberContext)">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Projects.TypedProject.VerifyMany(System.Collections.Generic.IDictionary{System.String,CosmosStack.Validation.Objects.VerifiableMemberContext})">
            <inheritdoc />
        </member>
        <member name="T:CosmosStack.Validation.RangeOptions">
            <summary>
            Range closure option. <br />
            开闭区间选项
            </summary>
        </member>
        <member name="F:CosmosStack.Validation.RangeOptions.OpenInterval">
            <summary>
            Open interval <br />
            开区间
            </summary>
        </member>
        <member name="F:CosmosStack.Validation.RangeOptions.CloseInterval">
            <summary>
            Close interval <br />
            闭区间
            </summary>
        </member>
        <member name="T:CosmosStack.Validation.Registrars.Interfaces.IMayBuild">
            <summary>
            May build interface <br />
            标记注册器可被构建
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.Interfaces.IMayBuild.Build">
            <summary>
            Build <br />
            构建
            </summary>
        </member>
        <member name="T:CosmosStack.Validation.Registrars.Interfaces.IMayExposeRulePackage">
            <summary>
            May expose rule package interface <br />
            标记注册器可被导出规则包
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.Interfaces.IMayExposeRulePackage.ExposeRulePackage``1(System.String)">
            <summary>
            Expose rule package <br />
            导出规则包
            </summary>
            <param name="projectName"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.Interfaces.IMayExposeRulePackage.ExposeRulePackage(System.Type,System.String)">
            <summary>
            Expose rule package <br />
            导出规则包
            </summary>
            <param name="declaringType"></param>
            <param name="projectName"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Registrars.Interfaces.IMayExposeUnregisteredRulePackage">
            <summary>
            May expose unregistered rule package interface <br />
            标记注册器可被导出未注册的规则包
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.Interfaces.IMayExposeUnregisteredRulePackage.ExposeUnregisteredRulePackage``1(System.String)">
            <summary>
            Expose unregistered rule package <br />
            导出未注册的规则包
            </summary>
            <param name="projectName"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.Interfaces.IMayExposeUnregisteredRulePackage.ExposeUnregisteredRulePackage(System.Type,System.String)">
            <summary>
            Expose unregistered rule package <br />
            导出未注册的规则包
            </summary>
            <param name="declaringType"></param>
            <param name="projectName"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Registrars.Interfaces.IMayExposeRulePackageForType">
            <summary>
            May expose rule package for type interface <br />
            标记注册器可针对类型导出规则包
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.Interfaces.IMayExposeRulePackageForType.ExposeRulePackage">
            <summary>
            Expose rule package <br />
            导出规则包
            </summary>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Registrars.Interfaces.IMayExposeUnregisteredRulePackageForType">
            <summary>
            May expose unregistered rule package for type interface <br />
            标记注册器可针对类型导出未注册的规则包
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.Interfaces.IMayExposeUnregisteredRulePackageForType.ExposeUnregisteredRulePackage">
            <summary>
            Expose unregistered rule package <br />
            导出未注册的规则包
            </summary>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Registrars.Interfaces.IMayRegisterForCustomValidator">
            <summary>
            May register for custom validator interface <br />
            标记可注册自定义验证器
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.Interfaces.IMayRegisterForCustomValidator.ForCustomValidator``1">
            <summary>
            Register for custom validator <br />
            注册指定类型的自定义验证器
            </summary>
            <typeparam name="TValidator"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.Interfaces.IMayRegisterForCustomValidator.ForCustomValidator``2">
            <summary>
            Register for custom validator <br />
            注册指定类型的自定义验证器
            </summary>
            <typeparam name="TValidator"></typeparam>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.Interfaces.IMayRegisterForCustomValidator.ForCustomValidator(CosmosStack.Validation.Validators.CustomValidator)">
            <summary>
            Register for custom validator <br />
            注册指定类型的自定义验证器
            </summary>
            <param name="validator"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.Interfaces.IMayRegisterForCustomValidator.ForCustomValidator``1(CosmosStack.Validation.Validators.CustomValidator{``0})">
            <summary>
            Register for custom validator <br />
            注册指定类型的自定义验证器
            </summary>
            <param name="validator"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Registrars.Interfaces.IMayContinueRegisterForCustomValidator">
            <summary>
            May register for custom validator continue interface <br />
            标记可继续注册自定义验证器
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.Interfaces.IMayContinueRegisterForCustomValidator.AndForCustomValidator``1">
            <summary>
            Register for custom validator <br />
            注册指定类型的自定义验证器
            </summary>
            <typeparam name="TValidator"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.Interfaces.IMayContinueRegisterForCustomValidator.AndForCustomValidator``2">
            <summary>
            Register for custom validator <br />
            注册指定类型的自定义验证器
            </summary>
            <typeparam name="TValidator"></typeparam>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.Interfaces.IMayContinueRegisterForCustomValidator.AndForCustomValidator(CosmosStack.Validation.Validators.CustomValidator)">
            <summary>
            Register for custom validator <br />
            注册指定类型的自定义验证器
            </summary>
            <param name="validator"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.Interfaces.IMayContinueRegisterForCustomValidator.AndForCustomValidator``1(CosmosStack.Validation.Validators.CustomValidator{``0})">
            <summary>
            Register for custom validator <br />
            注册指定类型的自定义验证器
            </summary>
            <param name="validator"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Registrars.Interfaces.IMayRegisterForMember">
            <summary>
            May register for member interface <br />
            标记可为成员注册
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.Interfaces.IMayRegisterForMember.ForMember(System.String,CosmosStack.Validation.VerifyRuleMode)">
            <summary>
            Register for member <br />
            为成员注册
            </summary>
            <param name="memberName"></param>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.Interfaces.IMayRegisterForMember.ForMember(System.Reflection.PropertyInfo,CosmosStack.Validation.VerifyRuleMode)">
            <summary>
            Register for member <br />
            为成员注册
            </summary>
            <param name="propertyInfo"></param>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.Interfaces.IMayRegisterForMember.ForMember(System.Reflection.FieldInfo,CosmosStack.Validation.VerifyRuleMode)">
            <summary>
            Register for member <br />
            为成员注册
            </summary>
            <param name="fieldInfo"></param>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Registrars.Interfaces.IMayRegisterForMember`1">
            <summary>
            May register for member interface <br />
            标记可为成员注册
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.Interfaces.IMayRegisterForMember`1.ForMember(System.String,CosmosStack.Validation.VerifyRuleMode)">
            <summary>
            Register for member <br />
            为成员注册
            </summary>
            <param name="memberName"></param>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.Interfaces.IMayRegisterForMember`1.ForMember(System.Reflection.PropertyInfo,CosmosStack.Validation.VerifyRuleMode)">
            <summary>
            Register for member <br />
            为成员注册
            </summary>
            <param name="propertyInfo"></param>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.Interfaces.IMayRegisterForMember`1.ForMember(System.Reflection.FieldInfo,CosmosStack.Validation.VerifyRuleMode)">
            <summary>
            Register for member <br />
            为成员注册
            </summary>
            <param name="fieldInfo"></param>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.Interfaces.IMayRegisterForMember`1.ForMember``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},CosmosStack.Validation.VerifyRuleMode)">
            <summary>
            Register for member <br />
            为成员注册
            </summary>
            <param name="expression"></param>
            <param name="mode"></param>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Registrars.Interfaces.IMayContinueRegisterForMember">
            <summary>
            May register for member continue interface <br />
            标记可继续为成员注册
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.Interfaces.IMayContinueRegisterForMember.AndForMember(System.String,CosmosStack.Validation.VerifyRuleMode)">
            <summary>
            Register for member <br />
            为成员注册
            </summary>
            <param name="memberName"></param>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.Interfaces.IMayContinueRegisterForMember.AndForMember(System.Reflection.PropertyInfo,CosmosStack.Validation.VerifyRuleMode)">
            <summary>
            Register for member <br />
            为成员注册
            </summary>
            <param name="propertyInfo"></param>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.Interfaces.IMayContinueRegisterForMember.AndForMember(System.Reflection.FieldInfo,CosmosStack.Validation.VerifyRuleMode)">
            <summary>
            Register for member <br />
            为成员注册
            </summary>
            <param name="fieldInfo"></param>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Registrars.Interfaces.IMayContinueRegisterForMember`1">
            <summary>
            May register for member continue interface <br />
            标记可继续为成员注册
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.Interfaces.IMayContinueRegisterForMember`1.AndForMember(System.String,CosmosStack.Validation.VerifyRuleMode)">
            <summary>
            Register for member <br />
            为成员注册
            </summary>
            <param name="memberName"></param>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.Interfaces.IMayContinueRegisterForMember`1.AndForMember(System.Reflection.PropertyInfo,CosmosStack.Validation.VerifyRuleMode)">
            <summary>
            Register for member <br />
            为成员注册
            </summary>
            <param name="propertyInfo"></param>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.Interfaces.IMayContinueRegisterForMember`1.AndForMember(System.Reflection.FieldInfo,CosmosStack.Validation.VerifyRuleMode)">
            <summary>
            Register for member <br />
            为成员注册
            </summary>
            <param name="fieldInfo"></param>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.Interfaces.IMayContinueRegisterForMember`1.AndForMember``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},CosmosStack.Validation.VerifyRuleMode)">
            <summary>
            Register for member <br />
            为成员注册
            </summary>
            <param name="expression"></param>
            <param name="mode"></param>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Registrars.Interfaces.IMayRegisterForStrategy">
            <summary>
            May register for strategy interface <br />
            可为策略注册
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.Interfaces.IMayRegisterForStrategy.ForStrategy``1(CosmosStack.Validation.StrategyMode)">
            <summary>
            Register for strategy <br />
            注册策略
            </summary>
            <param name="mode"></param>
            <typeparam name="TStrategy"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.Interfaces.IMayRegisterForStrategy.ForStrategy``2(CosmosStack.Validation.StrategyMode)">
            <summary>
            Register for strategy <br />
            注册策略
            </summary>
            <param name="mode"></param>
            <typeparam name="TStrategy"></typeparam>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.Interfaces.IMayRegisterForStrategy.ForStrategy(CosmosStack.Validation.Strategies.IValidationStrategy,CosmosStack.Validation.StrategyMode)">
            <summary>
            Register for strategy <br />
            注册策略
            </summary>
            <param name="strategy"></param>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.Interfaces.IMayRegisterForStrategy.ForStrategy``1(CosmosStack.Validation.Strategies.IValidationStrategy{``0},CosmosStack.Validation.StrategyMode)">
            <summary>
            Register for strategy <br />
            注册策略
            </summary>
            <param name="strategy"></param>
            <param name="mode"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.Interfaces.IMayRegisterForStrategy.ForStrategy``1(System.String,CosmosStack.Validation.StrategyMode)">
            <summary>
            Register for strategy <br />
            注册策略
            </summary>
            <param name="name"></param>
            <param name="mode"></param>
            <typeparam name="TStrategy"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.Interfaces.IMayRegisterForStrategy.ForStrategy``2(System.String,CosmosStack.Validation.StrategyMode)">
            <summary>
            Register for strategy <br />
            注册策略
            </summary>
            <param name="name"></param>
            <param name="mode"></param>
            <typeparam name="TStrategy"></typeparam>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.Interfaces.IMayRegisterForStrategy.ForStrategy(CosmosStack.Validation.Strategies.IValidationStrategy,System.String,CosmosStack.Validation.StrategyMode)">
            <summary>
            Register for strategy <br />
            注册策略
            </summary>
            <param name="strategy"></param>
            <param name="name"></param>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.Interfaces.IMayRegisterForStrategy.ForStrategy``1(CosmosStack.Validation.Strategies.IValidationStrategy{``0},System.String,CosmosStack.Validation.StrategyMode)">
            <summary>
            Register for strategy <br />
            注册策略
            </summary>
            <param name="strategy"></param>
            <param name="name"></param>
            <param name="mode"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Registrars.Interfaces.IMayContinueRegisterForStrategy">
            <summary>
            May register for strategy continue interface <br />
            可继续为策略注册
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.Interfaces.IMayContinueRegisterForStrategy.AndForStrategy``1(CosmosStack.Validation.StrategyMode)">
            <summary>
            Register for strategy <br />
            注册策略
            </summary>
            <param name="mode"></param>
            <typeparam name="TStrategy"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.Interfaces.IMayContinueRegisterForStrategy.AndForStrategy``2(CosmosStack.Validation.StrategyMode)">
            <summary>
            Register for strategy <br />
            注册策略
            </summary>
            <param name="mode"></param>
            <typeparam name="TStrategy"></typeparam>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.Interfaces.IMayContinueRegisterForStrategy.AndForStrategy(CosmosStack.Validation.Strategies.IValidationStrategy,CosmosStack.Validation.StrategyMode)">
            <summary>
            Register for strategy <br />
            注册策略
            </summary>
            <param name="strategy"></param>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.Interfaces.IMayContinueRegisterForStrategy.AndForStrategy``1(CosmosStack.Validation.Strategies.IValidationStrategy{``0},CosmosStack.Validation.StrategyMode)">
            <summary>
            Register for strategy <br />
            注册策略
            </summary>
            <param name="strategy"></param>
            <param name="mode"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.Interfaces.IMayContinueRegisterForStrategy.AndForStrategy``1(System.String,CosmosStack.Validation.StrategyMode)">
            <summary>
            Register for strategy <br />
            注册策略
            </summary>
            <param name="name"></param>
            <param name="mode"></param>
            <typeparam name="TStrategy"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.Interfaces.IMayContinueRegisterForStrategy.AndForStrategy``2(System.String,CosmosStack.Validation.StrategyMode)">
            <summary>
            Register for strategy <br />
            注册策略
            </summary>
            <param name="name"></param>
            <param name="mode"></param>
            <typeparam name="TStrategy"></typeparam>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.Interfaces.IMayContinueRegisterForStrategy.AndForStrategy(CosmosStack.Validation.Strategies.IValidationStrategy,System.String,CosmosStack.Validation.StrategyMode)">
            <summary>
            Register for strategy <br />
            注册策略
            </summary>
            <param name="strategy"></param>
            <param name="name"></param>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.Interfaces.IMayContinueRegisterForStrategy.AndForStrategy``1(CosmosStack.Validation.Strategies.IValidationStrategy{``0},System.String,CosmosStack.Validation.StrategyMode)">
            <summary>
            Register for strategy <br />
            注册策略
            </summary>
            <param name="strategy"></param>
            <param name="name"></param>
            <param name="mode"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Registrars.Interfaces.IMayRegisterForType">
            <summary>
            May register for type interface <br />
            标记可为类型注册
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.Interfaces.IMayRegisterForType.ForType(System.Type)">
            <summary>
            Register for type <br />
            为类型注册
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.Interfaces.IMayRegisterForType.ForType(System.Type,System.String)">
            <summary>
            Register for type <br />
            为类型注册
            </summary>
            <param name="type"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.Interfaces.IMayRegisterForType.ForType``1">
            <summary>
            Register for type <br />
            为类型注册
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.Interfaces.IMayRegisterForType.ForType``1(System.String)">
            <summary>
            Register for type <br />
            为类型注册
            </summary>
            <param name="name"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Registrars.Interfaces.IMayContinueRegisterForType">
            <summary>
            May register for type continue interface <br />
            标记可继续为类型注册
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.Interfaces.IMayContinueRegisterForType.AndForType(System.Type)">
            <summary>
            Register for type <br />
            为类型注册
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.Interfaces.IMayContinueRegisterForType.AndForType(System.Type,System.String)">
            <summary>
            Register for type <br />
            为类型注册
            </summary>
            <param name="type"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.Interfaces.IMayContinueRegisterForType.AndForType``1">
            <summary>
            Register for type <br />
            为类型注册
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.Interfaces.IMayContinueRegisterForType.AndForType``1(System.String)">
            <summary>
            Register for type <br />
            为类型注册
            </summary>
            <param name="name"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Registrars.Interfaces.IMayRegisterRulePackage">
            <summary>
            May register rule package interface <br />
            标记可为规则包注册
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.Interfaces.IMayRegisterRulePackage.ForRulePackage(CosmosStack.Validation.VerifyRulePackage,CosmosStack.Validation.VerifyRuleMode)">
            <summary>
            Register for rule package <br />
            注册规则包
            </summary>
            <param name="package"></param>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.Interfaces.IMayRegisterRulePackage.ForRulePackage(CosmosStack.Validation.VerifyRulePackage,System.String,CosmosStack.Validation.VerifyRuleMode)">
            <summary>
            Register for rule package <br />
            注册规则包
            </summary>
            <param name="package"></param>
            <param name="name"></param>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Registrars.Interfaces.IMayTakeEffect">
            <summary>
            May take effect interface <br />
            标记可生效
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.Interfaces.IMayTakeEffect.TakeEffect">
            <summary>
            Take effect <br />
            生效
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.Interfaces.IMayTakeEffect.TakeEffectAndBack">
            <summary>
            Take effect and back <br />
            生效并返回
            </summary>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Registrars.Interfaces.IMayTempBuild">
            <summary>
            May build interface, but will not update to the global configuration. <br />
            标记可被构建，但不会更新到全局配置中。
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.Interfaces.IMayTempBuild.TempBuild">
            <summary>
            Build <br />
            构建
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.Interfaces.IMayTempBuild.TempBuild(CosmosStack.Validation.ValidationOptions)">
            <summary>
            Build <br />
            构建
            </summary>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.Interfaces.IMayTempBuild.TempBuild(System.Action{CosmosStack.Validation.ValidationOptions})">
            <summary>
            Build <br />
            构建
            </summary>
            <param name="optionsAct"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.Interfaces.IMayTempBuild.TempBuild(CosmosStack.Validation.Objects.IVerifiableObjectResolver)">
            <summary>
            Build <br />
            构建
            </summary>
            <param name="objectResolver"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.Interfaces.IMayTempBuild.TempBuild(CosmosStack.Validation.Objects.IVerifiableObjectResolver,CosmosStack.Validation.ValidationOptions)">
            <summary>
            Build <br />
            构建
            </summary>
            <param name="objectResolver"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Registrars.Interfaces.IMayUseActivationConditions">
            <summary>
            May use activation conditions interface <br />
            标记可使用条件
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.Interfaces.IMayUseActivationConditions.When(System.Func{System.Object,System.Boolean})">
            <summary>
            When <br />
            当
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.Interfaces.IMayUseActivationConditions.When(System.Func{System.Object,System.Object,System.Boolean})">
            <summary>
            When <br />
            当
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.Interfaces.IMayUseActivationConditions.Unless(System.Func{System.Object,System.Boolean})">
            <summary>
            Unless <br />
            除非
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.Interfaces.IMayUseActivationConditions.Unless(System.Func{System.Object,System.Object,System.Boolean})">
            <summary>
            Unless <br />
            除非
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Registrars.Interfaces.IMayUseActivationConditions`1">
            <summary>
            May use activation conditions interface <br />
            标记可使用条件
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.Interfaces.IMayUseActivationConditions`1.When(System.Func{System.Object,System.Boolean})">
            <summary>
            When <br />
            当
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.Interfaces.IMayUseActivationConditions`1.When(System.Func{`0,System.Object,System.Boolean})">
            <summary>
            When <br />
            当
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.Interfaces.IMayUseActivationConditions`1.Unless(System.Func{System.Object,System.Boolean})">
            <summary>
            Unless <br />
            除非
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.Interfaces.IMayUseActivationConditions`1.Unless(System.Func{`0,System.Object,System.Boolean})">
            <summary>
            Unless <br />
            除非
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Registrars.Interfaces.IMayUseActivationConditions`2">
            <summary>
            May use activation conditions interface <br />
            标记可使用条件
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.Interfaces.IMayUseActivationConditions`2.When(System.Func{`1,System.Boolean})">
            <summary>
            When <br />
            当
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.Interfaces.IMayUseActivationConditions`2.When(System.Func{`0,`1,System.Boolean})">
            <summary>
            When <br />
            当
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.Interfaces.IMayUseActivationConditions`2.Unless(System.Func{`1,System.Boolean})">
            <summary>
            Unless <br />
            除非
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.Interfaces.IMayUseActivationConditions`2.Unless(System.Func{`0,`1,System.Boolean})">
            <summary>
            Unless <br />
            除非
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Registrars.Interfaces.IMayUseMemberRulePackage">
            <summary>
            May use member rule package interface <br />
            标记可用于成员规则包
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.Interfaces.IMayUseMemberRulePackage.WithMemberRulePackage(CosmosStack.Validation.VerifyMemberRulePackage,CosmosStack.Validation.VerifyRuleMode)">
            <summary>
            With member rule package <br />
            使用成员规则包
            </summary>
            <param name="package"></param>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Registrars.Interfaces.IMayUseMemberRulePackage`1">
            <summary>
            May use member rule package interface <br />
            标记可用于成员规则包
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.Interfaces.IMayUseMemberRulePackage`1.WithMemberRulePackage(CosmosStack.Validation.VerifyMemberRulePackage,CosmosStack.Validation.VerifyRuleMode)">
            <summary>
            With member rule package <br />
            使用成员规则包
            </summary>
            <param name="package"></param>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Registrars.Interfaces.IMayUseMemberRulePackage`2">
            <summary>
            May use member rule package interface <br />
            标记可用于成员规则包
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.Interfaces.IMayUseMemberRulePackage`2.WithMemberRulePackage(CosmosStack.Validation.VerifyMemberRulePackage,CosmosStack.Validation.VerifyRuleMode)">
            <summary>
            With member rule package <br />
            使用成员规则包
            </summary>
            <param name="package"></param>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Registrars.Interfaces.IMayUseRuleConditions">
            <summary>
            May use rule conditions interface <br />
            标记可使用条件
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.Interfaces.IMayUseRuleConditions.And">
            <summary>
            And <br />
            与
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.Interfaces.IMayUseRuleConditions.Or">
            <summary>
            Or <br />
            或
            </summary>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Registrars.Interfaces.IMayUseRuleConditions`1">
            <summary>
            May use rule conditions interface <br />
            标记可使用条件
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.Interfaces.IMayUseRuleConditions`1.And">
            <summary>
            And <br />
            与
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.Interfaces.IMayUseRuleConditions`1.Or">
            <summary>
            Or <br />
            或
            </summary>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Registrars.Interfaces.IMayUseRuleConditions`2">
            <summary>
            May use rule conditions interface <br />
            标记可使用条件
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.Interfaces.IMayUseRuleConditions`2.And">
            <summary>
            And <br />
            与
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.Interfaces.IMayUseRuleConditions`2.Or">
            <summary>
            Or <br />
            或
            </summary>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Registrars.Interfaces.IMayUseRulePackageForType">
            <summary>
            May use rule package for type interface <br />
            标记可对类使用规则包
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.Interfaces.IMayUseRulePackageForType.WithRulePackage(CosmosStack.Validation.VerifyRulePackage,CosmosStack.Validation.VerifyRuleMode)">
            <summary>
            With rule package <br />
            使用规则包
            </summary>
            <param name="package"></param>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Registrars.IValidationRegistrar">
            <summary>
            Validation register interface <br />
            验证注册器接口
            </summary>
        </member>
        <member name="T:CosmosStack.Validation.Registrars.IPredicateValidationRegistrar">
            <summary>
            Validation Register Interface with Predicate <br />
            带条件的验证注册器接口
            </summary>
        </member>
        <member name="T:CosmosStack.Validation.Registrars.IPredicateValidationRegistrar`1">
            <summary>
            Validation Register Interface with Predicate <br />
            带条件的验证注册器接口
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:CosmosStack.Validation.Registrars.IPredicateValidationRegistrar`2">
            <summary>
            Validation Register Interface with Predicate <br />
            带条件的验证注册器接口
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
        </member>
        <member name="T:CosmosStack.Validation.Registrars.IFluentValidationRegistrar">
            <summary>
            Fluent Validation Register Interface <br />
            流畅验证注册器接口
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Registrars.IFluentValidationRegistrar.Name">
            <summary>
            Gets name <br />
            获取名称
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Registrars.IFluentValidationRegistrar.IsAnonymous">
            <summary>
            Is anonymous <br />
            标记是否为匿名
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Registrars.IFluentValidationRegistrar.SourceType">
            <summary>
            Source type <br />
            源类型
            </summary>
        </member>
        <member name="T:CosmosStack.Validation.Registrars.IFluentValidationRegistrar`1">
            <summary>
            Fluent Validation Register Interface <br />
            流畅验证注册器接口
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.IFluentValidationRegistrar`1.ForMember(System.String,CosmosStack.Validation.VerifyRuleMode)">
            <summary>
            Register for member <br />
            为成员注册
            </summary>
            <param name="memberName"></param>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.IFluentValidationRegistrar`1.ForMember(System.Reflection.PropertyInfo,CosmosStack.Validation.VerifyRuleMode)">
            <summary>
            Register for member <br />
            为成员注册
            </summary>
            <param name="propertyInfo"></param>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.IFluentValidationRegistrar`1.ForMember(System.Reflection.FieldInfo,CosmosStack.Validation.VerifyRuleMode)">
            <summary>
            Register for member <br />
            为成员注册
            </summary>
            <param name="fieldInfo"></param>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar">
            <summary>
            Value fluent validation register interface <br />
            值流畅验证注册器接口
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar.DeclaringType">
            <summary>
            Declaring Type <br />
            声明类型
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar.MemberType">
            <summary>
            Member Type <br />
            成员类型
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar.WithConfig(System.Func{CosmosStack.Validation.IValueRuleBuilder,CosmosStack.Validation.IValueRuleBuilder})">
            <summary>
            With config <br />
            使用配置
            </summary>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar.InEnum(System.Type)">
            <summary>
            In Enum... <br />
            值在给定的枚举内
            </summary>
            <param name="enumType"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar.InEnum``1">
            <summary>
            In Enum... <br />
            值在给定的枚举内
            </summary>
            <typeparam name="TEnum"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar.IsEnumName(System.Type,System.Boolean)">
            <summary>
            Is enum name... <br />
            名称是否存在于给定枚举类型内（成员名称同名）
            </summary>
            <param name="enumType"></param>
            <param name="caseSensitive"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar.IsEnumName``1(System.Boolean)">
            <summary>
            Is enum name... <br />
            名称是否存在于给定枚举类型内（成员名称同名）
            </summary>
            <param name="caseSensitive"></param>
            <typeparam name="TEnum"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar.RequiredTypes``1">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar.RequiredTypes``2">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar.RequiredTypes``3">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar.RequiredTypes``4">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar.RequiredTypes``5">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar.RequiredTypes``6">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar.RequiredTypes``7">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar.RequiredTypes``8">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar.RequiredTypes``9">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar.RequiredTypes``10">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar.RequiredTypes``11">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar.RequiredTypes``12">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar.RequiredTypes``13">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar.RequiredTypes``14">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <typeparam name="T14"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar.RequiredTypes``15">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <typeparam name="T14"></typeparam>
            <typeparam name="T15"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar.RequiredTypes``16">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <typeparam name="T14"></typeparam>
            <typeparam name="T15"></typeparam>
            <typeparam name="T16"></typeparam>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar`1">
            <summary>
            Value fluent validation register interface <br />
            值流畅验证注册器接口
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar`1.DeclaringType">
            <summary>
            Declaring Type <br />
            声明类型
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar`1.MemberType">
            <summary>
            Member Type <br />
            成员类型
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar`1.WithConfig(System.Func{CosmosStack.Validation.IValueRuleBuilder{`0},CosmosStack.Validation.IValueRuleBuilder{`0}})">
            <summary>
            With config <br />
            使用配置
            </summary>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar`1.InEnum(System.Type)">
            <summary>
            In Enum... <br />
            值在给定的枚举内
            </summary>
            <param name="enumType"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar`1.InEnum``1">
            <summary>
            In Enum... <br />
            值在给定的枚举内
            </summary>
            <typeparam name="TEnum"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar`1.IsEnumName(System.Type,System.Boolean)">
            <summary>
            Is enum name... <br />
            名称是否存在于给定枚举类型内（成员名称同名）
            </summary>
            <param name="enumType"></param>
            <param name="caseSensitive"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar`1.IsEnumName``1(System.Boolean)">
            <summary>
            Is enum name... <br />
            名称是否存在于给定枚举类型内（成员名称同名）
            </summary>
            <param name="caseSensitive"></param>
            <typeparam name="TEnum"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar`1.RequiredTypes``1">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar`1.RequiredTypes``2">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar`1.RequiredTypes``3">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar`1.RequiredTypes``4">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar`1.RequiredTypes``5">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar`1.RequiredTypes``6">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar`1.RequiredTypes``7">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar`1.RequiredTypes``8">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar`1.RequiredTypes``9">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar`1.RequiredTypes``10">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar`1.RequiredTypes``11">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar`1.RequiredTypes``12">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar`1.RequiredTypes``13">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar`1.RequiredTypes``14">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <typeparam name="T14"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar`1.RequiredTypes``15">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <typeparam name="T14"></typeparam>
            <typeparam name="T15"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar`1.RequiredTypes``16">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <typeparam name="T14"></typeparam>
            <typeparam name="T15"></typeparam>
            <typeparam name="T16"></typeparam>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar`2">
            <summary>
            Value fluent validation register interface <br />
            值流畅验证注册器接口
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar`2.WithConfig(System.Func{CosmosStack.Validation.IValueRuleBuilder{`0,`1},CosmosStack.Validation.IValueRuleBuilder{`0,`1}})">
            <summary>
            With config <br />
            使用配置
            </summary>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar`2.And">
            <summary>
            And <br />
            与
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar`2.Or">
            <summary>
            Or <br />
            或
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar`2.WithMemberRulePackage(CosmosStack.Validation.VerifyMemberRulePackage,CosmosStack.Validation.VerifyRuleMode)">
            <summary>
            With member rule package <br />
            使用成员规则包
            </summary>
            <param name="package"></param>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar`2.InEnum(System.Type)">
            <summary>
            In Enum... <br />
            值在给定的枚举内
            </summary>
            <param name="enumType"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar`2.InEnum``1">
            <summary>
            In Enum... <br />
            值在给定的枚举内
            </summary>
            <typeparam name="TEnum"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar`2.IsEnumName(System.Type,System.Boolean)">
            <summary>
            Is enum name... <br />
            名称是否存在于给定枚举类型内（成员名称同名）
            </summary>
            <param name="enumType"></param>
            <param name="caseSensitive"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar`2.IsEnumName``1(System.Boolean)">
            <summary>
            Is enum name... <br />
            名称是否存在于给定枚举类型内（成员名称同名）
            </summary>
            <param name="caseSensitive"></param>
            <typeparam name="TEnum"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar`2.RequiredTypes``1">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar`2.RequiredTypes``2">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar`2.RequiredTypes``3">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar`2.RequiredTypes``4">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar`2.RequiredTypes``5">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar`2.RequiredTypes``6">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar`2.RequiredTypes``7">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar`2.RequiredTypes``8">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar`2.RequiredTypes``9">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar`2.RequiredTypes``10">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar`2.RequiredTypes``11">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar`2.RequiredTypes``12">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar`2.RequiredTypes``13">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar`2.RequiredTypes``14">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <typeparam name="T14"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar`2.RequiredTypes``15">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <typeparam name="T14"></typeparam>
            <typeparam name="T15"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar`2.RequiredTypes``16">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <typeparam name="T14"></typeparam>
            <typeparam name="T15"></typeparam>
            <typeparam name="T16"></typeparam>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Registrars.IWaitForMessageValidationRegistrar">
            <summary>
            The lower-level interface of ValidationRegistrar. Used to wait for verification information. <br />
            带信息的验证注册器接口
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.IWaitForMessageValidationRegistrar.WithName(System.String)">
            <summary>
            Fill in the operation name. <br />
            填入操作名称
            </summary>
            <param name="operationName"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.IWaitForMessageValidationRegistrar.WithMessage(System.String)">
            <summary>
            Fill in the message. <br />
            填入信息
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Registrars.IWaitForMessageValidationRegistrar`1">
            <summary>
            The lower-level interface of ValidationRegistrar. Used to wait for verification information. <br />
            带信息的验证注册器接口
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.IWaitForMessageValidationRegistrar`1.WithName(System.String)">
            <summary>
            Fill in the operation name. <br />
            填入操作名称
            </summary>
            <param name="operationName"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.IWaitForMessageValidationRegistrar`1.WithMessage(System.String)">
            <summary>
            Fill in the message. <br />
            填入信息
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Registrars.IWaitForMessageValidationRegistrar`2">
            <summary>
            The lower-level interface of ValidationRegistrar. Used to wait for verification information. <br />
            带信息的验证注册器接口
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.IWaitForMessageValidationRegistrar`2.WithName(System.String)">
            <summary>
            Fill in the operation name. <br />
            填入操作名称
            </summary>
            <param name="operationName"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.IWaitForMessageValidationRegistrar`2.WithMessage(System.String)">
            <summary>
            Fill in the message. <br />
            填入信息
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Registrars.RegisterMode">
            <summary>
            Register Mode <br />
            注册模式
            </summary>
        </member>
        <member name="F:CosmosStack.Validation.Registrars.RegisterMode.Direct">
            <summary>
            Direct <br />
            直接模式
            </summary>
        </member>
        <member name="F:CosmosStack.Validation.Registrars.RegisterMode.Hosted">
            <summary>
            Hosted <br />
            托管模式
            </summary>
        </member>
        <member name="T:CosmosStack.Validation.Registrars.CollRegistrarExtensions">
            <summary>
            Collection register extensions <br />
            注册扩展
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.CollRegistrarExtensions.All(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar,System.Func{System.Object,System.Boolean})">
            <summary>
            All <br />
            所有
            </summary>
            <param name="registrar"></param>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.CollRegistrarExtensions.NotAll(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar,System.Func{System.Object,System.Boolean})">
            <summary>
            Not all <br />
            不是所有
            </summary>
            <param name="registrar"></param>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.CollRegistrarExtensions.All``2(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0,``1[]},System.Func{``1,System.Boolean})">
            <summary>
            All <br />
            所有
            </summary>
            <param name="registrar"></param>
            <param name="func"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TItem"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.CollRegistrarExtensions.NotAll``2(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0,``1[]},System.Func{``1,System.Boolean})">
            <summary>
            Not all <br />
            不是所有
            </summary>
            <param name="registrar"></param>
            <param name="func"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TItem"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.CollRegistrarExtensions.All``3(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0,``1},System.Func{``2,System.Boolean})">
            <summary>
            All <br />
            所有
            </summary>
            <param name="registrar"></param>
            <param name="func"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <typeparam name="TItem"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.CollRegistrarExtensions.NotAll``3(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0,``1},System.Func{``2,System.Boolean})">
            <summary>
            Not all <br />
            不是所有
            </summary>
            <param name="registrar"></param>
            <param name="func"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <typeparam name="TItem"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.CollRegistrarExtensions.Any(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar,System.Func{System.Object,System.Boolean})">
            <summary>
            Any <br />
            任一
            </summary>
            <param name="registrar"></param>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.CollRegistrarExtensions.NotAny(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar,System.Func{System.Object,System.Boolean})">
            <summary>
            Not any <br />
            无一
            </summary>
            <param name="registrar"></param>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.CollRegistrarExtensions.Any``2(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0,``1[]},System.Func{``1,System.Boolean})">
            <summary>
            Any <br />
            任一
            </summary>
            <param name="registrar"></param>
            <param name="func"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TItem"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.CollRegistrarExtensions.NotAny``2(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0,``1[]},System.Func{``1,System.Boolean})">
            <summary>
            Not any <br />
            无一
            </summary>
            <param name="registrar"></param>
            <param name="func"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TItem"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.CollRegistrarExtensions.Any``3(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0,``1},System.Func{``2,System.Boolean})">
            <summary>
            Any <br />
            任一
            </summary>
            <param name="registrar"></param>
            <param name="func"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <typeparam name="TItem"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.CollRegistrarExtensions.NotAny``3(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0,``1},System.Func{``2,System.Boolean})">
            <summary>
            Not any <br />
            无一
            </summary>
            <param name="registrar"></param>
            <param name="func"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <typeparam name="TItem"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.CollRegistrarExtensions.In(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar,System.Collections.Generic.ICollection{System.Object})">
            <summary>
            In <br />
            在内
            </summary>
            <param name="registrar"></param>
            <param name="collection"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.CollRegistrarExtensions.In(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar,System.Func{System.Collections.Generic.ICollection{System.Object}})">
            <summary>
            In <br />
            在内
            </summary>
            <param name="registrar"></param>
            <param name="collectionFunc"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.CollRegistrarExtensions.In(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar,System.Object[])">
            <summary>
            In <br />
            在内
            </summary>
            <param name="registrar"></param>
            <param name="objects"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.CollRegistrarExtensions.NotIn(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar,System.Collections.Generic.ICollection{System.Object})">
            <summary>
            Not in <br />
            不在内
            </summary>
            <param name="registrar"></param>
            <param name="collection"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.CollRegistrarExtensions.NotIn(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar,System.Func{System.Collections.Generic.ICollection{System.Object}})">
            <summary>
            Not in <br />
            不在内
            </summary>
            <param name="registrar"></param>
            <param name="collectionFunc"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.CollRegistrarExtensions.NotIn(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar,System.Object[])">
            <summary>
            Not in <br />
            不在内
            </summary>
            <param name="registrar"></param>
            <param name="objects"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.CollRegistrarExtensions.In``1(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0},System.Collections.Generic.ICollection{``0})">
            <summary>
            In <br />
            在内
            </summary>
            <param name="registrar"></param>
            <param name="collection"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.CollRegistrarExtensions.In``1(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0},System.Func{System.Collections.Generic.ICollection{System.Object}})">
            <summary>
            In <br />
            在内
            </summary>
            <param name="registrar"></param>
            <param name="collectionFunc"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.CollRegistrarExtensions.In``1(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0},System.Object[])">
            <summary>
            In <br />
            在内
            </summary>
            <param name="registrar"></param>
            <param name="objects"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.CollRegistrarExtensions.NotIn``1(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0},System.Collections.Generic.ICollection{System.Object})">
            <summary>
            Not in <br />
            不在内
            </summary>
            <param name="registrar"></param>
            <param name="collection"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.CollRegistrarExtensions.NotIn``1(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0},System.Func{System.Collections.Generic.ICollection{System.Object}})">
            <summary>
            Not in <br />
            不在内
            </summary>
            <param name="registrar"></param>
            <param name="collectionFunc"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.CollRegistrarExtensions.NotIn``1(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0},System.Object[])">
            <summary>
            Not in <br />
            不在内
            </summary>
            <param name="registrar"></param>
            <param name="objects"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.CollRegistrarExtensions.In``2(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0,``1},System.Collections.Generic.ICollection{``1})">
            <summary>
            In <br />
            在内
            </summary>
            <param name="registrar"></param>
            <param name="collection"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.CollRegistrarExtensions.In``2(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0,``1},System.Func{System.Collections.Generic.ICollection{System.Object}})">
            <summary>
            In <br />
            在内
            </summary>
            <param name="registrar"></param>
            <param name="collectionFunc"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.CollRegistrarExtensions.In``2(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0,``1},``1[])">
            <summary>
            In <br />
            在内
            </summary>
            <param name="registrar"></param>
            <param name="objects"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.CollRegistrarExtensions.NotIn``2(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0,``1},System.Collections.Generic.ICollection{``1})">
            <summary>
            Not in <br />
            不在内
            </summary>
            <param name="registrar"></param>
            <param name="collection"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.CollRegistrarExtensions.NotIn``2(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0,``1},System.Func{System.Collections.Generic.ICollection{System.Object}})">
            <summary>
            Not in <br />
            不在内
            </summary>
            <param name="registrar"></param>
            <param name="collectionFunc"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.CollRegistrarExtensions.NotIn``2(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0,``1},``1[])">
            <summary>
            Not in <br />
            不在内
            </summary>
            <param name="registrar"></param>
            <param name="objects"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.CollRegistrarExtensions.None(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar,System.Func{System.Object,System.Boolean})">
            <summary>
            None <br />
            无一
            </summary>
            <param name="registrar"></param>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.CollRegistrarExtensions.None``2(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0,``1[]},System.Func{``1,System.Boolean})">
            <summary>
            None <br />
            无一
            </summary>
            <param name="registrar"></param>
            <param name="func"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TItem"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.CollRegistrarExtensions.None``3(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0,``1},System.Func{``2,System.Boolean})">
            <summary>
            None <br />
            无一
            </summary>
            <param name="registrar"></param>
            <param name="func"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <typeparam name="TItem"></typeparam>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Registrars.CompareRegistrarExtensions">
            <summary>
            Compare registrar extensions <br />
            比较注册器扩展
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.CompareRegistrarExtensions.Equal(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar,System.Object)">
            <summary>
            Determine whether the two values are equal. <br />
            标记是否相等
            </summary>
            <param name="registrar"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.CompareRegistrarExtensions.Equal(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar,System.Object,System.Collections.IEqualityComparer)">
            <summary>
            Determine whether the two values are equal. <br />
            标记是否相等
            </summary>
            <param name="registrar"></param>
            <param name="value"></param>
            <param name="comparer"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.CompareRegistrarExtensions.Equal(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar,System.Func{System.Object},System.Type)">
            <summary>
            Determine whether the two values are equal. <br />
            标记是否相等
            </summary>
            <param name="registrar"></param>
            <param name="valueFunc"></param>
            <param name="valueType"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.CompareRegistrarExtensions.Equal(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar,System.Func{System.Object},System.Type,System.Collections.IEqualityComparer)">
            <summary>
            Determine whether the two values are equal. <br />
            标记是否相等
            </summary>
            <param name="registrar"></param>
            <param name="valueFunc"></param>
            <param name="valueType"></param>
            <param name="comparer"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.CompareRegistrarExtensions.NotEqual(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar,System.Object)">
            <summary>
            Determine whether the two values are not equal. <br />
            标记是否不相等
            </summary>
            <param name="registrar"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.CompareRegistrarExtensions.NotEqual(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar,System.Object,System.Collections.IEqualityComparer)">
            <summary>
            Determine whether the two values are not equal. <br />
            标记是否不相等
            </summary>
            <param name="registrar"></param>
            <param name="value"></param>
            <param name="comparer"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.CompareRegistrarExtensions.NotEqual(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar,System.Func{System.Object},System.Type)">
            <summary>
            Determine whether the two values are not equal. <br />
            标记是否不相等
            </summary>
            <param name="registrar"></param>
            <param name="valueFunc"></param>
            <param name="valueType"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.CompareRegistrarExtensions.NotEqual(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar,System.Func{System.Object},System.Type,System.Collections.IEqualityComparer)">
            <summary>
            Determine whether the two values are not equal. <br />
            标记是否不相等
            </summary>
            <param name="registrar"></param>
            <param name="valueFunc"></param>
            <param name="valueType"></param>
            <param name="comparer"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.CompareRegistrarExtensions.Equal``1(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0},System.Object)">
            <summary>
            Determine whether the two values are equal. <br />
            标记是否相等
            </summary>
            <param name="registrar"></param>
            <param name="value"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.CompareRegistrarExtensions.Equal``1(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0},System.Object,System.Collections.IEqualityComparer)">
            <summary>
            Determine whether the two values are equal. <br />
            标记是否相等
            </summary>
            <param name="registrar"></param>
            <param name="value"></param>
            <param name="comparer"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.CompareRegistrarExtensions.Equal``1(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0},System.Func{System.Object},System.Type)">
            <summary>
            Determine whether the two values are equal. <br />
            标记是否相等
            </summary>
            <param name="registrar"></param>
            <param name="valueFunc"></param>
            <param name="valueType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.CompareRegistrarExtensions.Equal``1(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0},System.Func{System.Object},System.Type,System.Collections.IEqualityComparer)">
            <summary>
            Determine whether the two values are equal. <br />
            标记是否相等
            </summary>
            <param name="registrar"></param>
            <param name="valueFunc"></param>
            <param name="valueType"></param>
            <param name="comparer"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.CompareRegistrarExtensions.NotEqual``1(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0},System.Object)">
            <summary>
            Determine whether the two values are not equal. <br />
            标记是否不相等
            </summary>
            <param name="registrar"></param>
            <param name="value"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.CompareRegistrarExtensions.NotEqual``1(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0},System.Object,System.Collections.IEqualityComparer)">
            <summary>
            Determine whether the two values are not equal. <br />
            标记是否不相等
            </summary>
            <param name="registrar"></param>
            <param name="value"></param>
            <param name="comparer"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.CompareRegistrarExtensions.NotEqual``1(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0},System.Func{System.Object},System.Type)">
            <summary>
            Determine whether the two values are not equal. <br />
            标记是否不相等
            </summary>
            <param name="registrar"></param>
            <param name="valueFunc"></param>
            <param name="valueType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.CompareRegistrarExtensions.NotEqual``1(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0},System.Func{System.Object},System.Type,System.Collections.IEqualityComparer)">
            <summary>
            Determine whether the two values are not equal. <br />
            标记是否不相等
            </summary>
            <param name="registrar"></param>
            <param name="valueFunc"></param>
            <param name="valueType"></param>
            <param name="comparer"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.CompareRegistrarExtensions.Equal``2(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0,``1},``1)">
            <summary>
            Determine whether the two values are equal. <br />
            标记是否相等
            </summary>
            <param name="registrar"></param>
            <param name="value"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.CompareRegistrarExtensions.Equal``2(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0,``1},``1,System.Collections.Generic.IEqualityComparer{``1})">
            <summary>
            Determine whether the two values are equal. <br />
            标记是否相等
            </summary>
            <param name="registrar"></param>
            <param name="value"></param>
            <param name="comparer"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.CompareRegistrarExtensions.Equal``2(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0,``1},System.Func{``1})">
            <summary>
            Determine whether the two values are equal. <br />
            标记是否相等
            </summary>
            <param name="registrar"></param>
            <param name="valueFunc"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.CompareRegistrarExtensions.Equal``2(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0,``1},System.Func{``1},System.Collections.Generic.IEqualityComparer{``1})">
            <summary>
            Determine whether the two values are equal. <br />
            标记是否相等
            </summary>
            <param name="registrar"></param>
            <param name="valueFunc"></param>
            <param name="comparer"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.CompareRegistrarExtensions.NotEqual``2(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0,``1},``1)">
            <summary>
            Determine whether the two values are not equal. <br />
            标记是否不相等
            </summary>
            <param name="registrar"></param>
            <param name="value"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.CompareRegistrarExtensions.NotEqual``2(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0,``1},``1,System.Collections.Generic.IEqualityComparer{``1})">
            <summary>
            Determine whether the two values are not equal. <br />
            标记是否不相等
            </summary>
            <param name="registrar"></param>
            <param name="value"></param>
            <param name="comparer"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.CompareRegistrarExtensions.NotEqual``2(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0,``1},System.Func{``1})">
            <summary>
            Determine whether the two values are not equal. <br />
            标记是否不相等
            </summary>
            <param name="registrar"></param>
            <param name="valueFunc"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.CompareRegistrarExtensions.NotEqual``2(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0,``1},System.Func{``1},System.Collections.Generic.IEqualityComparer{``1})">
            <summary>
            Determine whether the two values are not equal. <br />
            标记是否不相等
            </summary>
            <param name="registrar"></param>
            <param name="valueFunc"></param>
            <param name="comparer"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.CompareRegistrarExtensions.GreaterThan(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar,System.Object)">
            <summary>
            Greater then <br />
            大于
            </summary>
            <param name="registrar"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.CompareRegistrarExtensions.GreaterThan(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar,System.Func{System.Object},System.Type)">
            <summary>
            Greater then <br />
            大于
            </summary>
            <param name="registrar"></param>
            <param name="valueFunc"></param>
            <param name="valueType"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.CompareRegistrarExtensions.GreaterThanOrEqual(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar,System.Object)">
            <summary>
            Greater then or equal <br />
            大于等于
            </summary>
            <param name="registrar"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.CompareRegistrarExtensions.GreaterThanOrEqual(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar,System.Func{System.Object},System.Type)">
            <summary>
            Greater then or equal <br />
            大于等于
            </summary>
            <param name="registrar"></param>
            <param name="valueFunc"></param>
            <param name="valueType"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.CompareRegistrarExtensions.GreaterThan``1(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0},System.Object)">
            <summary>
            Greater then <br />
            大于
            </summary>
            <param name="registrar"></param>
            <param name="value"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.CompareRegistrarExtensions.GreaterThan``1(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0},System.Func{System.Object},System.Type)">
            <summary>
            Greater then <br />
            大于
            </summary>
            <param name="registrar"></param>
            <param name="valueFunc"></param>
            <param name="valueType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.CompareRegistrarExtensions.GreaterThanOrEqual``1(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0},System.Object)">
            <summary>
            Greater then or equal <br />
            大于等于
            </summary>
            <param name="registrar"></param>
            <param name="value"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.CompareRegistrarExtensions.GreaterThanOrEqual``1(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0},System.Func{System.Object},System.Type)">
            <summary>
            Greater then or equal <br />
            大于等于
            </summary>
            <param name="registrar"></param>
            <param name="valueFunc"></param>
            <param name="valueType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.CompareRegistrarExtensions.GreaterThan``2(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0,``1},``1)">
            <summary>
            Greater then <br />
            大于
            </summary>
            <param name="registrar"></param>
            <param name="value"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.CompareRegistrarExtensions.GreaterThan``2(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0,``1},System.Func{``1})">
            <summary>
            Greater then <br />
            大于
            </summary>
            <param name="registrar"></param>
            <param name="valueFunc"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.CompareRegistrarExtensions.GreaterThanOrEqual``2(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0,``1},``1)">
            <summary>
            Greater then or equal <br />
            大于等于
            </summary>
            <param name="registrar"></param>
            <param name="value"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.CompareRegistrarExtensions.GreaterThanOrEqual``2(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0,``1},System.Func{``1})">
            <summary>
            Greater then or equal <br />
            大于等于
            </summary>
            <param name="registrar"></param>
            <param name="valueFunc"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.CompareRegistrarExtensions.LessThan(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar,System.Object)">
            <summary>
            Less then <br />
            小于
            </summary>
            <param name="registrar"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.CompareRegistrarExtensions.LessThan(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar,System.Func{System.Object},System.Type)">
            <summary>
            Less then <br />
            小于
            </summary>
            <param name="registrar"></param>
            <param name="valueFunc"></param>
            <param name="valueType"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.CompareRegistrarExtensions.LessThanOrEqual(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar,System.Object)">
            <summary>
            Less then or equal <br />
            小于等于
            </summary>
            <param name="registrar"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.CompareRegistrarExtensions.LessThanOrEqual(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar,System.Func{System.Object},System.Type)">
            <summary>
            Less then or equal <br />
            小于等于
            </summary>
            <param name="registrar"></param>
            <param name="valueFunc"></param>
            <param name="valueType"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.CompareRegistrarExtensions.LessThan``1(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0},System.Object)">
            <summary>
            Less then <br />
            小于
            </summary>
            <param name="registrar"></param>
            <param name="value"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.CompareRegistrarExtensions.LessThan``1(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0},System.Func{System.Object},System.Type)">
            <summary>
            Less then <br />
            小于
            </summary>
            <param name="registrar"></param>
            <param name="valueFunc"></param>
            <param name="valueType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.CompareRegistrarExtensions.LessThanOrEqual``1(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0},System.Object)">
            <summary>
            Less then or equal <br />
            小于等于
            </summary>
            <param name="registrar"></param>
            <param name="value"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.CompareRegistrarExtensions.LessThanOrEqual``1(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0},System.Func{System.Object},System.Type)">
            <summary>
            Less then or equal <br />
            小于等于
            </summary>
            <param name="registrar"></param>
            <param name="valueFunc"></param>
            <param name="valueType"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.CompareRegistrarExtensions.LessThan``2(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0,``1},``1)">
            <summary>
            Less then <br />
            小于
            </summary>
            <param name="registrar"></param>
            <param name="value"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.CompareRegistrarExtensions.LessThan``2(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0,``1},System.Func{``1})">
            <summary>
            Less then <br />
            小于
            </summary>
            <param name="registrar"></param>
            <param name="valueFunc"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.CompareRegistrarExtensions.LessThanOrEqual``2(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0,``1},``1)">
            <summary>
            Less then or equal <br />
            小于等于
            </summary>
            <param name="registrar"></param>
            <param name="value"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.CompareRegistrarExtensions.LessThanOrEqual``2(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0,``1},System.Func{``1})">
            <summary>
            Less then or equal <br />
            小于等于
            </summary>
            <param name="registrar"></param>
            <param name="valueFunc"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Registrars.RegistrarExtensions">
            <summary>
            Register extensions <br />
            注册扩展
            </summary>
        </member>
        <member name="T:CosmosStack.Validation.Registrars.FuncRegistrarExtensions">
            <summary>
            Function Registrar Extensions <br />
            函数注册扩展
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.FuncRegistrarExtensions.Func(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar,System.Func{System.Object,CosmosStack.Validation.CustomVerifyResult})">
            <summary>
            Func <br />
            注册使用函数
            </summary>
            <param name="registrar"></param>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.FuncRegistrarExtensions.Func(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar,System.Func{System.Object,System.Boolean})">
            <summary>
            Func <br />
            注册使用函数
            </summary>
            <param name="registrar"></param>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.FuncRegistrarExtensions.Func``1(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0},System.Func{System.Object,CosmosStack.Validation.CustomVerifyResult})">
            <summary>
            Func <br />
            注册使用函数
            </summary>
            <param name="registrar"></param>
            <param name="func"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.FuncRegistrarExtensions.Func``1(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0},System.Func{System.Object,System.Boolean})">
            <summary>
            Func <br />
            注册使用函数
            </summary>
            <param name="registrar"></param>
            <param name="func"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.FuncRegistrarExtensions.Func``2(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0,``1},System.Func{``1,CosmosStack.Validation.CustomVerifyResult})">
            <summary>
            Func <br />
            注册使用函数
            </summary>
            <param name="registrar"></param>
            <param name="func"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.FuncRegistrarExtensions.Func``2(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0,``1},System.Func{``1,System.Boolean})">
            <summary>
            Func <br />
            注册使用函数
            </summary>
            <param name="registrar"></param>
            <param name="func"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.FuncRegistrarExtensions.Predicate(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar,System.Predicate{System.Object})">
            <summary>
            Predicate <br />
            注册使用条件
            </summary>
            <param name="registrar"></param>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.FuncRegistrarExtensions.Predicate``1(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0},System.Predicate{System.Object})">
            <summary>
            Predicate <br />
            注册使用条件
            </summary>
            <param name="registrar"></param>
            <param name="predicate"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.FuncRegistrarExtensions.Predicate``2(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0,``1},System.Predicate{``1})">
            <summary>
            Predicate <br />
            注册使用条件
            </summary>
            <param name="registrar"></param>
            <param name="predicate"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.FuncRegistrarExtensions.Must(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar,System.Func{System.Object,CosmosStack.Validation.CustomVerifyResult})">
            <summary>
            Must <br />
            表示必须满足
            </summary>
            <param name="registrar"></param>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.FuncRegistrarExtensions.Must(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar,System.Func{System.Object,System.Boolean})">
            <summary>
            Must <br />
            表示必须满足
            </summary>
            <param name="registrar"></param>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.FuncRegistrarExtensions.Must``1(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0},System.Func{System.Object,CosmosStack.Validation.CustomVerifyResult})">
            <summary>
            Must <br />
            表示必须满足
            </summary>
            <param name="registrar"></param>
            <param name="func"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.FuncRegistrarExtensions.Must``1(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0},System.Func{System.Object,System.Boolean})">
            <summary>
            Must <br />
            表示必须满足
            </summary>
            <param name="registrar"></param>
            <param name="func"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.FuncRegistrarExtensions.Must``2(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0,``1},System.Func{``1,CosmosStack.Validation.CustomVerifyResult})">
            <summary>
            Must <br />
            表示必须满足
            </summary>
            <param name="registrar"></param>
            <param name="func"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.FuncRegistrarExtensions.Must``2(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0,``1},System.Func{``1,System.Boolean})">
            <summary>
            Must <br />
            表示必须满足
            </summary>
            <param name="registrar"></param>
            <param name="func"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.FuncRegistrarExtensions.Satisfies(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar,System.Func{System.Object,System.Boolean})">
            <summary>
            Satisfies <br />
            表示需要满足
            </summary>
            <param name="registrar"></param>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.FuncRegistrarExtensions.Satisfies(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar,System.Func{System.Object,System.Boolean},System.String)">
            <summary>
            Satisfies <br />
            表示需要满足
            </summary>
            <param name="registrar"></param>
            <param name="func"></param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.FuncRegistrarExtensions.Satisfies``1(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0},System.Func{System.Object,System.Boolean})">
            <summary>
            Satisfies <br />
            表示需要满足
            </summary>
            <param name="registrar"></param>
            <param name="func"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.FuncRegistrarExtensions.Satisfies``1(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0},System.Func{System.Object,System.Boolean},System.String)">
            <summary>
            Satisfies <br />
            表示需要满足
            </summary>
            <param name="registrar"></param>
            <param name="func"></param>
            <param name="message"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.FuncRegistrarExtensions.Satisfies``2(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0,``1},System.Func{``1,System.Boolean})">
            <summary>
            Satisfies <br />
            表示需要满足
            </summary>
            <param name="registrar"></param>
            <param name="func"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.FuncRegistrarExtensions.Satisfies``2(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0,``1},System.Func{``1,System.Boolean},System.String)">
            <summary>
            Satisfies <br />
            表示需要满足
            </summary>
            <param name="registrar"></param>
            <param name="func"></param>
            <param name="message"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Registrars.LengthRegistrarExtensions">
            <summary>
            Length Registrar Extensions <br />
            长度注册扩展
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.LengthRegistrarExtensions.Length(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar,System.Int32,System.Int32)">
            <summary>
            Length <br />
            应长
            </summary>
            <param name="registrar"></param>
            <param name="min"></param>
            <param name="max"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.LengthRegistrarExtensions.MinLength(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar,System.Int32)">
            <summary>
            Min length <br />
            至少长
            </summary>
            <param name="registrar"></param>
            <param name="min"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.LengthRegistrarExtensions.MaxLength(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar,System.Int32)">
            <summary>
            Max length <br />
            至多长
            </summary>
            <param name="registrar"></param>
            <param name="max"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.LengthRegistrarExtensions.AtLeast(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar,System.Int32)">
            <summary>
            As least <br />
            至少存在
            </summary>
            <param name="registrar"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.LengthRegistrarExtensions.Length``1(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0},System.Int32,System.Int32)">
            <summary>
            Length <br />
            应长
            </summary>
            <param name="registrar"></param>
            <param name="min"></param>
            <param name="max"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.LengthRegistrarExtensions.MinLength``1(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0},System.Int32)">
            <summary>
            Min length <br />
            至少长
            </summary>
            <param name="registrar"></param>
            <param name="min"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.LengthRegistrarExtensions.MaxLength``1(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0},System.Int32)">
            <summary>
            Max length <br />
            至多长
            </summary>
            <param name="registrar"></param>
            <param name="max"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.LengthRegistrarExtensions.AtLeast``1(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0},System.Int32)">
            <summary>
            As least <br />
            至少存在
            </summary>
            <param name="registrar"></param>
            <param name="count"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.LengthRegistrarExtensions.Length``2(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0,``1},System.Int32,System.Int32)">
            <summary>
            Length <br />
            应长
            </summary>
            <param name="registrar"></param>
            <param name="min"></param>
            <param name="max"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.LengthRegistrarExtensions.MinLength``2(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0,``1},System.Int32)">
            <summary>
            Min length <br />
            至少长
            </summary>
            <param name="registrar"></param>
            <param name="min"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.LengthRegistrarExtensions.MaxLength``2(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0,``1},System.Int32)">
            <summary>
            Max length <br />
            至多长
            </summary>
            <param name="registrar"></param>
            <param name="max"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.LengthRegistrarExtensions.AtLeast``2(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0,``1},System.Int32)">
            <summary>
            As least <br />
            至少存在
            </summary>
            <param name="registrar"></param>
            <param name="count"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Registrars.MatchesRegistrarExtensions">
            <summary>
            Matches registrar extensions <br />
            匹配注册扩展
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.MatchesRegistrarExtensions.Matches(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar,System.Text.RegularExpressions.Regex)">
            <summary>
            Matched <br />
            匹配
            </summary>
            <param name="registrar"></param>
            <param name="regex"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.MatchesRegistrarExtensions.Matches(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar,System.String)">
            <summary>
            Matched <br />
            匹配
            </summary>
            <param name="registrar"></param>
            <param name="regexExpression"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.MatchesRegistrarExtensions.Matches(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar,System.String,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            Matched <br />
            匹配
            </summary>
            <param name="registrar"></param>
            <param name="regexExpression"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.MatchesRegistrarExtensions.Matches(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar,System.Func{System.Object,System.String})">
            <summary>
            Matched <br />
            匹配
            </summary>
            <param name="registrar"></param>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.MatchesRegistrarExtensions.Matches(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar,System.Func{System.Object,System.Text.RegularExpressions.Regex})">
            <summary>
            Matched <br />
            匹配
            </summary>
            <param name="registrar"></param>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.MatchesRegistrarExtensions.Matches(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar,System.Func{System.Object,System.String},System.Text.RegularExpressions.RegexOptions)">
            <summary>
            Matched <br />
            匹配
            </summary>
            <param name="registrar"></param>
            <param name="func"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.MatchesRegistrarExtensions.Matches``1(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0},System.Text.RegularExpressions.Regex)">
            <summary>
            Matched <br />
            匹配
            </summary>
            <param name="registrar"></param>
            <param name="regex"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.MatchesRegistrarExtensions.Matches``1(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0},System.String)">
            <summary>
            Matched <br />
            匹配
            </summary>
            <param name="registrar"></param>
            <param name="regexExpression"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.MatchesRegistrarExtensions.Matches``1(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0},System.String,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            Matched <br />
            匹配
            </summary>
            <param name="registrar"></param>
            <param name="regexExpression"></param>
            <param name="options"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.MatchesRegistrarExtensions.Matches``1(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0},System.Func{``0,System.String})">
            <summary>
            Matched <br />
            匹配
            </summary>
            <param name="registrar"></param>
            <param name="func"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.MatchesRegistrarExtensions.Matches``1(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0},System.Func{``0,System.Text.RegularExpressions.Regex})">
            <summary>
            Matched <br />
            匹配
            </summary>
            <param name="registrar"></param>
            <param name="func"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.MatchesRegistrarExtensions.Matches``1(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0},System.Func{``0,System.String},System.Text.RegularExpressions.RegexOptions)">
            <summary>
            Matched <br />
            匹配
            </summary>
            <param name="registrar"></param>
            <param name="func"></param>
            <param name="options"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.MatchesRegistrarExtensions.Matches``2(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0,``1},System.Text.RegularExpressions.Regex)">
            <summary>
            Matched <br />
            匹配
            </summary>
            <param name="registrar"></param>
            <param name="regex"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.MatchesRegistrarExtensions.Matches``2(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0,``1},System.String)">
            <summary>
            Matched <br />
            匹配
            </summary>
            <param name="registrar"></param>
            <param name="regexExpression"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.MatchesRegistrarExtensions.Matches``2(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0,``1},System.String,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            Matched <br />
            匹配
            </summary>
            <param name="registrar"></param>
            <param name="regexExpression"></param>
            <param name="options"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.MatchesRegistrarExtensions.Matches``2(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0,``1},System.Func{``0,System.String})">
            <summary>
            Matched <br />
            匹配
            </summary>
            <param name="registrar"></param>
            <param name="func"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.MatchesRegistrarExtensions.Matches``2(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0,``1},System.Func{``0,System.Text.RegularExpressions.Regex})">
            <summary>
            Matched <br />
            匹配
            </summary>
            <param name="registrar"></param>
            <param name="func"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.MatchesRegistrarExtensions.Matches``2(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0,``1},System.Func{``0,System.String},System.Text.RegularExpressions.RegexOptions)">
            <summary>
            Matched <br />
            匹配
            </summary>
            <param name="registrar"></param>
            <param name="func"></param>
            <param name="options"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Registrars.MessageRegistrarExtensions">
            <summary>
            Message registrar extensions <br />
            消息注册扩展
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.MessageRegistrarExtensions.WithMessage(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar,System.String)">
            <summary>
            With message <br />
            使用消息
            </summary>
            <param name="registrar"></param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.MessageRegistrarExtensions.WithMessage(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar,System.String,System.Boolean)">
            <summary>
            With message <br />
            使用消息
            </summary>
            <param name="registrar"></param>
            <param name="message"></param>
            <param name="appendOrOverwrite"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.MessageRegistrarExtensions.WithMessage``1(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0},System.String)">
            <summary>
            With message <br />
            使用消息
            </summary>
            <param name="registrar"></param>
            <param name="message"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.MessageRegistrarExtensions.WithMessage``1(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0},System.String,System.Boolean)">
            <summary>
            With message <br />
            使用消息
            </summary>
            <param name="registrar"></param>
            <param name="message"></param>
            <param name="appendOrOverwrite"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.MessageRegistrarExtensions.WithMessage``2(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0,``1},System.String)">
            <summary>
            With message <br />
            使用消息
            </summary>
            <param name="registrar"></param>
            <param name="message"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.MessageRegistrarExtensions.WithMessage``2(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0,``1},System.String,System.Boolean)">
            <summary>
            With message <br />
            使用消息
            </summary>
            <param name="registrar"></param>
            <param name="message"></param>
            <param name="appendOrOverwrite"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Registrars.RangeRegistrarExtensions">
            <summary>
            Range registrar extensions <br />
            区间注册扩展
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.RangeRegistrarExtensions.Range(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar,System.Object,System.Object,CosmosStack.Validation.RangeOptions)">
            <summary>
            Range... from .. to .. <br />
            位于区间
            </summary>
            <param name="registrar"></param>
            <param name="from"></param>
            <param name="to"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.RangeRegistrarExtensions.RangeWithOpenInterval(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar,System.Object,System.Object)">
            <summary>
            Range... (from .. to ..) <br />
            位于开区间
            </summary>
            <param name="registrar"></param>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.RangeRegistrarExtensions.RangeWithCloseInterval(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar,System.Object,System.Object)">
            <summary>
            Range... [from .. to ..] <br />
            位于闭区间
            </summary>
            <param name="registrar"></param>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.RangeRegistrarExtensions.Range``1(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0},System.Object,System.Object,CosmosStack.Validation.RangeOptions)">
            <summary>
            Range... from .. to .. <br />
            位于区间
            </summary>
            <param name="registrar"></param>
            <param name="from"></param>
            <param name="to"></param>
            <param name="options"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.RangeRegistrarExtensions.RangeWithOpenInterval``1(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0},System.Object,System.Object)">
            <summary>
            Range... (from .. to ..) <br />
            位于开区间
            </summary>
            <param name="registrar"></param>
            <param name="from"></param>
            <param name="to"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.RangeRegistrarExtensions.RangeWithCloseInterval``1(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0},System.Object,System.Object)">
            <summary>
            Range... [from .. to ..] <br />
            位于闭区间
            </summary>
            <param name="registrar"></param>
            <param name="from"></param>
            <param name="to"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.RangeRegistrarExtensions.Range``2(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0,``1},``1,``1,CosmosStack.Validation.RangeOptions)">
            <summary>
            Range... from .. to .. <br />
            位于区间
            </summary>
            <param name="registrar"></param>
            <param name="from"></param>
            <param name="to"></param>
            <param name="options"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.RangeRegistrarExtensions.RangeWithOpenInterval``2(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0,``1},``1,``1)">
            <summary>
            Range... (from .. to ..) <br />
            位于开区间
            </summary>
            <param name="registrar"></param>
            <param name="from"></param>
            <param name="to"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.RangeRegistrarExtensions.RangeWithCloseInterval``2(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0,``1},``1,``1)">
            <summary>
            Range... [from .. to ..] <br />
            位于闭区间
            </summary>
            <param name="registrar"></param>
            <param name="from"></param>
            <param name="to"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Registrars.RequiredRegistrarExtensions">
            <summary>
            Required registrar extensions
            必要性验证注册扩展
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.RequiredRegistrarExtensions.Empty(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar)">
            <summary>
            Empty <br />
            应为空
            </summary>
            <param name="registrar"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.RequiredRegistrarExtensions.NotEmpty(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar)">
            <summary>
            Not empty <br />
            应不为空
            </summary>
            <param name="registrar"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.RequiredRegistrarExtensions.Empty``1(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0})">
            <summary>
            Empty <br />
            应为空
            </summary>
            <param name="registrar"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.RequiredRegistrarExtensions.NotEmpty``1(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0})">
            <summary>
            Not empty <br />
            应不为空
            </summary>
            <param name="registrar"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.RequiredRegistrarExtensions.Empty``2(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0,``1})">
            <summary>
            Empty <br />
            应为空
            </summary>
            <param name="registrar"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.RequiredRegistrarExtensions.NotEmpty``2(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0,``1})">
            <summary>
            Not empty <br />
            应不为空
            </summary>
            <param name="registrar"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.RequiredRegistrarExtensions.Required(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar)">
            <summary>
            Required <br />
            需要满足
            </summary>
            <param name="registrar"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.RequiredRegistrarExtensions.Required``1(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0})">
            <summary>
            Required <br />
            需要满足
            </summary>
            <param name="registrar"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.RequiredRegistrarExtensions.Required``2(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0,``1})">
            <summary>
            Required <br />
            需要满足
            </summary>
            <param name="registrar"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.RequiredRegistrarExtensions.RequiredString(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar)">
            <summary>
            Required String <br />
            字符串需要满足
            </summary>
            <param name="registrar"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.RequiredRegistrarExtensions.RequiredString``1(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0})">
            <summary>
            Required String <br />
            字符串需要满足
            </summary>
            <param name="registrar"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.RequiredRegistrarExtensions.RequiredString``2(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0,``1})">
            <summary>
            Required String <br />
            字符串需要满足
            </summary>
            <param name="registrar"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.RequiredRegistrarExtensions.RequiredNumeric(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar,CosmosStack.Reflection.TypeIsOptions)">
            <summary>
            Required Numeric <br />
            数字需要满足
            </summary>
            <param name="registrar"></param>
            <param name="isOptions"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.RequiredRegistrarExtensions.RequiredNumeric``1(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0},CosmosStack.Reflection.TypeIsOptions)">
            <summary>
            Required Numeric <br />
            数字需要满足
            </summary>
            <param name="registrar"></param>
            <param name="isOptions"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.RequiredRegistrarExtensions.RequiredNumeric``2(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0,``1},CosmosStack.Reflection.TypeIsOptions)">
            <summary>
            Required Numeric <br />
            数字需要满足
            </summary>
            <param name="registrar"></param>
            <param name="isOptions"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.RequiredRegistrarExtensions.RequiredBoolean(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar)">
            <summary>
            Required Boolean <br />
            布尔值需要满足
            </summary>
            <param name="registrar"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.RequiredRegistrarExtensions.RequiredBoolean``1(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0})">
            <summary>
            Required Boolean <br />
            布尔值需要满足
            </summary>
            <param name="registrar"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.RequiredRegistrarExtensions.RequiredBoolean``2(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0,``1})">
            <summary>
            Required Boolean <br />
            布尔值需要满足
            </summary>
            <param name="registrar"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.RequiredRegistrarExtensions.RequiredGuid(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar)">
            <summary>
            Required Guid <br />
            GUID 值需要满足
            </summary>
            <param name="registrar"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.RequiredRegistrarExtensions.RequiredGuid``1(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0})">
            <summary>
            Required Guid <br />
            GUID 值需要满足
            </summary>
            <param name="registrar"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.RequiredRegistrarExtensions.RequiredGuid``2(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0,``1})">
            <summary>
            Required Guid <br />
            GUID 值需要满足
            </summary>
            <param name="registrar"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.RequiredRegistrarExtensions.RequiredDateTime(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar,System.Globalization.DateTimeStyles)">
            <summary>
            Required DateTime <br />
            DateTime 值需要满足
            </summary>
            <param name="registrar"></param>
            <param name="style"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.RequiredRegistrarExtensions.RequiredDateTime``1(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0},System.Globalization.DateTimeStyles)">
            <summary>
            Required DateTime <br />
            DateTime 值需要满足
            </summary>
            <param name="registrar"></param>
            <param name="style"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.RequiredRegistrarExtensions.RequiredDateTime``2(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0,``1},System.Globalization.DateTimeStyles)">
            <summary>
            Required DateTime <br />
            DateTime 值需要满足
            </summary>
            <param name="registrar"></param>
            <param name="style"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.RequiredRegistrarExtensions.RequiredDateInfo(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar,System.Globalization.DateTimeStyles)">
            <summary>
            Required DateInfo <br />
            DateInfo 值需要满足
            </summary>
            <param name="registrar"></param>
            <param name="style"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.RequiredRegistrarExtensions.RequiredDateInfo``1(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0},System.Globalization.DateTimeStyles)">
            <summary>
            Required DateInfo <br />
            DateInfo 值需要满足
            </summary>
            <param name="registrar"></param>
            <param name="style"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.RequiredRegistrarExtensions.RequiredDateInfo``2(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0,``1},System.Globalization.DateTimeStyles)">
            <summary>
            Required DateInfo <br />
            DateInfo 值需要满足
            </summary>
            <param name="registrar"></param>
            <param name="style"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.RequiredRegistrarExtensions.Null(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar)">
            <summary>
            Null <br />
            应为空
            </summary>
            <param name="registrar"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.RequiredRegistrarExtensions.NotNull(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar)">
            <summary>
            Not null <br />
            应不为空
            </summary>
            <param name="registrar"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.RequiredRegistrarExtensions.Null``1(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0})">
            <summary>
            Null <br />
            应为空
            </summary>
            <param name="registrar"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.RequiredRegistrarExtensions.NotNull``1(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0})">
            <summary>
            Not null <br />
            应不为空
            </summary>
            <param name="registrar"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.RequiredRegistrarExtensions.Null``2(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0,``1})">
            <summary>
            Null <br />
            应为空
            </summary>
            <param name="registrar"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.RequiredRegistrarExtensions.NotNull``2(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0,``1})">
            <summary>
            Not null <br />
            应不为空
            </summary>
            <param name="registrar"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.RequiredRegistrarExtensions.RequiredType(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar,System.Type)">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <param name="registrar"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.RequiredRegistrarExtensions.RequiredTypes(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar,System.Type[])">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <param name="registrar"></param>
            <param name="types"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.RequiredRegistrarExtensions.RequiredType``1(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0},System.Type)">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <param name="registrar"></param>
            <param name="type"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.RequiredRegistrarExtensions.RequiredTypes``1(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0},System.Type[])">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <param name="registrar"></param>
            <param name="types"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.RequiredRegistrarExtensions.RequiredType``2(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0,``1},System.Type)">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <param name="registrar"></param>
            <param name="type"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.RequiredRegistrarExtensions.RequiredTypes``2(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0,``1},System.Type[])">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <param name="registrar"></param>
            <param name="types"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Registrars.ScaleRegistrarExtensions">
            <summary>
            Scale registrar extensions
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.ScaleRegistrarExtensions.ScalePrecision(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Limit the scale and precision of the value.
            </summary>
            <param name="registrar"></param>
            <param name="scale"></param>
            <param name="precision"></param>
            <param name="ignoreTrailingZeros"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.ScaleRegistrarExtensions.ScalePrecision``1(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0},System.Int32,System.Int32,System.Boolean)">
            <summary>
            Limit the scale and precision of the value.
            </summary>
            <param name="registrar"></param>
            <param name="scale"></param>
            <param name="precision"></param>
            <param name="ignoreTrailingZeros"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.ScaleRegistrarExtensions.ScalePrecision``2(CosmosStack.Validation.Registrars.IValueFluentValidationRegistrar{``0,``1},System.Int32,System.Int32,System.Boolean)">
            <summary>
            Limit the scale and precision of the value.
            </summary>
            <param name="registrar"></param>
            <param name="scale"></param>
            <param name="precision"></param>
            <param name="ignoreTrailingZeros"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Registrars.ValidationRegistrar">
            <summary>
            Validation registrar <br />
            验证注册器
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Registrars.ValidationRegistrar.DefaultRegistrar">
            <summary>
            Gets default registrar <br />
            获得默认注册器
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.ValidationRegistrar.ForProvider(CosmosStack.Validation.IValidationProvider)">
            <summary>
            Get registrar for the given provider <br />
            为给定的验证服务提供者程序提供一个注册器
            </summary>
            <param name="provider"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.ValidationRegistrar.ForProvider(CosmosStack.Validation.IValidationProvider,System.String)">
            <summary>
            Get registrar for the given provider <br />
            为给定的验证服务提供者程序提供一个注册器
            </summary>
            <param name="provider"></param>
            <param name="name"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.ValidationRegistrar.Continue">
            <summary>
            Get registrar for the given provider and continue to register <br />
            为给定的验证服务提供者程序提供一个注册器，并继续注册
            </summary>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.ValidationRegistrar.Continue(System.String)">
            <summary>
            Get registrar for the given provider and continue to register <br />
            为给定的验证服务提供者程序提供一个注册器，并继续注册
            </summary>
            <param name="name"></param>
            <returns></returns>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.ValueValidationRegistrar.RequiredTypes``1">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.ValueValidationRegistrar.RequiredTypes``2">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.ValueValidationRegistrar.RequiredTypes``3">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.ValueValidationRegistrar.RequiredTypes``4">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.ValueValidationRegistrar.RequiredTypes``5">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.ValueValidationRegistrar.RequiredTypes``6">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.ValueValidationRegistrar.RequiredTypes``7">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.ValueValidationRegistrar.RequiredTypes``8">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.ValueValidationRegistrar.RequiredTypes``9">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.ValueValidationRegistrar.RequiredTypes``10">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.ValueValidationRegistrar.RequiredTypes``11">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.ValueValidationRegistrar.RequiredTypes``12">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.ValueValidationRegistrar.RequiredTypes``13">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.ValueValidationRegistrar.RequiredTypes``14">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <typeparam name="T14"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.ValueValidationRegistrar.RequiredTypes``15">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <typeparam name="T14"></typeparam>
            <typeparam name="T15"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.ValueValidationRegistrar.RequiredTypes``16">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <typeparam name="T14"></typeparam>
            <typeparam name="T15"></typeparam>
            <typeparam name="T16"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.ValueValidationRegistrar`1.RequiredTypes``1">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.ValueValidationRegistrar`1.RequiredTypes``2">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.ValueValidationRegistrar`1.RequiredTypes``3">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.ValueValidationRegistrar`1.RequiredTypes``4">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.ValueValidationRegistrar`1.RequiredTypes``5">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.ValueValidationRegistrar`1.RequiredTypes``6">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.ValueValidationRegistrar`1.RequiredTypes``7">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.ValueValidationRegistrar`1.RequiredTypes``8">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.ValueValidationRegistrar`1.RequiredTypes``9">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.ValueValidationRegistrar`1.RequiredTypes``10">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.ValueValidationRegistrar`1.RequiredTypes``11">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.ValueValidationRegistrar`1.RequiredTypes``12">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.ValueValidationRegistrar`1.RequiredTypes``13">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.ValueValidationRegistrar`1.RequiredTypes``14">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <typeparam name="T14"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.ValueValidationRegistrar`1.RequiredTypes``15">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <typeparam name="T14"></typeparam>
            <typeparam name="T15"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.ValueValidationRegistrar`1.RequiredTypes``16">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <typeparam name="T14"></typeparam>
            <typeparam name="T15"></typeparam>
            <typeparam name="T16"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.ValueValidationRegistrar`2.RequiredTypes``1">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.ValueValidationRegistrar`2.RequiredTypes``2">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.ValueValidationRegistrar`2.RequiredTypes``3">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.ValueValidationRegistrar`2.RequiredTypes``4">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.ValueValidationRegistrar`2.RequiredTypes``5">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.ValueValidationRegistrar`2.RequiredTypes``6">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.ValueValidationRegistrar`2.RequiredTypes``7">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.ValueValidationRegistrar`2.RequiredTypes``8">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.ValueValidationRegistrar`2.RequiredTypes``9">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.ValueValidationRegistrar`2.RequiredTypes``10">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.ValueValidationRegistrar`2.RequiredTypes``11">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.ValueValidationRegistrar`2.RequiredTypes``12">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.ValueValidationRegistrar`2.RequiredTypes``13">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.ValueValidationRegistrar`2.RequiredTypes``14">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <typeparam name="T14"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.ValueValidationRegistrar`2.RequiredTypes``15">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <typeparam name="T14"></typeparam>
            <typeparam name="T15"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.ValueValidationRegistrar`2.RequiredTypes``16">
            <summary>
            To restrict the type, it must be one of the given types (equal, or a derived class).
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <typeparam name="T8"></typeparam>
            <typeparam name="T9"></typeparam>
            <typeparam name="T10"></typeparam>
            <typeparam name="T11"></typeparam>
            <typeparam name="T12"></typeparam>
            <typeparam name="T13"></typeparam>
            <typeparam name="T14"></typeparam>
            <typeparam name="T15"></typeparam>
            <typeparam name="T16"></typeparam>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Registrars.ValidationRegistrarWithMessage">
            <summary>
            The lower-level interface of ValidationRegistrar. Used to wait for verification information.
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.ValidationRegistrarWithMessage.WithName(System.String)">
            <summary>
            Fill in the operation name.
            </summary>
            <param name="operationName"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.ValidationRegistrarWithMessage.WithMessage(System.String)">
            <summary>
            Fill in the message.
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Registrars.ValidationRegistrarWithMessage`1">
            <summary>
            The lower-level interface of ValidationRegistrar. Used to wait for verification information.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.ValidationRegistrarWithMessage`1.WithName(System.String)">
            <summary>
            Fill in the operation name.
            </summary>
            <param name="operationName"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.ValidationRegistrarWithMessage`1.WithMessage(System.String)">
            <summary>
            Fill in the message.
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Registrars.ValidationRegistrarWithMessage`2">
            <summary>
            The lower-level interface of ValidationRegistrar. Used to wait for verification information.
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.ValidationRegistrarWithMessage`2.WithName(System.String)">
            <summary>
            Fill in the operation name.
            </summary>
            <param name="operationName"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Registrars.ValidationRegistrarWithMessage`2.WithMessage(System.String)">
            <summary>
            Fill in the message.
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Strategies.IValidationStrategy">
            <summary>
            An interface for Validation Strategy <br />
            验证策略接口
            </summary>
        </member>
        <member name="T:CosmosStack.Validation.Strategies.IValidationStrategy`1">
            <summary>
            An interface for Validation Strategy <br />
            验证策略接口
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:CosmosStack.Validation.Strategies.ValidationStrategy">
            <summary>
            Validation strategy base <br />
            验证策略基类
            </summary>
        </member>
        <member name="T:CosmosStack.Validation.Strategies.ValidationStrategy`1">
            <summary>
            Validation strategy base <br />
            验证策略基类
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:CosmosStack.Validation.StrategyMode">
            <summary>
            Verify the effective mode of the strategy. <br />
            策略模式
            </summary>
        </member>
        <member name="F:CosmosStack.Validation.StrategyMode.Append">
            <summary>
            Append <br />
            附加
            </summary>
        </member>
        <member name="F:CosmosStack.Validation.StrategyMode.ItemOverwrite">
            <summary>
            Item overwrite <br />
            条目覆写
            </summary>
        </member>
        <member name="F:CosmosStack.Validation.StrategyMode.OverallOverwrite">
            <summary>
            Overall overwrite <br />
            全部覆写
            </summary>
        </member>
        <member name="T:CosmosStack.Validation.ValidationHandler">
            <summary>
            The verification processor is generated by the short-circuit construction mode. <br />
            验证处理器
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.ValidationHandler.Verify(System.Type,System.Object)">
            <summary>
            Verify the entire object.
            </summary>
            <param name="declaringType"></param>
            <param name="instance"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Validation.ValidationHandler.Verify(System.Type,System.Object,System.String)">
            <summary>
            Verify the entire object.
            </summary>
            <param name="declaringType"></param>
            <param name="instance"></param>
            <param name="projectName"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Validation.ValidationHandler.Verify``1(``0)">
            <summary>
            Verify the entire object.
            </summary>
            <param name="instance"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.ValidationHandler.Verify``1(``0,System.String)">
            <summary>
            Verify the entire object.
            </summary>
            <param name="instance"></param>
            <param name="projectName"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.ValidationHandler.Verify(CosmosStack.Validation.Objects.VerifiableObjectContext,System.String)">
            <summary>
            Verify the entire object.
            </summary>
            <param name="context"></param>
            <param name="projectName"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Validation.ValidationHandler.VerifyOne(System.Type,System.Object,System.String)">
            <summary>
            Verify a member of the object.
            </summary>
            <param name="declaringType"></param>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Validation.ValidationHandler.VerifyOne(System.Type,System.Object,System.String,System.String)">
            <summary>
            Verify a member of the object.
            </summary>
            <param name="declaringType"></param>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <param name="projectName"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Validation.ValidationHandler.VerifyOne``1(System.Object,System.String)">
            <summary>
            Verify a member of the object.
            </summary>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.ValidationHandler.VerifyOne``1(System.Object,System.String,System.String)">
            <summary>
            Verify a member of the object.
            </summary>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <param name="projectName"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.ValidationHandler.VerifyOne``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1)">
            <summary>
            Verify a member of the object.
            </summary>
            <param name="propertySelector"></param>
            <param name="memberValue"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Validation.ValidationHandler.VerifyOne``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.String)">
            <summary>
            Verify a member of the object.
            </summary>
            <param name="propertySelector"></param>
            <param name="memberValue"></param>
            <param name="projectName"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Validation.ValidationHandler.VerifyOne(CosmosStack.Validation.Objects.VerifiableMemberContext,System.Type,System.String)">
            <summary>
            Verify a member of the object.
            </summary>
            <param name="context"></param>
            <param name="declaringType"></param>
            <param name="projectName"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Validation.ValidationHandler.VerifyOneWithInstance(System.Type,System.Object,System.String,System.Object)">
            <summary>
            Verify a member of the object.
            </summary>
            <param name="declaringType"></param>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <param name="instance"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Validation.ValidationHandler.VerifyOneWithInstance(System.Type,System.Object,System.String,System.Object,System.String)">
            <summary>
            Verify a member of the object.
            </summary>
            <param name="declaringType"></param>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <param name="instance"></param>
            <param name="projectName"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Validation.ValidationHandler.VerifyOneWithInstance``1(System.Object,System.String,``0)">
            <summary>
            Verify a member of the object.
            </summary>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <param name="instance"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.ValidationHandler.VerifyOneWithInstance``1(System.Object,System.String,``0,System.String)">
            <summary>
            Verify a member of the object.
            </summary>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <param name="instance"></param>
            <param name="projectName"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.ValidationHandler.VerifyOneWithInstance``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,``0)">
            <summary>
            Verify a member of the object.
            </summary>
            <param name="propertySelector"></param>
            <param name="memberValue"></param>
            <param name="instance"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Validation.ValidationHandler.VerifyOneWithInstance``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,``0,System.String)">
            <summary>
            Verify a member of the object.
            </summary>
            <param name="propertySelector"></param>
            <param name="memberValue"></param>
            <param name="instance"></param>
            <param name="projectName"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Validation.ValidationHandler.VerifyOneWithDictionary(System.Type,System.Object,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Verify a member of the object.
            </summary>
            <param name="declaringType"></param>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <param name="keyValueCollection"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Validation.ValidationHandler.VerifyOneWithDictionary(System.Type,System.Object,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String)">
            <summary>
            Verify a member of the object.
            </summary>
            <param name="declaringType"></param>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <param name="keyValueCollection"></param>
            <param name="projectName"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Validation.ValidationHandler.VerifyOneWithDictionary``1(System.Object,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Verify a member of the object.
            </summary>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <param name="keyValueCollection"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.ValidationHandler.VerifyOneWithDictionary``1(System.Object,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String)">
            <summary>
            Verify a member of the object.
            </summary>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <param name="keyValueCollection"></param>
            <param name="projectName"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.ValidationHandler.VerifyOneWithDictionary``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Verify a member of the object.
            </summary>
            <param name="propertySelector"></param>
            <param name="memberValue"></param>
            <param name="keyValueCollection"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Validation.ValidationHandler.VerifyOneWithDictionary``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Collections.Generic.IDictionary{System.String,System.Object},System.String)">
            <summary>
            Verify a member of the object.
            </summary>
            <param name="propertySelector"></param>
            <param name="memberValue"></param>
            <param name="keyValueCollection"></param>
            <param name="projectName"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Validation.ValidationHandler.VerifyMany(System.Type,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Verify the dictionary type object. <br />
            (The key of the dictionary is the member name of the object, and the value of the dictionary is the value of the object member)
            </summary>
            <param name="declaringType"></param>
            <param name="keyValueCollections"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Validation.ValidationHandler.VerifyMany(System.Type,System.Collections.Generic.IDictionary{System.String,System.Object},System.String)">
            <summary>
            Verify the dictionary type object. <br />
            (The key of the dictionary is the member name of the object, and the value of the dictionary is the value of the object member)
            </summary>
            <param name="declaringType"></param>
            <param name="keyValueCollections"></param>
            <param name="projectName"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Validation.ValidationHandler.VerifyMany``1(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Verify the dictionary type object. <br />
            (The key of the dictionary is the member name of the object, and the value of the dictionary is the value of the object member)
            </summary>
            <param name="keyValueCollections"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.ValidationHandler.VerifyMany``1(System.Collections.Generic.IDictionary{System.String,System.Object},System.String)">
            <summary>
            Verify the dictionary type object. <br />
            (The key of the dictionary is the member name of the object, and the value of the dictionary is the value of the object member)
            </summary>
            <param name="keyValueCollections"></param>
            <param name="projectName"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.ValidationHandler.VerifyMany(CosmosStack.Validation.Objects.VerifiableObjectContext,System.String)">
            <summary>
            Verify the dictionary type object. <br />
            (The key of the dictionary is the member name of the object, and the value of the dictionary is the value of the object member)
            </summary>
            <param name="context"></param>
            <param name="projectName"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Validation.ValidationHandler.Merge(System.Collections.Generic.IEnumerable{CosmosStack.Validation.Projects.IProject})">
            <summary>
            Merge projects
            </summary>
            <param name="projects"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.ValidationHandlerBuilder">
            <summary>
            Validation Handler Builder <br />
            验证处理器构造器程序
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.ValidationHandlerBuilder.ForStrategy``1(CosmosStack.Validation.StrategyMode)">
            <summary>
            Use a strategy <br />
            使用一条策略
            </summary>
            <param name="mode"></param>
            <typeparam name="TStrategy"></typeparam>
        </member>
        <member name="M:CosmosStack.Validation.ValidationHandlerBuilder.ForStrategy``2(CosmosStack.Validation.StrategyMode)">
            <summary>
            Use a strategy <br />
            使用一条策略
            </summary>
            <param name="mode"></param>
            <typeparam name="TStrategy"></typeparam>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:CosmosStack.Validation.ValidationHandlerBuilder.ForStrategy(CosmosStack.Validation.Strategies.IValidationStrategy,CosmosStack.Validation.StrategyMode)">
            <summary>
            Use a strategy <br />
            使用一条策略
            </summary>
            <param name="strategy"></param>
            <param name="mode"></param>
        </member>
        <member name="M:CosmosStack.Validation.ValidationHandlerBuilder.ForStrategy``1(CosmosStack.Validation.Strategies.IValidationStrategy{``0},CosmosStack.Validation.StrategyMode)">
            <summary>
            Use a strategy <br />
            使用一条策略
            </summary>
            <param name="strategy"></param>
            <param name="mode"></param>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:CosmosStack.Validation.ValidationHandlerBuilder.ForStrategy``1(System.String,CosmosStack.Validation.StrategyMode)">
            <summary>
            Use a strategy <br />
            使用一条策略
            </summary>
            <param name="name"></param>
            <param name="mode"></param>
            <typeparam name="TStrategy"></typeparam>
        </member>
        <member name="M:CosmosStack.Validation.ValidationHandlerBuilder.ForStrategy``2(System.String,CosmosStack.Validation.StrategyMode)">
            <summary>
            Use a strategy <br />
            使用一条策略
            </summary>
            <param name="name"></param>
            <param name="mode"></param>
            <typeparam name="TStrategy"></typeparam>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:CosmosStack.Validation.ValidationHandlerBuilder.ForStrategy(CosmosStack.Validation.Strategies.IValidationStrategy,System.String,CosmosStack.Validation.StrategyMode)">
            <summary>
            Use a strategy <br />
            使用一条策略
            </summary>
            <param name="strategy"></param>
            <param name="name"></param>
            <param name="mode"></param>
        </member>
        <member name="M:CosmosStack.Validation.ValidationHandlerBuilder.ForStrategy``1(CosmosStack.Validation.Strategies.IValidationStrategy{``0},System.String,CosmosStack.Validation.StrategyMode)">
            <summary>
            Use a strategy <br />
            使用一条策略
            </summary>
            <param name="strategy"></param>
            <param name="name"></param>
            <param name="mode"></param>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:CosmosStack.Validation.ValidationHandlerBuilder.ForType(System.Type,System.Action{CosmosStack.Validation.Registrars.IFluentValidationRegistrar})">
            <summary>
            Use rules for specified types <br />
            对指定的类型使用规则
            </summary>
            <param name="type"></param>
            <param name="registerAct"></param>
        </member>
        <member name="M:CosmosStack.Validation.ValidationHandlerBuilder.ForType(System.Type,System.String,System.Action{CosmosStack.Validation.Registrars.IFluentValidationRegistrar})">
            <summary>
            Use rules for specified types <br />
            对指定的类型使用规则
            </summary>
            <param name="type"></param>
            <param name="name"></param>
            <param name="registerAct"></param>
        </member>
        <member name="M:CosmosStack.Validation.ValidationHandlerBuilder.ForType``1(System.Action{CosmosStack.Validation.Registrars.IFluentValidationRegistrar{``0}})">
            <summary>
            Use rules for specified types <br />
            对指定的类型使用规则
            </summary>
            <param name="registerAct"></param>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:CosmosStack.Validation.ValidationHandlerBuilder.ForType``1(System.String,System.Action{CosmosStack.Validation.Registrars.IFluentValidationRegistrar{``0}})">
            <summary>
            Use rules for specified types <br />
            对指定的类型使用规则
            </summary>
            <param name="name"></param>
            <param name="registerAct"></param>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:CosmosStack.Validation.ValidationHandlerBuilder.ForRulePackage(CosmosStack.Validation.VerifyRulePackage,CosmosStack.Validation.VerifyRuleMode)">
            <summary>
            Use a rule package <br />
            使用一个验证规则包
            </summary>
            <param name="package"></param>
            <param name="mode"></param>
        </member>
        <member name="M:CosmosStack.Validation.ValidationHandlerBuilder.ForRulePackage(CosmosStack.Validation.VerifyRulePackage,System.String,CosmosStack.Validation.VerifyRuleMode)">
            <summary>
            Use a rule package <br />
            使用一个验证规则包
            </summary>
            <param name="package"></param>
            <param name="name"></param>
            <param name="mode"></param>
        </member>
        <member name="M:CosmosStack.Validation.ValidationHandlerBuilder.ForMemberRulePackage(System.String,CosmosStack.Validation.VerifyMemberRulePackage,CosmosStack.Validation.VerifyRuleMode)">
            <summary>
            Use a member rule package <br />
            使用一条成员验证规则包
            </summary>
            <param name="memberName"></param>
            <param name="package"></param>
            <param name="mode"></param>
        </member>
        <member name="M:CosmosStack.Validation.ValidationHandlerBuilder.ForMemberRulePackage(System.String,CosmosStack.Validation.VerifyMemberRulePackage,System.String,CosmosStack.Validation.VerifyRuleMode)">
            <summary>
            Use a member rule package <br />
            使用一条成员验证规则包
            </summary>
            <param name="memberName"></param>
            <param name="package"></param>
            <param name="name"></param>
            <param name="mode"></param>
        </member>
        <member name="M:CosmosStack.Validation.ValidationHandlerBuilder.Build">
            <summary>
            Build  <br />
            构建
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.ValidationHandlerBuilder.Create">
            <summary>
            Create <br />
            创建
            </summary>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.ValidationMe">
            <summary>
            The entry of the static validator component. <br />
            验证组件静态入口
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.ValidationMe.RegisterProvider(CosmosStack.Validation.IValidationProvider)">
            <summary>
            Register a new ValidationProvider. <br />
            注册一个新的 ValidationProvider。
            </summary>
            <param name="validationProvider"></param>
        </member>
        <member name="M:CosmosStack.Validation.ValidationMe.Unregister">
            <summary>
            Unregister <br />
            反注册
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.ValidationMe.RegisterProvider(CosmosStack.Validation.IValidationProvider,System.String)">
            <summary>
            Register a new ValidationProvider. <br />
            注册一个新的 ValidationProvider。
            </summary>
            <param name="validationProvider"></param>
            <param name="name"></param>
        </member>
        <member name="M:CosmosStack.Validation.ValidationMe.OverrideProvider(CosmosStack.Validation.IValidationProvider,System.String)">
            <summary>
            Override a ValidationProvider. <br />
            覆盖一个 ValidationProvider。
            </summary>
            <param name="validationProvider"></param>
            <param name="name"></param>
        </member>
        <member name="M:CosmosStack.Validation.ValidationMe.Resolve(System.Type)">
            <summary>
            Resolve a validator based on a given type.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.ValidationMe.Resolve(System.Type,System.String)">
            <summary>
            Resolve a validator based on a given type and name.
            </summary>
            <param name="type"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.ValidationMe.Resolve``1">
            <summary>
            Resolve a validator based on a given type.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.ValidationMe.Resolve``1(System.String)">
            <summary>
            Resolve a validator based on a given type and name.
            </summary>
            <param name="name"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.ValidationMe.Use(System.String)">
            <summary>
            According to the given name, an instance of IValidationProvider is returned.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.ValidationMe.UpdateDefaultOptions(CosmosStack.Validation.ValidationOptions)">
            <summary>
            Override the default options.
            </summary>
            <param name="options"></param>
        </member>
        <member name="M:CosmosStack.Validation.ValidationMe.UpdateDefaultOptions(System.Action{CosmosStack.Validation.ValidationOptions})">
            <summary>
            Update the default options.
            </summary>
            <param name="optionAct"></param>
        </member>
        <member name="M:CosmosStack.Validation.ValidationMe.UpdateMainOptions(CosmosStack.Validation.ValidationOptions)">
            <summary>
            Override the main validation provider's options
            </summary>
            <param name="options"></param>
        </member>
        <member name="M:CosmosStack.Validation.ValidationMe.UpdateMainOptions(System.Action{CosmosStack.Validation.ValidationOptions})">
            <summary>
            Update the main validation provider's options
            </summary>
            <param name="optionAct"></param>
        </member>
        <member name="M:CosmosStack.Validation.ValidationMe.UpdateOptions(System.String,CosmosStack.Validation.ValidationOptions)">
            <summary>
            Override the validation provider's options with the given name.
            </summary>
            <param name="providerName"></param>
            <param name="options"></param>
        </member>
        <member name="M:CosmosStack.Validation.ValidationMe.UpdateOptions(System.String,System.Action{CosmosStack.Validation.ValidationOptions})">
            <summary>
            Update the validation provider's options with the given name.
            </summary>
            <param name="providerName"></param>
            <param name="optionAct"></param>
        </member>
        <member name="T:CosmosStack.Validation.ValidationOptions">
            <summary>
            Validation options <br />
            验证选项
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.ValidationOptions.AnnotationEnabled">
            <summary>
            Mark whether the annotation validator is valid. <br />
            开启注解验证功能。默认为 True。
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.ValidationOptions.CustomValidatorEnabled">
            <summary>
            Mark whether the custom validator is valid. <br />
            开启自定义验证器功能。默认为 True。
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.ValidationOptions.FailureIfInstanceIsNull">
            <summary>
            When the verified instance is empty, whether to return a failure result. <br />
            实例为空时，将视作验证失败。默认为 True。
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.ValidationOptions.FailureIfProjectNotMatch">
            <summary>
            When the type of rule does not exist, whether to return a failure result. <br />
            类型（Type Project）未命中时，将视作验证失败。默认为 False。
            </summary>
        </member>
        <member name="T:CosmosStack.Validation.AbstractValidationProvider">
            <summary>
            Abstract Validation Provider. <br />
            验证服务提供者程序基类
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.AbstractValidationProvider.Resolve(System.Type)">
            <summary>
            Resolve a validator based on a given type.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.AbstractValidationProvider.Resolve(System.Type,System.String)">
            <summary>
            Resolve a validator based on a given type and name.
            </summary>
            <param name="type"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.AbstractValidationProvider.Resolve``1">
            <summary>
            Resolve a validator based on a given type.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.AbstractValidationProvider.Resolve``1(System.String)">
            <summary>
            Resolve a validator based on a given type and name.
            </summary>
            <param name="name"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.AbstractValidationProvider.CosmosStack#Validation#Internals#ICorrectProvider#ExposeProjectManager">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.AbstractValidationProvider.CosmosStack#Validation#Internals#ICorrectProvider#ExposeObjectResolver">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.AbstractValidationProvider.CosmosStack#Validation#Internals#ICorrectProvider#ExposeCustomValidatorManager">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.AbstractValidationProvider.CosmosStack#Validation#Internals#ICorrectProvider#ExposeValidationOptions">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.AbstractValidationProvider.UpdateOptions(CosmosStack.Validation.ValidationOptions)">
            <summary>
            Override the configuration of the validator.
            </summary>
            <param name="options"></param>
        </member>
        <member name="M:CosmosStack.Validation.AbstractValidationProvider.UpdateOptions(System.Action{CosmosStack.Validation.ValidationOptions})">
            <summary>
            Update the configuration of the validator.
            </summary>
            <param name="optionAct"></param>
        </member>
        <member name="T:CosmosStack.Validation.ValidationProvider">
            <summary>
            Validation Provider <br />
            验证服务提供者程序
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.ValidationProvider.#ctor(CosmosStack.Validation.Projects.IValidationProjectManager,CosmosStack.Validation.Objects.IVerifiableObjectResolver,CosmosStack.Validation.ValidationOptions)">
            <summary>
            Create an instance of ValidationProvider.
            </summary>
            <param name="projectManager"></param>
            <param name="objectResolver"></param>
            <param name="options"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Validation.ValidationProvider.Resolve(System.Type)">
            <summary>
            Resolve a validator based on a given type.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.ValidationProvider.Resolve(System.Type,System.String)">
            <summary>
            Resolve a validator based on a given type and name.
            </summary>
            <param name="type"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.ValidationProvider.Resolve``1">
            <summary>
            Resolve a validator based on a given type.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.ValidationProvider.Resolve``1(System.String)">
            <summary>
            Resolve a validator based on a given type and name.
            </summary>
            <param name="name"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.ValidationProvider.CosmosStack#Validation#Internals#ICorrectProvider#ExposeProjectManager">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.ValidationProvider.CosmosStack#Validation#Internals#ICorrectProvider#ExposeObjectResolver">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.ValidationProvider.CosmosStack#Validation#Internals#ICorrectProvider#ExposeCustomValidatorManager">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.ValidationProvider.CosmosStack#Validation#Internals#ICorrectProvider#ExposeValidationOptions">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.ValidationProvider.UpdateOptions(CosmosStack.Validation.ValidationOptions)">
            <summary>
            Override the configuration of the validator.
            </summary>
            <param name="options"></param>
        </member>
        <member name="M:CosmosStack.Validation.ValidationProvider.UpdateOptions(System.Action{CosmosStack.Validation.ValidationOptions})">
            <summary>
            Update the configuration of the validator.
            </summary>
            <param name="optionAct"></param>
        </member>
        <member name="T:CosmosStack.Validation.Validators.AggregationValidator`1">
            <summary>
            Aggregate validator. <br />
            The default built-in validator of Cosmos Validation is a collection of project validators based on types and rules, 
            annotation validators based on annotations, general custom validators based on registered custom validators, etc.
            <para>
            聚合验证器 <br />
            Cosmos Validation 的默认内置验证器是基于类型和规则的项目验证器的集合、基于注解的注解验证器、基于注册的自定义验证器的通用自定义验证器等。
            </para>
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:CosmosStack.Validation.Validators.AggregationValidator`1.Name">
            <summary>
            Name of validation <br />
            验证器名称
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Validators.AggregationValidator`1.IsAnonymous">
            <summary>
            Mark whether the validator is anonymous. <br />
            标记是否为匿名验证器
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Validators.AggregationValidator`1.CosmosStack#Validation#Validators#ICorrectValidator#IsTypeBinding">
            <inheritdoc />
        </member>
        <member name="P:CosmosStack.Validation.Validators.AggregationValidator`1.CosmosStack#Validation#Validators#ICorrectValidator#SourceType">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Validators.AggregationValidator`1.Verify(`0)">
            <summary>
            Verify the entire entity <br />
            验证入口
            </summary>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.AggregationValidator`1.CosmosStack#Validation#Validators#IValidator#Verify(System.Type,System.Object)">
            <summary>
            Verify the entire entity <br />
            验证入口
            </summary>
            <param name="declaringType"></param>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.AggregationValidator`1.VerifyOne(System.Object,System.String)">
            <summary>
            Verify a member of the entity. <br />
            成员验证入口
            </summary>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.AggregationValidator`1.VerifyOne``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
            <summary>
            Verify a member of the entity. <br />
            成员验证入口
            </summary>
            <param name="expression"></param>
            <param name="memberValue"></param>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.AggregationValidator`1.CosmosStack#Validation#Validators#IValidator#VerifyOne(System.Type,System.Object,System.String)">
            <summary>
            Verify a member of the entity. <br />
            成员验证入口
            </summary>
            <param name="declaringType"></param>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.AggregationValidator`1.VerifyOneWithInstance(System.Object,System.String,`0)">
            <summary>
            Verify a member of the entity. <br />
            成员验证入口
            </summary>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.AggregationValidator`1.VerifyOneWithInstance``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0,`0)">
            <summary>
            Verify a member of the entity. <br />
            成员验证入口
            </summary>
            <param name="expression"></param>
            <param name="memberValue"></param>
            <param name="instance"></param>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.AggregationValidator`1.CosmosStack#Validation#Validators#IValidator#VerifyOneWithInstance(System.Type,System.Object,System.String,System.Object)">
            <summary>
            Verify a member of the entity. <br />
            成员验证入口
            </summary>
            <param name="declaringType"></param>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.AggregationValidator`1.VerifyOneWithDictionary(System.Object,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Verify a member of the entity. <br />
            成员验证入口
            </summary>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <param name="keyValueCollection"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.AggregationValidator`1.VerifyOneWithDictionary``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Verify a member of the entity. <br />
            成员验证入口
            </summary>
            <param name="expression"></param>
            <param name="memberValue"></param>
            <param name="keyValueCollection"></param>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.AggregationValidator`1.CosmosStack#Validation#Validators#IValidator#VerifyOneWithDictionary(System.Type,System.Object,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Verify a member of the entity. <br />
            成员验证入口
            </summary>
            <param name="declaringType"></param>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <param name="keyValueCollection"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.AggregationValidator`1.VerifyMany(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Verify each member in the non-strongly typed dictionary. <br />
            字典验证入口
            </summary>
            <param name="keyValueCollections"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.AggregationValidator`1.CosmosStack#Validation#Validators#IValidator#VerifyMany(System.Type,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Verify each member in the non-strongly typed dictionary. <br />
            字典验证入口
            </summary>
            <param name="declaringType"></param>
            <param name="keyValueCollections"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Validators.AnnotationValidator">
            <summary>
            Annotation Validator <br />
            注解验证器
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Validators.AnnotationValidator.Name">
            <summary>
            Name of validation <br />
            验证倾名称
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Validators.AnnotationValidator.IsAnonymous">
            <summary>
            Mark whether the validator is anonymous. <br />
            标记是否为匿名验证器
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Validators.AnnotationValidator.CosmosStack#Validation#Validators#ICorrectValidator#IsTypeBinding">
            <inheritdoc />
        </member>
        <member name="P:CosmosStack.Validation.Validators.AnnotationValidator.CosmosStack#Validation#Validators#ICorrectValidator#SourceType">
            <inheritdoc />
        </member>
        <member name="P:CosmosStack.Validation.Validators.AnnotationValidator.Instance">
            <summary>
            Create a new instance of Annotation Validator
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Validators.AnnotationValidator.GetInstance">
            <summary>
            Create a new instance of Annotation Validator
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.AnnotationValidator.GetInstance(CosmosStack.Validation.ValidationOptions)">
            <summary>
            Create a new instance of Annotation Validator with given options
            </summary>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.AnnotationValidator.GetInstance(CosmosStack.Validation.Objects.IVerifiableObjectResolver,CosmosStack.Validation.ValidationOptions)">
            <summary>
            Create a new instance of Annotation Validator with given options and Object Resolver
            </summary>
            <param name="objectResolver"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.AnnotationValidator.Verify(System.Type,System.Object)">
            <summary>
            Verify the entire entity <br />
            验证入口
            </summary>
            <param name="declaringType"></param>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.AnnotationValidator.Verify``1(``0)">
            <summary>
            Verify the entire entity <br />
            验证入口
            </summary>
            <param name="instance"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.AnnotationValidator.Verify(CosmosStack.Validation.Objects.VerifiableObjectContext)">
            <summary>
            Verify the entire entity <br />
            验证入口
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.AnnotationValidator.VerifyOne(System.Type,System.Object,System.String)">
            <summary>
            Verify a member of the entity. <br />
            成员验证入口
            </summary>
            <param name="declaringType"></param>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.AnnotationValidator.VerifyOne``2(``1,System.String)">
            <summary>
            Verify a member of the entity. <br />
            成员验证入口
            </summary>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.AnnotationValidator.VerifyOne``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1)">
            <summary>
            Verify a member of the entity. <br />
            成员验证入口
            </summary>
            <param name="propertySelector"></param>
            <param name="memberValue"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.AnnotationValidator.VerifyOneWithInstance(System.Type,System.Object,System.String,System.Object)">
            <summary>
            Verify a member of the entity. <br />
            成员验证入口
            </summary>
            <param name="declaringType"></param>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.AnnotationValidator.VerifyOneWithInstance``2(``1,System.String,``0)">
            <summary>
            Verify a member of the entity. <br />
            成员验证入口
            </summary>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <param name="instance"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.AnnotationValidator.VerifyOneWithInstance``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,``0)">
            <summary>
            Verify a member of the entity. <br />
            成员验证入口
            </summary>
            <param name="propertySelector"></param>
            <param name="memberValue"></param>
            <param name="instance"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.AnnotationValidator.VerifyOneWithDictionary(System.Type,System.Object,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Verify a member of the entity. <br />
            成员验证入口
            </summary>
            <param name="declaringType"></param>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <param name="keyValueCollection"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.AnnotationValidator.VerifyOneWithDictionary``2(``1,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Verify a member of the entity. <br />
            成员验证入口
            </summary>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <param name="keyValueCollection"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.AnnotationValidator.VerifyOneWithDictionary``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Verify a member of the entity. <br />
            成员验证入口
            </summary>
            <param name="propertySelector"></param>
            <param name="memberValue"></param>
            <param name="keyValueCollection"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.AnnotationValidator.VerifyOne(CosmosStack.Validation.Objects.VerifiableMemberContext)">
            <summary>
            Verify a member of the entity. <br />
            成员验证入口
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.AnnotationValidator.VerifyMany(System.Type,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Verify each member in the non-strongly typed dictionary. <br />
            字典验证入口
            </summary>
            <param name="declaringType"></param>
            <param name="keyValueCollections"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.AnnotationValidator.VerifyMany``1(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Verify each member in the non-strongly typed dictionary. <br />
            字典验证入口
            </summary>
            <param name="keyValueCollections"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.AnnotationValidator.VerifyMany(CosmosStack.Validation.Objects.VerifiableObjectContext)">
            <summary>
            Verify each member in the non-strongly typed dictionary. <br />
            字典验证入口
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Validators.CustomValidator">
            <summary>
            Custom validator. <br />
            自定义验证器
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Validators.CustomValidator.Name">
            <summary>
            Name of validation <br />
            验证器的名称
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Validators.CustomValidator.IsAnonymous">
            <summary>
            Mark whether the validator is anonymous. <br />
            标记是否为匿名验证器
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Validators.CustomValidator.CosmosStack#Validation#Validators#ICorrectValidator#IsTypeBinding">
            <inheritdoc />
        </member>
        <member name="P:CosmosStack.Validation.Validators.CustomValidator.CosmosStack#Validation#Validators#ICorrectValidator#SourceType">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Validators.CustomValidator.Verify(System.Type,System.Object)">
            <summary>
            Verify the entire entity <br />
            验证入口
            </summary>
            <param name="declaringType"></param>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.CustomValidator.VerifyViaContext(CosmosStack.Validation.Objects.VerifiableObjectContext)">
            <summary>
            Verify the entire entity <br />
            验证入口
            </summary>
            <param name="context"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Validation.Validators.CustomValidator.VerifyOne(System.Type,System.Object,System.String)">
            <summary>
            Verify a member of the entity. <br />
            成员验证入口
            </summary>
            <param name="declaringType"></param>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.CustomValidator.VerifyOneWithInstance(System.Type,System.Object,System.String,System.Object)">
            <summary>
            Verify a member of the entity. <br />
            成员验证入口
            </summary>
            <param name="declaringType"></param>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.CustomValidator.VerifyOneWithDictionary(System.Type,System.Object,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Verify a member of the entity. <br />
            成员验证入口
            </summary>
            <param name="declaringType"></param>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <param name="keyValueCollection"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.CustomValidator.VerifyOneViaContext(CosmosStack.Validation.Objects.VerifiableMemberContext)">
            <summary>
            Verify a member of the entity. <br />
            成员验证入口
            </summary>
            <param name="context"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:CosmosStack.Validation.Validators.CustomValidator.VerifyMany(System.Type,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Verify each member in the non-strongly typed dictionary. <br />
            字典验证入口
            </summary>
            <param name="declaringType"></param>
            <param name="keyValueCollections"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Validators.CustomValidatorManager">
            <summary>
            Custom Validator Manager <br />
            自定义验证器管理器
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Validators.CustomValidatorManager.Register``1">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Validators.CustomValidatorManager.Register``2">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Validators.CustomValidatorManager.Register(CosmosStack.Validation.Validators.CustomValidator)">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Validators.CustomValidatorManager.Register``1(CosmosStack.Validation.Validators.CustomValidator{``0})">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Validators.CustomValidatorManager.Resolve(System.String)">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Validators.CustomValidatorManager.Resolve``1(System.String)">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Validators.CustomValidatorManager.ResolveAll">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Validators.CustomValidatorManager.ResolveEmpty">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.Validators.CustomValidatorManager.ResolveBy(System.Func{CosmosStack.Validation.Validators.CustomValidator,System.Boolean})">
            <inheritdoc />
        </member>
        <member name="T:CosmosStack.Validation.Validators.CustomValidator`1">
            <summary>
            Custom validator. <br />
            自定义验证器
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:CosmosStack.Validation.Validators.CustomValidator`1.Verify(`0)">
            <summary>
            Verify the entire entity <br />
            验证入口
            </summary>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.CustomValidator`1.CosmosStack#Validation#Validators#IValidator#Verify(System.Type,System.Object)">
            <summary>
            Verify the entire entity <br />
            验证入口
            </summary>
            <param name="declaringType"></param>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.CustomValidator`1.VerifyOne(System.Object,System.String)">
            <summary>
            Verify a member of the entity. <br />
            成员验证入口
            </summary>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.CustomValidator`1.VerifyOne``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
            <summary>
            Verify a member of the entity. <br />
            成员验证入口
            </summary>
            <param name="expression"></param>
            <param name="memberValue"></param>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.CustomValidator`1.CosmosStack#Validation#Validators#IValidator#VerifyOne(System.Type,System.Object,System.String)">
            <summary>
            Verify a member of the entity. <br />
            成员验证入口
            </summary>
            <param name="declaringType"></param>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.CustomValidator`1.VerifyOneWithInstance(System.Object,System.String,`0)">
            <summary>
            Verify a member of the entity. <br />
            成员验证入口
            </summary>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.CustomValidator`1.VerifyOneWithInstance``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0,`0)">
            <summary>
            Verify a member of the entity. <br />
            成员验证入口
            </summary>
            <param name="expression"></param>
            <param name="memberValue"></param>
            <param name="instance"></param>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.CustomValidator`1.CosmosStack#Validation#Validators#IValidator#VerifyOneWithInstance(System.Type,System.Object,System.String,System.Object)">
            <summary>
            Verify a member of the entity. <br />
            成员验证入口
            </summary>
            <param name="declaringType"></param>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.CustomValidator`1.VerifyOneWithDictionary(System.Object,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Verify a member of the entity. <br />
            成员验证入口
            </summary>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <param name="keyValueCollection"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.CustomValidator`1.VerifyOneWithDictionary``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Verify a member of the entity. <br />
            成员验证入口
            </summary>
            <param name="expression"></param>
            <param name="memberValue"></param>
            <param name="keyValueCollection"></param>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.CustomValidator`1.CosmosStack#Validation#Validators#IValidator#VerifyOneWithDictionary(System.Type,System.Object,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Verify a member of the entity. <br />
            成员验证入口
            </summary>
            <param name="declaringType"></param>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <param name="keyValueCollection"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.CustomValidator`1.VerifyMany(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Verify each member in the non-strongly typed dictionary. <br />
            字典验证入口
            </summary>
            <param name="keyValueCollections"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.CustomValidator`1.CosmosStack#Validation#Validators#IValidator#VerifyMany(System.Type,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Verify each member in the non-strongly typed dictionary. <br />
            字典验证入口
            </summary>
            <param name="declaringType"></param>
            <param name="keyValueCollections"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Validators.ICustomValidatorManager">
            <summary>
            An interface for custom validator manager
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Validators.ICustomValidatorManager.Register``1">
            <summary>
            Register custom validator <br />
            注册自定义验证器
            </summary>
            <typeparam name="TValidator"></typeparam>
        </member>
        <member name="M:CosmosStack.Validation.Validators.ICustomValidatorManager.Register``2">
            <summary>
            Register custom validator <br />
            注册自定义验证器
            </summary>
            <typeparam name="TValidator"></typeparam>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:CosmosStack.Validation.Validators.ICustomValidatorManager.Register(CosmosStack.Validation.Validators.CustomValidator)">
            <summary>
            Register custom validator <br />
            注册自定义验证器
            </summary>
            <param name="validator"></param>
        </member>
        <member name="M:CosmosStack.Validation.Validators.ICustomValidatorManager.Register``1(CosmosStack.Validation.Validators.CustomValidator{``0})">
            <summary>
            Register custom validator <br />
            注册自定义验证器
            </summary>
            <param name="validator"></param>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:CosmosStack.Validation.Validators.ICustomValidatorManager.Resolve(System.String)">
            <summary>
            Resolve custom validator <br />
            解析自定义验证器
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.ICustomValidatorManager.Resolve``1(System.String)">
            <summary>
            Resolve custom validator <br />
            解析自定义验证器
            </summary>
            <param name="name"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.ICustomValidatorManager.ResolveAll">
            <summary>
            Resolve all custom validators <br />
            解析所有自定义验证器
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.ICustomValidatorManager.ResolveEmpty">
            <summary>
            Resolve empty custom validators <br />
            解析空自定义验证器
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.ICustomValidatorManager.ResolveBy(System.Func{CosmosStack.Validation.Validators.CustomValidator,System.Boolean})">
            <summary>
            Resolve custom validator by filter <br />
            根据筛选条件解析自定义验证器
            </summary>
            <param name="filter"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Validators.IValidator">
            <summary>
            Interface of Cosmos Validator <br />
            验证器接口
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Validators.IValidator.Name">
            <summary>
            Name of validation <br />
            验证器名称
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Validators.IValidator.IsAnonymous">
            <summary>
            Mark whether the validator is anonymous. <br />
            标记是否为匿名验证器
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Validators.IValidator.Verify(System.Type,System.Object)">
            <summary>
            Verify the entire entity <br />
            验证入口
            </summary>
            <param name="declaringType"></param>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.IValidator.VerifyOne(System.Type,System.Object,System.String)">
            <summary>
            Verify a member of the entity. <br />
            成员验证入口
            </summary>
            <param name="declaringType"></param>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.IValidator.VerifyOneWithInstance(System.Type,System.Object,System.String,System.Object)">
            <summary>
            Verify a member of the entity. <br />
            成员验证入口
            </summary>
            <param name="declaringType"></param>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.IValidator.VerifyOneWithDictionary(System.Type,System.Object,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Verify a member of the entity. <br />
            成员验证入口
            </summary>
            <param name="declaringType"></param>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <param name="keyValueCollection"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.IValidator.VerifyMany(System.Type,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Verify each member in the non-strongly typed dictionary. <br />
            字典验证入口
            </summary>
            <param name="declaringType"></param>
            <param name="keyValueCollections"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Validators.IValidator`1">
            <summary>
            Interface of Cosmos Validator, a generic version. <br />
            验证器接口
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:CosmosStack.Validation.Validators.IValidator`1.Verify(`0)">
            <summary>
            Verify the entire entity <br />
            验证入口
            </summary>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.IValidator`1.VerifyOne(System.Object,System.String)">
            <summary>
            Verify a member of the entity. <br />
            成员验证入口
            </summary>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.IValidator`1.VerifyOne``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
            <summary>
            Verify a member of the entity. <br />
            成员验证入口
            </summary>
            <param name="expression"></param>
            <param name="memberValue"></param>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.IValidator`1.VerifyOneWithInstance(System.Object,System.String,`0)">
            <summary>
            Verify a member of the entity. <br />
            成员验证入口
            </summary>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.IValidator`1.VerifyOneWithInstance``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0,`0)">
            <summary>
            Verify a member of the entity. <br />
            成员验证入口
            </summary>
            <param name="expression"></param>
            <param name="memberValue"></param>
            <param name="instance"></param>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.IValidator`1.VerifyOneWithDictionary(System.Object,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Verify a member of the entity. <br />
            成员验证入口
            </summary>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <param name="keyValueCollection"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.IValidator`1.VerifyOneWithDictionary``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Verify a member of the entity. <br />
            成员验证入口
            </summary>
            <param name="expression"></param>
            <param name="memberValue"></param>
            <param name="keyValueCollection"></param>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.IValidator`1.VerifyMany(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Verify each member in the non-strongly typed dictionary. <br />
            字典验证入口
            </summary>
            <param name="keyValueCollections"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Validators.SealedValidator">
            <summary>
            A validator that only returns success information, and cannot be inherited. <br />
            静态验证器，只返回成功，不返回失败
            </summary>
        </member>
        <member name="T:CosmosStack.Validation.Validators.SealedValidator`1">
            <summary>
            A validator that only returns success information, and cannot be inherited. <br />
            静态验证器，只返回成功，不返回失败
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:CosmosStack.Validation.Validators.StrategyValidator">
            <summary>
            Strategy-based validator, used to quickly build the packaging of the strategy validator. <br />
            基于策略的验证器，用于快速构建策略验证器包
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Validators.StrategyValidator.Name">
            <summary>
            Name of validation <br />
            验证器名称
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Validators.StrategyValidator.IsAnonymous">
            <summary>
            Mark whether the validator is anonymous. <br />
            标记是否为匿名验证器
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Validators.StrategyValidator.Verify(System.Type,System.Object)">
            <summary>
            Verify the entire entity <br />
            验证入口
            </summary>
            <param name="declaringType"></param>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.StrategyValidator.VerifyOne(System.Type,System.Object,System.String)">
            <summary>
            Verify a member of the entity. <br />
            成员验证入口
            </summary>
            <param name="declaringType"></param>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.StrategyValidator.VerifyOneWithInstance(System.Type,System.Object,System.String,System.Object)">
            <summary>
            Verify a member of the entity. <br />
            成员验证入口
            </summary>
            <param name="declaringType"></param>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.StrategyValidator.VerifyOneWithDictionary(System.Type,System.Object,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Verify a member of the entity. <br />
            成员验证入口
            </summary>
            <param name="declaringType"></param>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <param name="keyValueCollection"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.StrategyValidator.VerifyMany(System.Type,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Verify each member in the non-strongly typed dictionary. <br />
            字典验证入口
            </summary>
            <param name="declaringType"></param>
            <param name="keyValueCollections"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.StrategyValidator.By(CosmosStack.Validation.Strategies.IValidationStrategy)">
            <summary>
            Create a strategy validator based on the specified Strategy. <br />
            根据指定的验证策略，生成一个策略验证器
            </summary>
            <param name="strategy"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.StrategyValidator.By(CosmosStack.Validation.Strategies.IValidationStrategy,CosmosStack.Validation.ValidationOptions)">
            <summary>
            Create a strategy validator based on the specified Strategy. <br />
            根据指定的验证策略，生成一个策略验证器
            </summary>
            <param name="strategy"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.StrategyValidator.By``1">
            <summary>
            Create a strategy validator based on the specified Strategy. <br />
            根据指定的验证策略，生成一个策略验证器
            </summary>
            <typeparam name="TStrategy"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.StrategyValidator.By``2">
            <summary>
            Create a strategy validator based on the specified Strategy. <br />
            根据指定的验证策略，生成一个策略验证器
            </summary>
            <typeparam name="TStrategy"></typeparam>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.StrategyValidator.By``1(CosmosStack.Validation.ValidationOptions)">
            <summary>
            Create a strategy validator based on the specified Strategy. <br />
            根据指定的验证策略，生成一个策略验证器
            </summary>
            <param name="options"></param>
            <typeparam name="TStrategy"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.StrategyValidator.By``2(CosmosStack.Validation.ValidationOptions)">
            <summary>
            Create a strategy validator based on the specified Strategy. <br />
            根据指定的验证策略，生成一个策略验证器
            </summary>
            <param name="options"></param>
            <typeparam name="TStrategy"></typeparam>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Validators.StrategyValidator`1">
            <summary>
            Strategy-based validator, used to quickly build the packaging of the strategy validator. <br />
            基于策略的验证器，用于快速构建策略验证器包
            </summary>
            <typeparam name="TStrategy"></typeparam>
        </member>
        <member name="P:CosmosStack.Validation.Validators.StrategyValidator`1.Name">
            <summary>
            Name of validation <br />
            验证器名称
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Validators.StrategyValidator`1.IsAnonymous">
            <summary>
            Mark whether the validator is anonymous. <br />
            标记是否为匿名验证器
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Validators.StrategyValidator`1.Verify(System.Type,System.Object)">
            <summary>
            Verify the entire entity <br />
            验证入口
            </summary>
            <param name="declaringType"></param>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.StrategyValidator`1.VerifyOne(System.Type,System.Object,System.String)">
            <summary>
            Verify a member of the entity. <br />
            成员验证入口
            </summary>
            <param name="declaringType"></param>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.StrategyValidator`1.VerifyOneWithInstance(System.Type,System.Object,System.String,System.Object)">
            <summary>
            Verify a member of the entity. <br />
            成员验证入口
            </summary>
            <param name="declaringType"></param>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.StrategyValidator`1.VerifyOneWithDictionary(System.Type,System.Object,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Verify a member of the entity. <br />
            字典验证入口
            </summary>
            <param name="declaringType"></param>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <param name="keyValueCollection"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.StrategyValidator`1.VerifyMany(System.Type,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Verify each member in the non-strongly typed dictionary. <br />
            字典验证入口
            </summary>
            <param name="declaringType"></param>
            <param name="keyValueCollections"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Validators.StrategyValidator`2">
            <summary>
            Strategy-based validator, used to quickly build the packaging of the strategy validator. <br />
            基于策略的验证器，用于快速构建策略验证器包
            </summary>
            <typeparam name="TStrategy"></typeparam>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:CosmosStack.Validation.Validators.StrategyValidator`2.Name">
            <summary>
            Name of validation <br />
            验证器名称
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Validators.StrategyValidator`2.IsAnonymous">
            <summary>
            Mark whether the validator is anonymous. <br />
            标记是否为匿名验证器
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Validators.StrategyValidator`2.Verify(System.Type,System.Object)">
            <summary>
            Verify the entire entity <br />
            验证入口
            </summary>
            <param name="declaringType"></param>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.StrategyValidator`2.Verify(`1)">
            <summary>
            Verify the entire entity <br />
            验证入口
            </summary>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.StrategyValidator`2.VerifyOne(System.Type,System.Object,System.String)">
            <summary>
            Verify a member of the entity. <br />
            成员验证入口
            </summary>
            <param name="declaringType"></param>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.StrategyValidator`2.VerifyOne(System.Object,System.String)">
            <summary>
            Verify a member of the entity. <br />
            成员验证入口
            </summary>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.StrategyValidator`2.VerifyOne``1(System.Linq.Expressions.Expression{System.Func{`1,``0}},``0)">
            <summary>
            Verify a member of the entity. <br />
            成员验证入口
            </summary>
            <param name="expression"></param>
            <param name="memberValue"></param>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.StrategyValidator`2.VerifyOneWithInstance(System.Type,System.Object,System.String,System.Object)">
            <summary>
            Verify a member of the entity. <br />
            成员验证入口
            </summary>
            <param name="declaringType"></param>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.StrategyValidator`2.VerifyOneWithInstance(System.Object,System.String,`1)">
            <summary>
            Verify a member of the entity. <br />
            成员验证入口
            </summary>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.StrategyValidator`2.VerifyOneWithInstance``1(System.Linq.Expressions.Expression{System.Func{`1,``0}},``0,`1)">
            <summary>
            Verify a member of the entity. <br />
            成员验证入口
            </summary>
            <param name="expression"></param>
            <param name="memberValue"></param>
            <param name="instance"></param>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.StrategyValidator`2.VerifyOneWithDictionary(System.Type,System.Object,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Verify a member of the entity. <br />
            成员验证入口
            </summary>
            <param name="declaringType"></param>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <param name="keyValueCollection"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.StrategyValidator`2.VerifyOneWithDictionary(System.Object,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Verify a member of the entity. <br />
            成员验证入口
            </summary>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <param name="keyValueCollection"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.StrategyValidator`2.VerifyOneWithDictionary``1(System.Linq.Expressions.Expression{System.Func{`1,``0}},``0,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Verify a member of the entity. <br />
            成员验证入口
            </summary>
            <param name="expression"></param>
            <param name="memberValue"></param>
            <param name="keyValueCollection"></param>
            <typeparam name="TVal"></typeparam>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.StrategyValidator`2.VerifyMany(System.Type,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Verify each member in the non-strongly typed dictionary. <br />
            字典验证入口
            </summary>
            <param name="declaringType"></param>
            <param name="keyValueCollections"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.StrategyValidator`2.VerifyMany(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Verify each member in the non-strongly typed dictionary. <br />
            字典验证入口
            </summary>
            <param name="keyValueCollections"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.Validators.ValidatorType">
            <summary>
            Validator type. <br />
            验证器类型
            </summary>
        </member>
        <member name="F:CosmosStack.Validation.Validators.ValidatorType.BuildIn">
            <summary>
            Built-in validator. <br />
            内建验证器
            </summary>
        </member>
        <member name="F:CosmosStack.Validation.Validators.ValidatorType.Custom">
            <summary>
            Custom validator. <br />
            自定义验证器
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Validators.VerifyRulePackageValidator.Name">
            <summary>
            Name of validation
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.Validators.VerifyRulePackageValidator.IsAnonymous">
            <summary>
            Mark whether the validator is anonymous.
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.Validators.VerifyRulePackageValidator.Verify(System.Type,System.Object)">
            <summary>
            Verify the entire entity
            </summary>
            <param name="declaringType"></param>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.VerifyRulePackageValidator.VerifyOne(System.Type,System.Object,System.String)">
            <summary>
            Verify a member of the entity.
            </summary>
            <param name="declaringType"></param>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.VerifyRulePackageValidator.VerifyOneWithInstance(System.Type,System.Object,System.String,System.Object)">
            <summary>
            Verify a member of the entity.
            </summary>
            <param name="declaringType"></param>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <param name="instance"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.VerifyRulePackageValidator.VerifyOneWithDictionary(System.Type,System.Object,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Verify a member of the entity.
            </summary>
            <param name="declaringType"></param>
            <param name="memberValue"></param>
            <param name="memberName"></param>
            <param name="keyValueCollection"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.Validators.VerifyRulePackageValidator.VerifyMany(System.Type,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Verify each member in the non-strongly typed dictionary.
            </summary>
            <param name="declaringType"></param>
            <param name="keyValueCollections"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.VerifyError">
            <summary>
            Verify the wrong information. <br />
            错误信息
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.VerifyError.ErrorMessage">
            <summary>
            Error message <br />
            错误信息
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.VerifyError.ViaValidatorType">
            <summary>
            The type of validator that generated this error message. <br />
            验证其类型，默认为内建验证器。
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.VerifyError.ValidatorName">
            <summary>
            The name of the validator that generated the error message. <br />
            验证其名称，默认为 BuildInValidator
            </summary>
        </member>
        <member name="T:CosmosStack.Validation.VerifyFailure">
            <summary>
            It is used to keep the information of verification failure. <br />
            验证失败信息
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.VerifyFailure.#ctor(System.String,System.String,System.Object)">
            <summary>
            Create an instance of VerifyFailure.
            </summary>
            <param name="propertyName"></param>
            <param name="errorMessage"></param>
            <param name="verifiedValue"></param>
        </member>
        <member name="P:CosmosStack.Validation.VerifyFailure.PropertyName">
            <summary>
            The name of property <br />
            被验证的属性名
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.VerifyFailure.ErrorMessage">
            <summary>
            The error message <br />
            错误信息
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.VerifyFailure.VerifiedValue">
            <summary>
            The verified value <br />
            验证的值
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.VerifyFailure.Details">
            <summary>
            Error details <br />
            错误详情
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.VerifyFailure.Code">
            <summary>
            Error code <br />
            错误代码
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.VerifyFailure.ToString">
            <inheritdoc />
        </member>
        <member name="M:CosmosStack.Validation.VerifyFailure.ToStringVal">
            <summary>
            To Structured StringVal <br />
            转换为结构化字符串值
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.VerifyFailure.Create(System.String,System.String)">
            <summary>
            Create a VerifyFailure object based on the given parameters.
            </summary>
            <param name="propertyName"></param>
            <param name="errorMessage"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.VerifyFailure.Create(System.String,System.String,System.Object)">
            <summary>
            Create a VerifyFailure object based on the given parameters.
            </summary>
            <param name="propertyName"></param>
            <param name="errorMessage"></param>
            <param name="verifiedValue"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.VerifyResult">
            <summary>
            The object containing the verification result. <br />
            验证结果
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.VerifyResult.#ctor">
            <summary>
            Create an instance of VerifyResult.
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.VerifyResult.#ctor(CosmosStack.Validation.VerifyFailure)">
            <summary>
            Create an instance of VerifyResult.
            </summary>
            <param name="failure"></param>
        </member>
        <member name="M:CosmosStack.Validation.VerifyResult.#ctor(System.Collections.Generic.IEnumerable{CosmosStack.Validation.VerifyFailure})">
            <summary>
            Create an instance of VerifyResult.
            </summary>
            <param name="failures"></param>
        </member>
        <member name="P:CosmosStack.Validation.VerifyResult.NameOfExecutedRules">
            <summary>
            Name collection of executed validation rules. 
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.VerifyResult.IsValid">
            <summary>
            Return the verification result.
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.VerifyResult.Errors">
            <summary>
            Return all error messages.
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.VerifyResult.MemberNames">
            <summary>
            Returns the names of all fields with errors.
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.VerifyResult.ToString">
            <summary>
            Output the result of VerifyResult as a string, and separate each VerifyFailure message with a newline character.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.VerifyResult.ToString(System.String)">
            <summary>
            Output the result of VerifyResult as a string, and use the given separator to separate each VerifyFailure message.
            </summary>
            <param name="separator"></param>
            <returns></returns>
        </member>
        <member name="P:CosmosStack.Validation.VerifyResult.Success">
            <summary>
            Returns a VerifyResult object marked as successful.
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.VerifyResult.IsSuccess(CosmosStack.Validation.VerifyResult)">
            <summary>
            Determine whether the given VerifyResult object is marked as a successful verification.
            </summary>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="P:CosmosStack.Validation.VerifyResult.ByDesign">
            <summary>
            For design reasons, return verification failure.
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.VerifyResult.NullReference">
            <summary>
            Because it is a null reference, the return verification failed.
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.VerifyResult.NullReferenceWith(System.String)">
            <summary>
            Because it is a null reference, the verification failed with the given error message returned.
            </summary>
            <param name="paramName"></param>
            <returns></returns>
        </member>
        <member name="P:CosmosStack.Validation.VerifyResult.UnexpectedType">
            <summary>
            Since it is not the expected type, the return verification failed.
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.VerifyResult.UnexpectedTypeWith(System.String)">
            <summary>
            Since it is not the expected type, the verification failed with the given error message.
            </summary>
            <param name="paramName"></param>
            <returns></returns>
        </member>
        <member name="P:CosmosStack.Validation.VerifyResult.UnregisterProjectForSuchType">
            <summary>
            No rules are registered for this type, and verification failure is returned.
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.VerifyResult.UnregisterProjectForSuchNamedType">
            <summary>
            No rules are registered for this type and name, and verification failure is returned.
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.VerifyResult.MemberIsNotExists(System.String)">
            <summary>
            The member does not exist, and the verification fails.
            </summary>
            <param name="memberName"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.VerifyResult.Merge(CosmosStack.Validation.VerifyResult,CosmosStack.Validation.VerifyResult[])">
            <summary>
            Combine multiple sub-results into one main result.
            </summary>
            <param name="masterResult"></param>
            <param name="slaveResults"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.VerifyResult.MakeTogether(System.Collections.Generic.List{CosmosStack.Validation.VerifyResult})">
            <summary>
            Combine multiple results into one result.
            </summary>
            <param name="results"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.VerifyResult.MakeTogether(CosmosStack.Validation.VerifyResult[])">
            <summary>
            Combine multiple results into one result.
            </summary>
            <param name="results"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.VerifyResult.ToList(CosmosStack.Validation.VerifyResult,CosmosStack.Validation.VerifyResult[])">
            <summary>
            Create a VerifyResultCollection object, which contains a set of given VerifyResult.
            </summary>
            <param name="masterResult"></param>
            <param name="slaveResults"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.VerifyResult.ToList(System.Collections.Generic.List{CosmosStack.Validation.VerifyResult})">
            <summary>
            Create a VerifyResultCollection object, which contains a set of given VerifyResult.
            </summary>
            <param name="results"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.VerifyResult.Raise">
            <summary>
            If the verification result fails, an exception is thrown.
            </summary>
            <exception cref="T:CosmosStack.Validation.ValidationException"></exception>
        </member>
        <member name="M:CosmosStack.Validation.VerifyResult.Raise(System.String)">
            <summary>
            If the verification result fails, an exception is thrown.
            </summary>
            <param name="message"></param>
            <exception cref="T:CosmosStack.Validation.ValidationException"></exception>
        </member>
        <member name="M:CosmosStack.Validation.VerifyResult.Raise(System.Int64,System.String)">
            <summary>
            If the verification result fails, an exception is thrown.
            </summary>
            <param name="errorCode"></param>
            <param name="message"></param>
            <exception cref="T:CosmosStack.Validation.ValidationException"></exception>
        </member>
        <member name="M:CosmosStack.Validation.VerifyResult.Raise(System.String,System.String)">
            <summary>
            If the verification result fails, an exception is thrown.
            </summary>
            <param name="flag"></param>
            <param name="message"></param>
            <exception cref="T:CosmosStack.Validation.ValidationException"></exception>
        </member>
        <member name="M:CosmosStack.Validation.VerifyResult.Raise(System.Int64,System.String,System.String)">
            <summary>
            If the verification result fails, an exception is thrown.
            </summary>
            <param name="errorCode"></param>
            <param name="flag"></param>
            <param name="message"></param>
            <exception cref="T:CosmosStack.Validation.ValidationException"></exception>
        </member>
        <member name="M:CosmosStack.Validation.VerifyResult.ToException">
            <summary>
            If the verification result fails, an exception will be returned.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.VerifyResult.ToException(System.String)">
            <summary>
            If the verification result fails, an exception will be returned.
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.VerifyResult.ToException(System.Int64,System.String)">
            <summary>
            If the verification result fails, an exception will be returned.
            </summary>
            <param name="errorCode"></param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.VerifyResult.ToException(System.String,System.String)">
            <summary>
            If the verification result fails, an exception will be returned.
            </summary>
            <param name="flag"></param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosStack.Validation.VerifyResult.ToException(System.Int64,System.String,System.String)">
            <summary>
            If the verification result fails, an exception will be returned.
            </summary>
            <param name="errorCode"></param>
            <param name="flag"></param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.VerifyResultCollection">
            <summary>
            A collection containing multiple VerifyResults. <br />
            一组验证结果
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.VerifyResultCollection.#ctor">
            <summary>
            Create an instance of VerifyResultCollection.
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.VerifyResultCollection.#ctor(System.Int32)">
            <summary>
            Create an instance of VerifyResultCollection.
            </summary>
            <param name="capacity"></param>
        </member>
        <member name="M:CosmosStack.Validation.VerifyResultCollection.#ctor(System.Collections.Generic.IEnumerable{CosmosStack.Validation.VerifyResult})">
            <summary>
            Create an instance of VerifyResultCollection.
            </summary>
            <param name="results"></param>
        </member>
        <member name="P:CosmosStack.Validation.VerifyResultCollection.IsValid">
            <summary>
            Return the verification result.
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.VerifyResultCollection.Errors">
            <summary>
            A collection of errors
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.VerifyResultCollection.MemberNames">
            <summary>
            Returns the names of all fields with errors.
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.VerifyResultCollection.GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary>
            <returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:CosmosStack.Validation.VerifyResultCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="P:CosmosStack.Validation.VerifyResultCollection.Empty">
            <summary>
            Create an empty VerifyResultCollection object.
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.VerifyResultCollection.ToOneVerifyResult">
            <summary>
            Combine multiple internal VerifyResults into one and return it.
            </summary>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.VerifyRuleMode">
            <summary>
            The effective mode of the value rule. <br />
            规则模式
            </summary>
        </member>
        <member name="F:CosmosStack.Validation.VerifyRuleMode.Append">
            <summary>
            Append <br />
            附加
            </summary>
        </member>
        <member name="F:CosmosStack.Validation.VerifyRuleMode.Overwrite">
            <summary>
            Overwrite <br />
            覆写
            </summary>
        </member>
        <member name="T:CosmosStack.Validation.VerifyRulePackage">
            <summary>
            Verify rule package <br />
            验证规则包
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.VerifyRulePackage.DeclaringType">
            <summary>
            Declaring Type <br />
            声明类型
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.VerifyRulePackage.Count">
            <summary>
            Count of rules <br />
            规则总数
            </summary>
            <returns></returns>
        </member>
        <member name="T:CosmosStack.Validation.VerifyMemberRulePackage">
            <summary>
            Verify member rule package <br />
            成员验证规则包
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.VerifyMemberRulePackage.DeclaringType">
            <summary>
            Declaring Type <br />
            声明类型
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.VerifyMemberRulePackage.MemberType">
            <summary>
            Member Type <br />
            成员类型
            </summary>
        </member>
        <member name="P:CosmosStack.Validation.VerifyMemberRulePackage.MemberName">
            <summary>
            Member Name <br />
            成员名称
            </summary>
        </member>
        <member name="M:CosmosStack.Validation.VerifyMemberRulePackage.Count">
            <summary>
            Count of rules <br />
            规则总数
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
